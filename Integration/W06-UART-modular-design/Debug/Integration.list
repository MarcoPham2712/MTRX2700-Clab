
Integration.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003e1c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000040c  08003fc0  08003fc0  00004fc0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080043cc  080043cc  000061f4  2**0
                  CONTENTS
  4 .ARM          00000008  080043cc  080043cc  000053cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080043d4  080043d4  000061f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080043d4  080043d4  000053d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080043d8  080043d8  000053d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f4  20000000  080043dc  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000061f4  2**0
                  CONTENTS
 10 .bss          000002a4  200001f4  200001f4  000061f4  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000498  20000498  000061f4  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000061f4  2**0
                  CONTENTS, READONLY
 13 .debug_info   000026c0  00000000  00000000  0000621e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000a31  00000000  00000000  000088de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000208  00000000  00000000  00009310  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000162  00000000  00000000  00009518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00016d19  00000000  00000000  0000967a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002a42  00000000  00000000  00020393  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00078528  00000000  00000000  00022dd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0009b2fd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001754  00000000  00000000  0009b340  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000074  00000000  00000000  0009ca94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f4 	.word	0x200001f4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003fa4 	.word	0x08003fa4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f8 	.word	0x200001f8
 80001dc:	08003fa4 	.word	0x08003fa4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <strcmp>:
 8000290:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000294:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000298:	2a01      	cmp	r2, #1
 800029a:	bf28      	it	cs
 800029c:	429a      	cmpcs	r2, r3
 800029e:	d0f7      	beq.n	8000290 <strcmp>
 80002a0:	1ad0      	subs	r0, r2, r3
 80002a2:	4770      	bx	lr

080002a4 <__aeabi_drsub>:
 80002a4:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a8:	e002      	b.n	80002b0 <__adddf3>
 80002aa:	bf00      	nop

080002ac <__aeabi_dsub>:
 80002ac:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002b0 <__adddf3>:
 80002b0:	b530      	push	{r4, r5, lr}
 80002b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002ba:	ea94 0f05 	teq	r4, r5
 80002be:	bf08      	it	eq
 80002c0:	ea90 0f02 	teqeq	r0, r2
 80002c4:	bf1f      	itttt	ne
 80002c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d6:	f000 80e2 	beq.w	800049e <__adddf3+0x1ee>
 80002da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002e2:	bfb8      	it	lt
 80002e4:	426d      	neglt	r5, r5
 80002e6:	dd0c      	ble.n	8000302 <__adddf3+0x52>
 80002e8:	442c      	add	r4, r5
 80002ea:	ea80 0202 	eor.w	r2, r0, r2
 80002ee:	ea81 0303 	eor.w	r3, r1, r3
 80002f2:	ea82 0000 	eor.w	r0, r2, r0
 80002f6:	ea83 0101 	eor.w	r1, r3, r1
 80002fa:	ea80 0202 	eor.w	r2, r0, r2
 80002fe:	ea81 0303 	eor.w	r3, r1, r3
 8000302:	2d36      	cmp	r5, #54	@ 0x36
 8000304:	bf88      	it	hi
 8000306:	bd30      	pophi	{r4, r5, pc}
 8000308:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800030c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000310:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000314:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x70>
 800031a:	4240      	negs	r0, r0
 800031c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000320:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000324:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000328:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800032c:	d002      	beq.n	8000334 <__adddf3+0x84>
 800032e:	4252      	negs	r2, r2
 8000330:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000334:	ea94 0f05 	teq	r4, r5
 8000338:	f000 80a7 	beq.w	800048a <__adddf3+0x1da>
 800033c:	f1a4 0401 	sub.w	r4, r4, #1
 8000340:	f1d5 0e20 	rsbs	lr, r5, #32
 8000344:	db0d      	blt.n	8000362 <__adddf3+0xb2>
 8000346:	fa02 fc0e 	lsl.w	ip, r2, lr
 800034a:	fa22 f205 	lsr.w	r2, r2, r5
 800034e:	1880      	adds	r0, r0, r2
 8000350:	f141 0100 	adc.w	r1, r1, #0
 8000354:	fa03 f20e 	lsl.w	r2, r3, lr
 8000358:	1880      	adds	r0, r0, r2
 800035a:	fa43 f305 	asr.w	r3, r3, r5
 800035e:	4159      	adcs	r1, r3
 8000360:	e00e      	b.n	8000380 <__adddf3+0xd0>
 8000362:	f1a5 0520 	sub.w	r5, r5, #32
 8000366:	f10e 0e20 	add.w	lr, lr, #32
 800036a:	2a01      	cmp	r2, #1
 800036c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000370:	bf28      	it	cs
 8000372:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	18c0      	adds	r0, r0, r3
 800037c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000380:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000384:	d507      	bpl.n	8000396 <__adddf3+0xe6>
 8000386:	f04f 0e00 	mov.w	lr, #0
 800038a:	f1dc 0c00 	rsbs	ip, ip, #0
 800038e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000392:	eb6e 0101 	sbc.w	r1, lr, r1
 8000396:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800039a:	d31b      	bcc.n	80003d4 <__adddf3+0x124>
 800039c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003a0:	d30c      	bcc.n	80003bc <__adddf3+0x10c>
 80003a2:	0849      	lsrs	r1, r1, #1
 80003a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003ac:	f104 0401 	add.w	r4, r4, #1
 80003b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b8:	f080 809a 	bcs.w	80004f0 <__adddf3+0x240>
 80003bc:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003c0:	bf08      	it	eq
 80003c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c6:	f150 0000 	adcs.w	r0, r0, #0
 80003ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ce:	ea41 0105 	orr.w	r1, r1, r5
 80003d2:	bd30      	pop	{r4, r5, pc}
 80003d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d8:	4140      	adcs	r0, r0
 80003da:	eb41 0101 	adc.w	r1, r1, r1
 80003de:	3c01      	subs	r4, #1
 80003e0:	bf28      	it	cs
 80003e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e6:	d2e9      	bcs.n	80003bc <__adddf3+0x10c>
 80003e8:	f091 0f00 	teq	r1, #0
 80003ec:	bf04      	itt	eq
 80003ee:	4601      	moveq	r1, r0
 80003f0:	2000      	moveq	r0, #0
 80003f2:	fab1 f381 	clz	r3, r1
 80003f6:	bf08      	it	eq
 80003f8:	3320      	addeq	r3, #32
 80003fa:	f1a3 030b 	sub.w	r3, r3, #11
 80003fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000402:	da0c      	bge.n	800041e <__adddf3+0x16e>
 8000404:	320c      	adds	r2, #12
 8000406:	dd08      	ble.n	800041a <__adddf3+0x16a>
 8000408:	f102 0c14 	add.w	ip, r2, #20
 800040c:	f1c2 020c 	rsb	r2, r2, #12
 8000410:	fa01 f00c 	lsl.w	r0, r1, ip
 8000414:	fa21 f102 	lsr.w	r1, r1, r2
 8000418:	e00c      	b.n	8000434 <__adddf3+0x184>
 800041a:	f102 0214 	add.w	r2, r2, #20
 800041e:	bfd8      	it	le
 8000420:	f1c2 0c20 	rsble	ip, r2, #32
 8000424:	fa01 f102 	lsl.w	r1, r1, r2
 8000428:	fa20 fc0c 	lsr.w	ip, r0, ip
 800042c:	bfdc      	itt	le
 800042e:	ea41 010c 	orrle.w	r1, r1, ip
 8000432:	4090      	lslle	r0, r2
 8000434:	1ae4      	subs	r4, r4, r3
 8000436:	bfa2      	ittt	ge
 8000438:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800043c:	4329      	orrge	r1, r5
 800043e:	bd30      	popge	{r4, r5, pc}
 8000440:	ea6f 0404 	mvn.w	r4, r4
 8000444:	3c1f      	subs	r4, #31
 8000446:	da1c      	bge.n	8000482 <__adddf3+0x1d2>
 8000448:	340c      	adds	r4, #12
 800044a:	dc0e      	bgt.n	800046a <__adddf3+0x1ba>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0220 	rsb	r2, r4, #32
 8000454:	fa20 f004 	lsr.w	r0, r0, r4
 8000458:	fa01 f302 	lsl.w	r3, r1, r2
 800045c:	ea40 0003 	orr.w	r0, r0, r3
 8000460:	fa21 f304 	lsr.w	r3, r1, r4
 8000464:	ea45 0103 	orr.w	r1, r5, r3
 8000468:	bd30      	pop	{r4, r5, pc}
 800046a:	f1c4 040c 	rsb	r4, r4, #12
 800046e:	f1c4 0220 	rsb	r2, r4, #32
 8000472:	fa20 f002 	lsr.w	r0, r0, r2
 8000476:	fa01 f304 	lsl.w	r3, r1, r4
 800047a:	ea40 0003 	orr.w	r0, r0, r3
 800047e:	4629      	mov	r1, r5
 8000480:	bd30      	pop	{r4, r5, pc}
 8000482:	fa21 f004 	lsr.w	r0, r1, r4
 8000486:	4629      	mov	r1, r5
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	f094 0f00 	teq	r4, #0
 800048e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8000492:	bf06      	itte	eq
 8000494:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000498:	3401      	addeq	r4, #1
 800049a:	3d01      	subne	r5, #1
 800049c:	e74e      	b.n	800033c <__adddf3+0x8c>
 800049e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004a2:	bf18      	it	ne
 80004a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a8:	d029      	beq.n	80004fe <__adddf3+0x24e>
 80004aa:	ea94 0f05 	teq	r4, r5
 80004ae:	bf08      	it	eq
 80004b0:	ea90 0f02 	teqeq	r0, r2
 80004b4:	d005      	beq.n	80004c2 <__adddf3+0x212>
 80004b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004ba:	bf04      	itt	eq
 80004bc:	4619      	moveq	r1, r3
 80004be:	4610      	moveq	r0, r2
 80004c0:	bd30      	pop	{r4, r5, pc}
 80004c2:	ea91 0f03 	teq	r1, r3
 80004c6:	bf1e      	ittt	ne
 80004c8:	2100      	movne	r1, #0
 80004ca:	2000      	movne	r0, #0
 80004cc:	bd30      	popne	{r4, r5, pc}
 80004ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004d2:	d105      	bne.n	80004e0 <__adddf3+0x230>
 80004d4:	0040      	lsls	r0, r0, #1
 80004d6:	4149      	adcs	r1, r1
 80004d8:	bf28      	it	cs
 80004da:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004de:	bd30      	pop	{r4, r5, pc}
 80004e0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e4:	bf3c      	itt	cc
 80004e6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004ea:	bd30      	popcc	{r4, r5, pc}
 80004ec:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004f0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f8:	f04f 0000 	mov.w	r0, #0
 80004fc:	bd30      	pop	{r4, r5, pc}
 80004fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000502:	bf1a      	itte	ne
 8000504:	4619      	movne	r1, r3
 8000506:	4610      	movne	r0, r2
 8000508:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800050c:	bf1c      	itt	ne
 800050e:	460b      	movne	r3, r1
 8000510:	4602      	movne	r2, r0
 8000512:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000516:	bf06      	itte	eq
 8000518:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800051c:	ea91 0f03 	teqeq	r1, r3
 8000520:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000524:	bd30      	pop	{r4, r5, pc}
 8000526:	bf00      	nop

08000528 <__aeabi_ui2d>:
 8000528:	f090 0f00 	teq	r0, #0
 800052c:	bf04      	itt	eq
 800052e:	2100      	moveq	r1, #0
 8000530:	4770      	bxeq	lr
 8000532:	b530      	push	{r4, r5, lr}
 8000534:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000538:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800053c:	f04f 0500 	mov.w	r5, #0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e750      	b.n	80003e8 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_i2d>:
 8000548:	f090 0f00 	teq	r0, #0
 800054c:	bf04      	itt	eq
 800054e:	2100      	moveq	r1, #0
 8000550:	4770      	bxeq	lr
 8000552:	b530      	push	{r4, r5, lr}
 8000554:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000558:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800055c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000560:	bf48      	it	mi
 8000562:	4240      	negmi	r0, r0
 8000564:	f04f 0100 	mov.w	r1, #0
 8000568:	e73e      	b.n	80003e8 <__adddf3+0x138>
 800056a:	bf00      	nop

0800056c <__aeabi_f2d>:
 800056c:	0042      	lsls	r2, r0, #1
 800056e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000572:	ea4f 0131 	mov.w	r1, r1, rrx
 8000576:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800057a:	bf1f      	itttt	ne
 800057c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000580:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000584:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000588:	4770      	bxne	lr
 800058a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058e:	bf08      	it	eq
 8000590:	4770      	bxeq	lr
 8000592:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000596:	bf04      	itt	eq
 8000598:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 800059c:	4770      	bxeq	lr
 800059e:	b530      	push	{r4, r5, lr}
 80005a0:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005ac:	e71c      	b.n	80003e8 <__adddf3+0x138>
 80005ae:	bf00      	nop

080005b0 <__aeabi_ul2d>:
 80005b0:	ea50 0201 	orrs.w	r2, r0, r1
 80005b4:	bf08      	it	eq
 80005b6:	4770      	bxeq	lr
 80005b8:	b530      	push	{r4, r5, lr}
 80005ba:	f04f 0500 	mov.w	r5, #0
 80005be:	e00a      	b.n	80005d6 <__aeabi_l2d+0x16>

080005c0 <__aeabi_l2d>:
 80005c0:	ea50 0201 	orrs.w	r2, r0, r1
 80005c4:	bf08      	it	eq
 80005c6:	4770      	bxeq	lr
 80005c8:	b530      	push	{r4, r5, lr}
 80005ca:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ce:	d502      	bpl.n	80005d6 <__aeabi_l2d+0x16>
 80005d0:	4240      	negs	r0, r0
 80005d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005da:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005e2:	f43f aed8 	beq.w	8000396 <__adddf3+0xe6>
 80005e6:	f04f 0203 	mov.w	r2, #3
 80005ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ee:	bf18      	it	ne
 80005f0:	3203      	addne	r2, #3
 80005f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f6:	bf18      	it	ne
 80005f8:	3203      	addne	r2, #3
 80005fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fe:	f1c2 0320 	rsb	r3, r2, #32
 8000602:	fa00 fc03 	lsl.w	ip, r0, r3
 8000606:	fa20 f002 	lsr.w	r0, r0, r2
 800060a:	fa01 fe03 	lsl.w	lr, r1, r3
 800060e:	ea40 000e 	orr.w	r0, r0, lr
 8000612:	fa21 f102 	lsr.w	r1, r1, r2
 8000616:	4414      	add	r4, r2
 8000618:	e6bd      	b.n	8000396 <__adddf3+0xe6>
 800061a:	bf00      	nop

0800061c <__aeabi_dmul>:
 800061c:	b570      	push	{r4, r5, r6, lr}
 800061e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000622:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000626:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800062a:	bf1d      	ittte	ne
 800062c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000630:	ea94 0f0c 	teqne	r4, ip
 8000634:	ea95 0f0c 	teqne	r5, ip
 8000638:	f000 f8de 	bleq	80007f8 <__aeabi_dmul+0x1dc>
 800063c:	442c      	add	r4, r5
 800063e:	ea81 0603 	eor.w	r6, r1, r3
 8000642:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000646:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800064a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064e:	bf18      	it	ne
 8000650:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800065c:	d038      	beq.n	80006d0 <__aeabi_dmul+0xb4>
 800065e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000662:	f04f 0500 	mov.w	r5, #0
 8000666:	fbe1 e502 	umlal	lr, r5, r1, r2
 800066a:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800066e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000672:	f04f 0600 	mov.w	r6, #0
 8000676:	fbe1 5603 	umlal	r5, r6, r1, r3
 800067a:	f09c 0f00 	teq	ip, #0
 800067e:	bf18      	it	ne
 8000680:	f04e 0e01 	orrne.w	lr, lr, #1
 8000684:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000688:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 800068c:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000690:	d204      	bcs.n	800069c <__aeabi_dmul+0x80>
 8000692:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000696:	416d      	adcs	r5, r5
 8000698:	eb46 0606 	adc.w	r6, r6, r6
 800069c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006b0:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006b4:	bf88      	it	hi
 80006b6:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006ba:	d81e      	bhi.n	80006fa <__aeabi_dmul+0xde>
 80006bc:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	bd70      	pop	{r4, r5, r6, pc}
 80006d0:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006d4:	ea46 0101 	orr.w	r1, r6, r1
 80006d8:	ea40 0002 	orr.w	r0, r0, r2
 80006dc:	ea81 0103 	eor.w	r1, r1, r3
 80006e0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e4:	bfc2      	ittt	gt
 80006e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ee:	bd70      	popgt	{r4, r5, r6, pc}
 80006f0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006f4:	f04f 0e00 	mov.w	lr, #0
 80006f8:	3c01      	subs	r4, #1
 80006fa:	f300 80ab 	bgt.w	8000854 <__aeabi_dmul+0x238>
 80006fe:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000702:	bfde      	ittt	le
 8000704:	2000      	movle	r0, #0
 8000706:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800070a:	bd70      	pople	{r4, r5, r6, pc}
 800070c:	f1c4 0400 	rsb	r4, r4, #0
 8000710:	3c20      	subs	r4, #32
 8000712:	da35      	bge.n	8000780 <__aeabi_dmul+0x164>
 8000714:	340c      	adds	r4, #12
 8000716:	dc1b      	bgt.n	8000750 <__aeabi_dmul+0x134>
 8000718:	f104 0414 	add.w	r4, r4, #20
 800071c:	f1c4 0520 	rsb	r5, r4, #32
 8000720:	fa00 f305 	lsl.w	r3, r0, r5
 8000724:	fa20 f004 	lsr.w	r0, r0, r4
 8000728:	fa01 f205 	lsl.w	r2, r1, r5
 800072c:	ea40 0002 	orr.w	r0, r0, r2
 8000730:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000734:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000738:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800073c:	fa21 f604 	lsr.w	r6, r1, r4
 8000740:	eb42 0106 	adc.w	r1, r2, r6
 8000744:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000748:	bf08      	it	eq
 800074a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074e:	bd70      	pop	{r4, r5, r6, pc}
 8000750:	f1c4 040c 	rsb	r4, r4, #12
 8000754:	f1c4 0520 	rsb	r5, r4, #32
 8000758:	fa00 f304 	lsl.w	r3, r0, r4
 800075c:	fa20 f005 	lsr.w	r0, r0, r5
 8000760:	fa01 f204 	lsl.w	r2, r1, r4
 8000764:	ea40 0002 	orr.w	r0, r0, r2
 8000768:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800076c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000770:	f141 0100 	adc.w	r1, r1, #0
 8000774:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000778:	bf08      	it	eq
 800077a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f1c4 0520 	rsb	r5, r4, #32
 8000784:	fa00 f205 	lsl.w	r2, r0, r5
 8000788:	ea4e 0e02 	orr.w	lr, lr, r2
 800078c:	fa20 f304 	lsr.w	r3, r0, r4
 8000790:	fa01 f205 	lsl.w	r2, r1, r5
 8000794:	ea43 0302 	orr.w	r3, r3, r2
 8000798:	fa21 f004 	lsr.w	r0, r1, r4
 800079c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007a0:	fa21 f204 	lsr.w	r2, r1, r4
 80007a4:	ea20 0002 	bic.w	r0, r0, r2
 80007a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007b0:	bf08      	it	eq
 80007b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b6:	bd70      	pop	{r4, r5, r6, pc}
 80007b8:	f094 0f00 	teq	r4, #0
 80007bc:	d10f      	bne.n	80007de <__aeabi_dmul+0x1c2>
 80007be:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007c2:	0040      	lsls	r0, r0, #1
 80007c4:	eb41 0101 	adc.w	r1, r1, r1
 80007c8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007cc:	bf08      	it	eq
 80007ce:	3c01      	subeq	r4, #1
 80007d0:	d0f7      	beq.n	80007c2 <__aeabi_dmul+0x1a6>
 80007d2:	ea41 0106 	orr.w	r1, r1, r6
 80007d6:	f095 0f00 	teq	r5, #0
 80007da:	bf18      	it	ne
 80007dc:	4770      	bxne	lr
 80007de:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007e2:	0052      	lsls	r2, r2, #1
 80007e4:	eb43 0303 	adc.w	r3, r3, r3
 80007e8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007ec:	bf08      	it	eq
 80007ee:	3d01      	subeq	r5, #1
 80007f0:	d0f7      	beq.n	80007e2 <__aeabi_dmul+0x1c6>
 80007f2:	ea43 0306 	orr.w	r3, r3, r6
 80007f6:	4770      	bx	lr
 80007f8:	ea94 0f0c 	teq	r4, ip
 80007fc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000800:	bf18      	it	ne
 8000802:	ea95 0f0c 	teqne	r5, ip
 8000806:	d00c      	beq.n	8000822 <__aeabi_dmul+0x206>
 8000808:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800080c:	bf18      	it	ne
 800080e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000812:	d1d1      	bne.n	80007b8 <__aeabi_dmul+0x19c>
 8000814:	ea81 0103 	eor.w	r1, r1, r3
 8000818:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800081c:	f04f 0000 	mov.w	r0, #0
 8000820:	bd70      	pop	{r4, r5, r6, pc}
 8000822:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000826:	bf06      	itte	eq
 8000828:	4610      	moveq	r0, r2
 800082a:	4619      	moveq	r1, r3
 800082c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000830:	d019      	beq.n	8000866 <__aeabi_dmul+0x24a>
 8000832:	ea94 0f0c 	teq	r4, ip
 8000836:	d102      	bne.n	800083e <__aeabi_dmul+0x222>
 8000838:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800083c:	d113      	bne.n	8000866 <__aeabi_dmul+0x24a>
 800083e:	ea95 0f0c 	teq	r5, ip
 8000842:	d105      	bne.n	8000850 <__aeabi_dmul+0x234>
 8000844:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000848:	bf1c      	itt	ne
 800084a:	4610      	movne	r0, r2
 800084c:	4619      	movne	r1, r3
 800084e:	d10a      	bne.n	8000866 <__aeabi_dmul+0x24a>
 8000850:	ea81 0103 	eor.w	r1, r1, r3
 8000854:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000858:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800085c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000860:	f04f 0000 	mov.w	r0, #0
 8000864:	bd70      	pop	{r4, r5, r6, pc}
 8000866:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800086a:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800086e:	bd70      	pop	{r4, r5, r6, pc}

08000870 <__aeabi_ddiv>:
 8000870:	b570      	push	{r4, r5, r6, lr}
 8000872:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000876:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800087a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087e:	bf1d      	ittte	ne
 8000880:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000884:	ea94 0f0c 	teqne	r4, ip
 8000888:	ea95 0f0c 	teqne	r5, ip
 800088c:	f000 f8a7 	bleq	80009de <__aeabi_ddiv+0x16e>
 8000890:	eba4 0405 	sub.w	r4, r4, r5
 8000894:	ea81 0e03 	eor.w	lr, r1, r3
 8000898:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800089c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008a0:	f000 8088 	beq.w	80009b4 <__aeabi_ddiv+0x144>
 80008a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a8:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c4:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008c8:	429d      	cmp	r5, r3
 80008ca:	bf08      	it	eq
 80008cc:	4296      	cmpeq	r6, r2
 80008ce:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008d2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008d6:	d202      	bcs.n	80008de <__aeabi_ddiv+0x6e>
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	1ab6      	subs	r6, r6, r2
 80008e0:	eb65 0503 	sbc.w	r5, r5, r3
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ee:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fa:	bf22      	ittt	cs
 80008fc:	1ab6      	subcs	r6, r6, r2
 80008fe:	4675      	movcs	r5, lr
 8000900:	ea40 000c 	orrcs.w	r0, r0, ip
 8000904:	085b      	lsrs	r3, r3, #1
 8000906:	ea4f 0232 	mov.w	r2, r2, rrx
 800090a:	ebb6 0e02 	subs.w	lr, r6, r2
 800090e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000912:	bf22      	ittt	cs
 8000914:	1ab6      	subcs	r6, r6, r2
 8000916:	4675      	movcs	r5, lr
 8000918:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000922:	ebb6 0e02 	subs.w	lr, r6, r2
 8000926:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092a:	bf22      	ittt	cs
 800092c:	1ab6      	subcs	r6, r6, r2
 800092e:	4675      	movcs	r5, lr
 8000930:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000934:	085b      	lsrs	r3, r3, #1
 8000936:	ea4f 0232 	mov.w	r2, r2, rrx
 800093a:	ebb6 0e02 	subs.w	lr, r6, r2
 800093e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000942:	bf22      	ittt	cs
 8000944:	1ab6      	subcs	r6, r6, r2
 8000946:	4675      	movcs	r5, lr
 8000948:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800094c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000950:	d018      	beq.n	8000984 <__aeabi_ddiv+0x114>
 8000952:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000956:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800095a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000962:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000966:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800096a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096e:	d1c0      	bne.n	80008f2 <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	d10b      	bne.n	800098e <__aeabi_ddiv+0x11e>
 8000976:	ea41 0100 	orr.w	r1, r1, r0
 800097a:	f04f 0000 	mov.w	r0, #0
 800097e:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000982:	e7b6      	b.n	80008f2 <__aeabi_ddiv+0x82>
 8000984:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000988:	bf04      	itt	eq
 800098a:	4301      	orreq	r1, r0
 800098c:	2000      	moveq	r0, #0
 800098e:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000992:	bf88      	it	hi
 8000994:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000998:	f63f aeaf 	bhi.w	80006fa <__aeabi_dmul+0xde>
 800099c:	ebb5 0c03 	subs.w	ip, r5, r3
 80009a0:	bf04      	itt	eq
 80009a2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009aa:	f150 0000 	adcs.w	r0, r0, #0
 80009ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009b2:	bd70      	pop	{r4, r5, r6, pc}
 80009b4:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009c0:	bfc2      	ittt	gt
 80009c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ca:	bd70      	popgt	{r4, r5, r6, pc}
 80009cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009d0:	f04f 0e00 	mov.w	lr, #0
 80009d4:	3c01      	subs	r4, #1
 80009d6:	e690      	b.n	80006fa <__aeabi_dmul+0xde>
 80009d8:	ea45 0e06 	orr.w	lr, r5, r6
 80009dc:	e68d      	b.n	80006fa <__aeabi_dmul+0xde>
 80009de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009e2:	ea94 0f0c 	teq	r4, ip
 80009e6:	bf08      	it	eq
 80009e8:	ea95 0f0c 	teqeq	r5, ip
 80009ec:	f43f af3b 	beq.w	8000866 <__aeabi_dmul+0x24a>
 80009f0:	ea94 0f0c 	teq	r4, ip
 80009f4:	d10a      	bne.n	8000a0c <__aeabi_ddiv+0x19c>
 80009f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009fa:	f47f af34 	bne.w	8000866 <__aeabi_dmul+0x24a>
 80009fe:	ea95 0f0c 	teq	r5, ip
 8000a02:	f47f af25 	bne.w	8000850 <__aeabi_dmul+0x234>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e72c      	b.n	8000866 <__aeabi_dmul+0x24a>
 8000a0c:	ea95 0f0c 	teq	r5, ip
 8000a10:	d106      	bne.n	8000a20 <__aeabi_ddiv+0x1b0>
 8000a12:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a16:	f43f aefd 	beq.w	8000814 <__aeabi_dmul+0x1f8>
 8000a1a:	4610      	mov	r0, r2
 8000a1c:	4619      	mov	r1, r3
 8000a1e:	e722      	b.n	8000866 <__aeabi_dmul+0x24a>
 8000a20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a24:	bf18      	it	ne
 8000a26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a2a:	f47f aec5 	bne.w	80007b8 <__aeabi_dmul+0x19c>
 8000a2e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a32:	f47f af0d 	bne.w	8000850 <__aeabi_dmul+0x234>
 8000a36:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a3a:	f47f aeeb 	bne.w	8000814 <__aeabi_dmul+0x1f8>
 8000a3e:	e712      	b.n	8000866 <__aeabi_dmul+0x24a>

08000a40 <__gedf2>:
 8000a40:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a44:	e006      	b.n	8000a54 <__cmpdf2+0x4>
 8000a46:	bf00      	nop

08000a48 <__ledf2>:
 8000a48:	f04f 0c01 	mov.w	ip, #1
 8000a4c:	e002      	b.n	8000a54 <__cmpdf2+0x4>
 8000a4e:	bf00      	nop

08000a50 <__cmpdf2>:
 8000a50:	f04f 0c01 	mov.w	ip, #1
 8000a54:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a58:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a5c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	bf18      	it	ne
 8000a66:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a6a:	d01b      	beq.n	8000aa4 <__cmpdf2+0x54>
 8000a6c:	b001      	add	sp, #4
 8000a6e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a72:	bf0c      	ite	eq
 8000a74:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a78:	ea91 0f03 	teqne	r1, r3
 8000a7c:	bf02      	ittt	eq
 8000a7e:	ea90 0f02 	teqeq	r0, r2
 8000a82:	2000      	moveq	r0, #0
 8000a84:	4770      	bxeq	lr
 8000a86:	f110 0f00 	cmn.w	r0, #0
 8000a8a:	ea91 0f03 	teq	r1, r3
 8000a8e:	bf58      	it	pl
 8000a90:	4299      	cmppl	r1, r3
 8000a92:	bf08      	it	eq
 8000a94:	4290      	cmpeq	r0, r2
 8000a96:	bf2c      	ite	cs
 8000a98:	17d8      	asrcs	r0, r3, #31
 8000a9a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9e:	f040 0001 	orr.w	r0, r0, #1
 8000aa2:	4770      	bx	lr
 8000aa4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aac:	d102      	bne.n	8000ab4 <__cmpdf2+0x64>
 8000aae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ab2:	d107      	bne.n	8000ac4 <__cmpdf2+0x74>
 8000ab4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d1d6      	bne.n	8000a6c <__cmpdf2+0x1c>
 8000abe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ac2:	d0d3      	beq.n	8000a6c <__cmpdf2+0x1c>
 8000ac4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_cdrcmple>:
 8000acc:	4684      	mov	ip, r0
 8000ace:	4610      	mov	r0, r2
 8000ad0:	4662      	mov	r2, ip
 8000ad2:	468c      	mov	ip, r1
 8000ad4:	4619      	mov	r1, r3
 8000ad6:	4663      	mov	r3, ip
 8000ad8:	e000      	b.n	8000adc <__aeabi_cdcmpeq>
 8000ada:	bf00      	nop

08000adc <__aeabi_cdcmpeq>:
 8000adc:	b501      	push	{r0, lr}
 8000ade:	f7ff ffb7 	bl	8000a50 <__cmpdf2>
 8000ae2:	2800      	cmp	r0, #0
 8000ae4:	bf48      	it	mi
 8000ae6:	f110 0f00 	cmnmi.w	r0, #0
 8000aea:	bd01      	pop	{r0, pc}

08000aec <__aeabi_dcmpeq>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff fff4 	bl	8000adc <__aeabi_cdcmpeq>
 8000af4:	bf0c      	ite	eq
 8000af6:	2001      	moveq	r0, #1
 8000af8:	2000      	movne	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmplt>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffea 	bl	8000adc <__aeabi_cdcmpeq>
 8000b08:	bf34      	ite	cc
 8000b0a:	2001      	movcc	r0, #1
 8000b0c:	2000      	movcs	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmple>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffe0 	bl	8000adc <__aeabi_cdcmpeq>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpge>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffce 	bl	8000acc <__aeabi_cdrcmple>
 8000b30:	bf94      	ite	ls
 8000b32:	2001      	movls	r0, #1
 8000b34:	2000      	movhi	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpgt>:
 8000b3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b40:	f7ff ffc4 	bl	8000acc <__aeabi_cdrcmple>
 8000b44:	bf34      	ite	cc
 8000b46:	2001      	movcc	r0, #1
 8000b48:	2000      	movcs	r0, #0
 8000b4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4e:	bf00      	nop

08000b50 <__aeabi_dcmpun>:
 8000b50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b58:	d102      	bne.n	8000b60 <__aeabi_dcmpun+0x10>
 8000b5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5e:	d10a      	bne.n	8000b76 <__aeabi_dcmpun+0x26>
 8000b60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b68:	d102      	bne.n	8000b70 <__aeabi_dcmpun+0x20>
 8000b6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6e:	d102      	bne.n	8000b76 <__aeabi_dcmpun+0x26>
 8000b70:	f04f 0000 	mov.w	r0, #0
 8000b74:	4770      	bx	lr
 8000b76:	f04f 0001 	mov.w	r0, #1
 8000b7a:	4770      	bx	lr

08000b7c <__aeabi_d2iz>:
 8000b7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b80:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b84:	d215      	bcs.n	8000bb2 <__aeabi_d2iz+0x36>
 8000b86:	d511      	bpl.n	8000bac <__aeabi_d2iz+0x30>
 8000b88:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b90:	d912      	bls.n	8000bb8 <__aeabi_d2iz+0x3c>
 8000b92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b96:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000ba2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba6:	bf18      	it	ne
 8000ba8:	4240      	negne	r0, r0
 8000baa:	4770      	bx	lr
 8000bac:	f04f 0000 	mov.w	r0, #0
 8000bb0:	4770      	bx	lr
 8000bb2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb6:	d105      	bne.n	8000bc4 <__aeabi_d2iz+0x48>
 8000bb8:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bbc:	bf08      	it	eq
 8000bbe:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bc2:	4770      	bx	lr
 8000bc4:	f04f 0000 	mov.w	r0, #0
 8000bc8:	4770      	bx	lr
 8000bca:	bf00      	nop

08000bcc <TIM2_IRQHandler>:
// set a default value of NULL so that it won't be called until the
// function pointer is defined
void (*on_button_press)() = 0x00;

void TIM2_IRQHandler(void)
{
 8000bcc:	b580      	push	{r7, lr}
 8000bce:	af00      	add	r7, sp, #0
	// the status register tells us why the interrupt was called
	// UIF is from an overflow type event
	if ((TIM2->SR & TIM_SR_UIF) != 0){
 8000bd0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000bd4:	691b      	ldr	r3, [r3, #16]
 8000bd6:	f003 0301 	and.w	r3, r3, #1
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d00a      	beq.n	8000bf4 <TIM2_IRQHandler+0x28>
		// set the LED state to be a specific value
		TIM2->SR &= ~TIM_SR_UIF;
 8000bde:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000be2:	691b      	ldr	r3, [r3, #16]
 8000be4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000be8:	f023 0301 	bic.w	r3, r3, #1
 8000bec:	6113      	str	r3, [r2, #16]
		on_button_press();
 8000bee:	4b02      	ldr	r3, [pc, #8]	@ (8000bf8 <TIM2_IRQHandler+0x2c>)
 8000bf0:	681b      	ldr	r3, [r3, #0]
 8000bf2:	4798      	blx	r3

	}
}
 8000bf4:	bf00      	nop
 8000bf6:	bd80      	pop	{r7, pc}
 8000bf8:	20000210 	.word	0x20000210

08000bfc <led_chase_direction>:

void led_chase_direction(char direction)
{
 8000bfc:	b480      	push	{r7}
 8000bfe:	b083      	sub	sp, #12
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	4603      	mov	r3, r0
 8000c04:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 8000c06:	79fb      	ldrb	r3, [r7, #7]
 8000c08:	2b61      	cmp	r3, #97	@ 0x61
 8000c0a:	d005      	beq.n	8000c18 <led_chase_direction+0x1c>
 8000c0c:	2b63      	cmp	r3, #99	@ 0x63
 8000c0e:	d107      	bne.n	8000c20 <led_chase_direction+0x24>
		case 'c':
			on_button_press = &chase_led_c;
 8000c10:	4b06      	ldr	r3, [pc, #24]	@ (8000c2c <led_chase_direction+0x30>)
 8000c12:	4a07      	ldr	r2, [pc, #28]	@ (8000c30 <led_chase_direction+0x34>)
 8000c14:	601a      	str	r2, [r3, #0]
			break;
 8000c16:	e003      	b.n	8000c20 <led_chase_direction+0x24>
		case 'a':
			on_button_press = &chase_led_a;
 8000c18:	4b04      	ldr	r3, [pc, #16]	@ (8000c2c <led_chase_direction+0x30>)
 8000c1a:	4a06      	ldr	r2, [pc, #24]	@ (8000c34 <led_chase_direction+0x38>)
 8000c1c:	601a      	str	r2, [r3, #0]
			break;
 8000c1e:	bf00      	nop
	}
}
 8000c20:	bf00      	nop
 8000c22:	370c      	adds	r7, #12
 8000c24:	46bd      	mov	sp, r7
 8000c26:	bc80      	pop	{r7}
 8000c28:	4770      	bx	lr
 8000c2a:	bf00      	nop
 8000c2c:	20000210 	.word	0x20000210
 8000c30:	08000c39 	.word	0x08000c39
 8000c34:	08000c6d 	.word	0x08000c6d

08000c38 <chase_led_c>:

void chase_led_c()
{
 8000c38:	b480      	push	{r7}
 8000c3a:	b083      	sub	sp, #12
 8000c3c:	af00      	add	r7, sp, #0
	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000c3e:	4b0a      	ldr	r3, [pc, #40]	@ (8000c68 <chase_led_c+0x30>)
 8000c40:	607b      	str	r3, [r7, #4]

	*led_register <<= 1; // Shift LED clockwise by 1
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	781b      	ldrb	r3, [r3, #0]
 8000c46:	005b      	lsls	r3, r3, #1
 8000c48:	b2da      	uxtb	r2, r3
 8000c4a:	687b      	ldr	r3, [r7, #4]
 8000c4c:	701a      	strb	r2, [r3, #0]
	if (*led_register == 0) {
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	781b      	ldrb	r3, [r3, #0]
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	d102      	bne.n	8000c5c <chase_led_c+0x24>
		*led_register = 1; // If shift causes all lights off, turn first LED on
 8000c56:	687b      	ldr	r3, [r7, #4]
 8000c58:	2201      	movs	r2, #1
 8000c5a:	701a      	strb	r2, [r3, #0]
	}
}
 8000c5c:	bf00      	nop
 8000c5e:	370c      	adds	r7, #12
 8000c60:	46bd      	mov	sp, r7
 8000c62:	bc80      	pop	{r7}
 8000c64:	4770      	bx	lr
 8000c66:	bf00      	nop
 8000c68:	48001015 	.word	0x48001015

08000c6c <chase_led_a>:

void chase_led_a()
{
 8000c6c:	b480      	push	{r7}
 8000c6e:	b083      	sub	sp, #12
 8000c70:	af00      	add	r7, sp, #0
	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000c72:	4b09      	ldr	r3, [pc, #36]	@ (8000c98 <chase_led_a+0x2c>)
 8000c74:	607b      	str	r3, [r7, #4]
	if (*led_register != 0){
 8000c76:	687b      	ldr	r3, [r7, #4]
 8000c78:	781b      	ldrb	r3, [r3, #0]
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d003      	beq.n	8000c86 <chase_led_a+0x1a>
	*led_register =0;
 8000c7e:	687b      	ldr	r3, [r7, #4]
 8000c80:	2200      	movs	r2, #0
 8000c82:	701a      	strb	r2, [r3, #0]
}
	else{
		*led_register =0xFF;
	}
}
 8000c84:	e002      	b.n	8000c8c <chase_led_a+0x20>
		*led_register =0xFF;
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	22ff      	movs	r2, #255	@ 0xff
 8000c8a:	701a      	strb	r2, [r3, #0]
}
 8000c8c:	bf00      	nop
 8000c8e:	370c      	adds	r7, #12
 8000c90:	46bd      	mov	sp, r7
 8000c92:	bc80      	pop	{r7}
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop
 8000c98:	48001015 	.word	0x48001015

08000c9c <finished_transmission>:
// External variables for transmission defined elsewhere (interrupt.c)
extern uint8_t transmit_buffer[];
extern uint8_t transmit_index;
extern uint8_t transmit_length;
extern uint8_t is_transmitting;
void finished_transmission(uint8_t *user_buffer, uint32_t message_length) {
 8000c9c:	b5b0      	push	{r4, r5, r7, lr}
 8000c9e:	b084      	sub	sp, #16
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	6078      	str	r0, [r7, #4]
 8000ca4:	6039      	str	r1, [r7, #0]
    user_buffer[message_length] = '\0';
 8000ca6:	687a      	ldr	r2, [r7, #4]
 8000ca8:	683b      	ldr	r3, [r7, #0]
 8000caa:	4413      	add	r3, r2
 8000cac:	2200      	movs	r2, #0
 8000cae:	701a      	strb	r2, [r3, #0]

    char *command = strtok((char*)user_buffer, " ");
 8000cb0:	4934      	ldr	r1, [pc, #208]	@ (8000d84 <finished_transmission+0xe8>)
 8000cb2:	6878      	ldr	r0, [r7, #4]
 8000cb4:	f001 f9ae 	bl	8002014 <strtok>
 8000cb8:	60f8      	str	r0, [r7, #12]
    char *operand = strtok(0x00, "");
 8000cba:	4933      	ldr	r1, [pc, #204]	@ (8000d88 <finished_transmission+0xec>)
 8000cbc:	2000      	movs	r0, #0
 8000cbe:	f001 f9a9 	bl	8002014 <strtok>
 8000cc2:	60b8      	str	r0, [r7, #8]

    if (command) {
 8000cc4:	68fb      	ldr	r3, [r7, #12]
 8000cc6:	2b00      	cmp	r3, #0
 8000cc8:	d058      	beq.n	8000d7c <finished_transmission+0xe0>
        if (strcmp(command, "led") == 0 && operand) {
 8000cca:	4930      	ldr	r1, [pc, #192]	@ (8000d8c <finished_transmission+0xf0>)
 8000ccc:	68f8      	ldr	r0, [r7, #12]
 8000cce:	f7ff fadf 	bl	8000290 <strcmp>
 8000cd2:	4603      	mov	r3, r0
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d106      	bne.n	8000ce6 <finished_transmission+0x4a>
 8000cd8:	68bb      	ldr	r3, [r7, #8]
 8000cda:	2b00      	cmp	r3, #0
 8000cdc:	d003      	beq.n	8000ce6 <finished_transmission+0x4a>
            led_command(operand);
 8000cde:	68b8      	ldr	r0, [r7, #8]
 8000ce0:	f000 f868 	bl	8000db4 <led_command>
 8000ce4:	e04a      	b.n	8000d7c <finished_transmission+0xe0>
        } else if (strcmp(command, "serial") == 0 && operand) {
 8000ce6:	492a      	ldr	r1, [pc, #168]	@ (8000d90 <finished_transmission+0xf4>)
 8000ce8:	68f8      	ldr	r0, [r7, #12]
 8000cea:	f7ff fad1 	bl	8000290 <strcmp>
 8000cee:	4603      	mov	r3, r0
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d106      	bne.n	8000d02 <finished_transmission+0x66>
 8000cf4:	68bb      	ldr	r3, [r7, #8]
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	d003      	beq.n	8000d02 <finished_transmission+0x66>
            serial_command(operand);
 8000cfa:	68b8      	ldr	r0, [r7, #8]
 8000cfc:	f000 f870 	bl	8000de0 <serial_command>
 8000d00:	e03c      	b.n	8000d7c <finished_transmission+0xe0>
        } else if (strcmp(command, "oneshot") == 0 && operand) {
 8000d02:	4924      	ldr	r1, [pc, #144]	@ (8000d94 <finished_transmission+0xf8>)
 8000d04:	68f8      	ldr	r0, [r7, #12]
 8000d06:	f7ff fac3 	bl	8000290 <strcmp>
 8000d0a:	4603      	mov	r3, r0
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d106      	bne.n	8000d1e <finished_transmission+0x82>
 8000d10:	68bb      	ldr	r3, [r7, #8]
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d003      	beq.n	8000d1e <finished_transmission+0x82>
            oneshot_command(operand);
 8000d16:	68b8      	ldr	r0, [r7, #8]
 8000d18:	f000 f892 	bl	8000e40 <oneshot_command>
 8000d1c:	e02e      	b.n	8000d7c <finished_transmission+0xe0>
        }else if (strcmp(command, "timer") == 0 && operand) {
 8000d1e:	491e      	ldr	r1, [pc, #120]	@ (8000d98 <finished_transmission+0xfc>)
 8000d20:	68f8      	ldr	r0, [r7, #12]
 8000d22:	f7ff fab5 	bl	8000290 <strcmp>
 8000d26:	4603      	mov	r3, r0
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	d106      	bne.n	8000d3a <finished_transmission+0x9e>
 8000d2c:	68bb      	ldr	r3, [r7, #8]
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d003      	beq.n	8000d3a <finished_transmission+0x9e>
            timer_command(operand);
 8000d32:	68b8      	ldr	r0, [r7, #8]
 8000d34:	f000 f8a8 	bl	8000e88 <timer_command>
 8000d38:	e020      	b.n	8000d7c <finished_transmission+0xe0>
        }else {
            strcpy((char*)transmit_buffer, "Invalid input! Try Again.\r\n");
 8000d3a:	4a18      	ldr	r2, [pc, #96]	@ (8000d9c <finished_transmission+0x100>)
 8000d3c:	4b18      	ldr	r3, [pc, #96]	@ (8000da0 <finished_transmission+0x104>)
 8000d3e:	4615      	mov	r5, r2
 8000d40:	461c      	mov	r4, r3
 8000d42:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000d44:	6028      	str	r0, [r5, #0]
 8000d46:	6069      	str	r1, [r5, #4]
 8000d48:	60aa      	str	r2, [r5, #8]
 8000d4a:	60eb      	str	r3, [r5, #12]
 8000d4c:	cc07      	ldmia	r4!, {r0, r1, r2}
 8000d4e:	6128      	str	r0, [r5, #16]
 8000d50:	6169      	str	r1, [r5, #20]
 8000d52:	61aa      	str	r2, [r5, #24]
            transmit_length = strlen((char*)transmit_buffer);
 8000d54:	4811      	ldr	r0, [pc, #68]	@ (8000d9c <finished_transmission+0x100>)
 8000d56:	f7ff fa93 	bl	8000280 <strlen>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	b2da      	uxtb	r2, r3
 8000d5e:	4b11      	ldr	r3, [pc, #68]	@ (8000da4 <finished_transmission+0x108>)
 8000d60:	701a      	strb	r2, [r3, #0]
            transmit_index = 0;
 8000d62:	4b11      	ldr	r3, [pc, #68]	@ (8000da8 <finished_transmission+0x10c>)
 8000d64:	2200      	movs	r2, #0
 8000d66:	701a      	strb	r2, [r3, #0]
            is_transmitting = 1;
 8000d68:	4b10      	ldr	r3, [pc, #64]	@ (8000dac <finished_transmission+0x110>)
 8000d6a:	2201      	movs	r2, #1
 8000d6c:	701a      	strb	r2, [r3, #0]
            USART1->CR1 |= USART_CR1_TXEIE;
 8000d6e:	4b10      	ldr	r3, [pc, #64]	@ (8000db0 <finished_transmission+0x114>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	4a0f      	ldr	r2, [pc, #60]	@ (8000db0 <finished_transmission+0x114>)
 8000d74:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d78:	6013      	str	r3, [r2, #0]
        }
    }
}
 8000d7a:	e7ff      	b.n	8000d7c <finished_transmission+0xe0>
 8000d7c:	bf00      	nop
 8000d7e:	3710      	adds	r7, #16
 8000d80:	46bd      	mov	sp, r7
 8000d82:	bdb0      	pop	{r4, r5, r7, pc}
 8000d84:	08003fc0 	.word	0x08003fc0
 8000d88:	08003fc4 	.word	0x08003fc4
 8000d8c:	08003fc8 	.word	0x08003fc8
 8000d90:	08003fcc 	.word	0x08003fcc
 8000d94:	08003fd4 	.word	0x08003fd4
 8000d98:	08003fdc 	.word	0x08003fdc
 8000d9c:	200002e0 	.word	0x200002e0
 8000da0:	08003fe4 	.word	0x08003fe4
 8000da4:	20000345 	.word	0x20000345
 8000da8:	20000344 	.word	0x20000344
 8000dac:	20000346 	.word	0x20000346
 8000db0:	40013800 	.word	0x40013800

08000db4 <led_command>:


void led_command(char *operand) {
 8000db4:	b580      	push	{r7, lr}
 8000db6:	b084      	sub	sp, #16
 8000db8:	af00      	add	r7, sp, #0
 8000dba:	6078      	str	r0, [r7, #4]
	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000dbc:	4b07      	ldr	r3, [pc, #28]	@ (8000ddc <led_command+0x28>)
 8000dbe:	60fb      	str	r3, [r7, #12]
    uint8_t value = (uint8_t)strtol(operand, 0x00, 2);
 8000dc0:	2202      	movs	r2, #2
 8000dc2:	2100      	movs	r1, #0
 8000dc4:	6878      	ldr	r0, [r7, #4]
 8000dc6:	f001 f8fd 	bl	8001fc4 <strtol>
 8000dca:	4603      	mov	r3, r0
 8000dcc:	72fb      	strb	r3, [r7, #11]
    *led_register = value;
 8000dce:	68fb      	ldr	r3, [r7, #12]
 8000dd0:	7afa      	ldrb	r2, [r7, #11]
 8000dd2:	701a      	strb	r2, [r3, #0]
}
 8000dd4:	bf00      	nop
 8000dd6:	3710      	adds	r7, #16
 8000dd8:	46bd      	mov	sp, r7
 8000dda:	bd80      	pop	{r7, pc}
 8000ddc:	48001015 	.word	0x48001015

08000de0 <serial_command>:

void serial_command(char *operand) {
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b084      	sub	sp, #16
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000de8:	4b0f      	ldr	r3, [pc, #60]	@ (8000e28 <serial_command+0x48>)
 8000dea:	60fb      	str	r3, [r7, #12]
	*led_register = 0;
 8000dec:	68fb      	ldr	r3, [r7, #12]
 8000dee:	2200      	movs	r2, #0
 8000df0:	701a      	strb	r2, [r3, #0]
    strcpy((char*)transmit_buffer, operand);
 8000df2:	6879      	ldr	r1, [r7, #4]
 8000df4:	480d      	ldr	r0, [pc, #52]	@ (8000e2c <serial_command+0x4c>)
 8000df6:	f001 f9a2 	bl	800213e <strcpy>
    transmit_length = strlen(operand);
 8000dfa:	6878      	ldr	r0, [r7, #4]
 8000dfc:	f7ff fa40 	bl	8000280 <strlen>
 8000e00:	4603      	mov	r3, r0
 8000e02:	b2da      	uxtb	r2, r3
 8000e04:	4b0a      	ldr	r3, [pc, #40]	@ (8000e30 <serial_command+0x50>)
 8000e06:	701a      	strb	r2, [r3, #0]
    transmit_index = 0;
 8000e08:	4b0a      	ldr	r3, [pc, #40]	@ (8000e34 <serial_command+0x54>)
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	701a      	strb	r2, [r3, #0]
    is_transmitting = 1;
 8000e0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000e38 <serial_command+0x58>)
 8000e10:	2201      	movs	r2, #1
 8000e12:	701a      	strb	r2, [r3, #0]
    USART1->CR1 |= USART_CR1_TXEIE;
 8000e14:	4b09      	ldr	r3, [pc, #36]	@ (8000e3c <serial_command+0x5c>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	4a08      	ldr	r2, [pc, #32]	@ (8000e3c <serial_command+0x5c>)
 8000e1a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000e1e:	6013      	str	r3, [r2, #0]
}
 8000e20:	bf00      	nop
 8000e22:	3710      	adds	r7, #16
 8000e24:	46bd      	mov	sp, r7
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	48001015 	.word	0x48001015
 8000e2c:	200002e0 	.word	0x200002e0
 8000e30:	20000345 	.word	0x20000345
 8000e34:	20000344 	.word	0x20000344
 8000e38:	20000346 	.word	0x20000346
 8000e3c:	40013800 	.word	0x40013800

08000e40 <oneshot_command>:

void oneshot_command(char *operand){
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b084      	sub	sp, #16
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	6078      	str	r0, [r7, #4]
    uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000e48:	4b0e      	ldr	r3, [pc, #56]	@ (8000e84 <oneshot_command+0x44>)
 8000e4a:	60fb      	str	r3, [r7, #12]
    *led_register = 0xFF;
 8000e4c:	68fb      	ldr	r3, [r7, #12]
 8000e4e:	22ff      	movs	r2, #255	@ 0xff
 8000e50:	701a      	strb	r2, [r3, #0]

    uint32_t arr_value = (uint32_t)strtol(operand, 0x00, 10);
 8000e52:	220a      	movs	r2, #10
 8000e54:	2100      	movs	r1, #0
 8000e56:	6878      	ldr	r0, [r7, #4]
 8000e58:	f001 f8b4 	bl	8001fc4 <strtol>
 8000e5c:	4603      	mov	r3, r0
 8000e5e:	60bb      	str	r3, [r7, #8]

    enable_timers(arr_value);
 8000e60:	68b8      	ldr	r0, [r7, #8]
 8000e62:	f000 f8f3 	bl	800104c <enable_timers>
    TIM2->CR1 |= TIM_CR1_OPM;
 8000e66:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000e70:	f043 0308 	orr.w	r3, r3, #8
 8000e74:	6013      	str	r3, [r2, #0]
    led_chase_direction('a');
 8000e76:	2061      	movs	r0, #97	@ 0x61
 8000e78:	f7ff fec0 	bl	8000bfc <led_chase_direction>

}
 8000e7c:	bf00      	nop
 8000e7e:	3710      	adds	r7, #16
 8000e80:	46bd      	mov	sp, r7
 8000e82:	bd80      	pop	{r7, pc}
 8000e84:	48001015 	.word	0x48001015

08000e88 <timer_command>:

void timer_command(char *operand){
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	b084      	sub	sp, #16
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]
	uint8_t *led_register = ((uint8_t*)&(GPIOE->ODR)) + 1;
 8000e90:	4b0a      	ldr	r3, [pc, #40]	@ (8000ebc <timer_command+0x34>)
 8000e92:	60fb      	str	r3, [r7, #12]
	*led_register = 1;
 8000e94:	68fb      	ldr	r3, [r7, #12]
 8000e96:	2201      	movs	r2, #1
 8000e98:	701a      	strb	r2, [r3, #0]

	uint32_t arr_value = (uint32_t)strtol(operand, 0x00, 10);
 8000e9a:	220a      	movs	r2, #10
 8000e9c:	2100      	movs	r1, #0
 8000e9e:	6878      	ldr	r0, [r7, #4]
 8000ea0:	f001 f890 	bl	8001fc4 <strtol>
 8000ea4:	4603      	mov	r3, r0
 8000ea6:	60bb      	str	r3, [r7, #8]
	enable_timers(arr_value);
 8000ea8:	68b8      	ldr	r0, [r7, #8]
 8000eaa:	f000 f8cf 	bl	800104c <enable_timers>
	led_chase_direction('c');
 8000eae:	2063      	movs	r0, #99	@ 0x63
 8000eb0:	f7ff fea4 	bl	8000bfc <led_chase_direction>
}
 8000eb4:	bf00      	nop
 8000eb6:	3710      	adds	r7, #16
 8000eb8:	46bd      	mov	sp, r7
 8000eba:	bd80      	pop	{r7, pc}
 8000ebc:	48001015 	.word	0x48001015

08000ec0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000ec0:	b480      	push	{r7}
 8000ec2:	b083      	sub	sp, #12
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000eca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	db0b      	blt.n	8000eea <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ed2:	79fb      	ldrb	r3, [r7, #7]
 8000ed4:	f003 021f 	and.w	r2, r3, #31
 8000ed8:	4906      	ldr	r1, [pc, #24]	@ (8000ef4 <__NVIC_EnableIRQ+0x34>)
 8000eda:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ede:	095b      	lsrs	r3, r3, #5
 8000ee0:	2001      	movs	r0, #1
 8000ee2:	fa00 f202 	lsl.w	r2, r0, r2
 8000ee6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000eea:	bf00      	nop
 8000eec:	370c      	adds	r7, #12
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bc80      	pop	{r7}
 8000ef2:	4770      	bx	lr
 8000ef4:	e000e100 	.word	0xe000e100

08000ef8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000ef8:	b480      	push	{r7}
 8000efa:	b083      	sub	sp, #12
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	4603      	mov	r3, r0
 8000f00:	6039      	str	r1, [r7, #0]
 8000f02:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f04:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	db0a      	blt.n	8000f22 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f0c:	683b      	ldr	r3, [r7, #0]
 8000f0e:	b2da      	uxtb	r2, r3
 8000f10:	490c      	ldr	r1, [pc, #48]	@ (8000f44 <__NVIC_SetPriority+0x4c>)
 8000f12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f16:	0112      	lsls	r2, r2, #4
 8000f18:	b2d2      	uxtb	r2, r2
 8000f1a:	440b      	add	r3, r1
 8000f1c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000f20:	e00a      	b.n	8000f38 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f22:	683b      	ldr	r3, [r7, #0]
 8000f24:	b2da      	uxtb	r2, r3
 8000f26:	4908      	ldr	r1, [pc, #32]	@ (8000f48 <__NVIC_SetPriority+0x50>)
 8000f28:	79fb      	ldrb	r3, [r7, #7]
 8000f2a:	f003 030f 	and.w	r3, r3, #15
 8000f2e:	3b04      	subs	r3, #4
 8000f30:	0112      	lsls	r2, r2, #4
 8000f32:	b2d2      	uxtb	r2, r2
 8000f34:	440b      	add	r3, r1
 8000f36:	761a      	strb	r2, [r3, #24]
}
 8000f38:	bf00      	nop
 8000f3a:	370c      	adds	r7, #12
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bc80      	pop	{r7}
 8000f40:	4770      	bx	lr
 8000f42:	bf00      	nop
 8000f44:	e000e100 	.word	0xe000e100
 8000f48:	e000ed00 	.word	0xe000ed00

08000f4c <USART1_EXTI25_IRQHandler>:
uint8_t transmit_index = 0;
uint8_t transmit_length = 0;
uint8_t is_transmitting = 0;


void USART1_EXTI25_IRQHandler(void) {
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b082      	sub	sp, #8
 8000f50:	af00      	add	r7, sp, #0
    if (USART1->ISR & USART_ISR_RXNE) {
 8000f52:	4b35      	ldr	r3, [pc, #212]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 8000f54:	69db      	ldr	r3, [r3, #28]
 8000f56:	f003 0320 	and.w	r3, r3, #32
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d03a      	beq.n	8000fd4 <USART1_EXTI25_IRQHandler+0x88>
        uint8_t incoming_byte = USART1->RDR;
 8000f5e:	4b32      	ldr	r3, [pc, #200]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 8000f60:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	71fb      	strb	r3, [r7, #7]

        if (kernel_index < MESSAGE_LENGTH - 1) {
 8000f66:	4b31      	ldr	r3, [pc, #196]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000f68:	781b      	ldrb	r3, [r3, #0]
 8000f6a:	2b62      	cmp	r3, #98	@ 0x62
 8000f6c:	d82f      	bhi.n	8000fce <USART1_EXTI25_IRQHandler+0x82>
            kernel_buffer[active_kernel][kernel_index++] = incoming_byte;
 8000f6e:	4b30      	ldr	r3, [pc, #192]	@ (8001030 <USART1_EXTI25_IRQHandler+0xe4>)
 8000f70:	781b      	ldrb	r3, [r3, #0]
 8000f72:	4618      	mov	r0, r3
 8000f74:	4b2d      	ldr	r3, [pc, #180]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000f76:	781b      	ldrb	r3, [r3, #0]
 8000f78:	1c5a      	adds	r2, r3, #1
 8000f7a:	b2d1      	uxtb	r1, r2
 8000f7c:	4a2b      	ldr	r2, [pc, #172]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000f7e:	7011      	strb	r1, [r2, #0]
 8000f80:	4619      	mov	r1, r3
 8000f82:	4a2c      	ldr	r2, [pc, #176]	@ (8001034 <USART1_EXTI25_IRQHandler+0xe8>)
 8000f84:	2364      	movs	r3, #100	@ 0x64
 8000f86:	fb00 f303 	mul.w	r3, r0, r3
 8000f8a:	4413      	add	r3, r2
 8000f8c:	440b      	add	r3, r1
 8000f8e:	79fa      	ldrb	r2, [r7, #7]
 8000f90:	701a      	strb	r2, [r3, #0]

            if (incoming_byte == message_terminator) {
 8000f92:	4b29      	ldr	r3, [pc, #164]	@ (8001038 <USART1_EXTI25_IRQHandler+0xec>)
 8000f94:	781b      	ldrb	r3, [r3, #0]
 8000f96:	79fa      	ldrb	r2, [r7, #7]
 8000f98:	429a      	cmp	r2, r3
 8000f9a:	d11b      	bne.n	8000fd4 <USART1_EXTI25_IRQHandler+0x88>
                finished_transmission(kernel_buffer[active_kernel], kernel_index);
 8000f9c:	4b24      	ldr	r3, [pc, #144]	@ (8001030 <USART1_EXTI25_IRQHandler+0xe4>)
 8000f9e:	781b      	ldrb	r3, [r3, #0]
 8000fa0:	461a      	mov	r2, r3
 8000fa2:	2364      	movs	r3, #100	@ 0x64
 8000fa4:	fb02 f303 	mul.w	r3, r2, r3
 8000fa8:	4a22      	ldr	r2, [pc, #136]	@ (8001034 <USART1_EXTI25_IRQHandler+0xe8>)
 8000faa:	4413      	add	r3, r2
 8000fac:	4a1f      	ldr	r2, [pc, #124]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000fae:	7812      	ldrb	r2, [r2, #0]
 8000fb0:	4611      	mov	r1, r2
 8000fb2:	4618      	mov	r0, r3
 8000fb4:	f7ff fe72 	bl	8000c9c <finished_transmission>
                active_kernel ^= 1;
 8000fb8:	4b1d      	ldr	r3, [pc, #116]	@ (8001030 <USART1_EXTI25_IRQHandler+0xe4>)
 8000fba:	781b      	ldrb	r3, [r3, #0]
 8000fbc:	f083 0301 	eor.w	r3, r3, #1
 8000fc0:	b2da      	uxtb	r2, r3
 8000fc2:	4b1b      	ldr	r3, [pc, #108]	@ (8001030 <USART1_EXTI25_IRQHandler+0xe4>)
 8000fc4:	701a      	strb	r2, [r3, #0]
                kernel_index = 0;
 8000fc6:	4b19      	ldr	r3, [pc, #100]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000fc8:	2200      	movs	r2, #0
 8000fca:	701a      	strb	r2, [r3, #0]
 8000fcc:	e002      	b.n	8000fd4 <USART1_EXTI25_IRQHandler+0x88>
            }
        } else {
            kernel_index = 0;  // buffer overflow handling
 8000fce:	4b17      	ldr	r3, [pc, #92]	@ (800102c <USART1_EXTI25_IRQHandler+0xe0>)
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	701a      	strb	r2, [r3, #0]
        }
    }

    if ((USART1->ISR & USART_ISR_TXE) && is_transmitting) {
 8000fd4:	4b14      	ldr	r3, [pc, #80]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 8000fd6:	69db      	ldr	r3, [r3, #28]
 8000fd8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	d01e      	beq.n	800101e <USART1_EXTI25_IRQHandler+0xd2>
 8000fe0:	4b16      	ldr	r3, [pc, #88]	@ (800103c <USART1_EXTI25_IRQHandler+0xf0>)
 8000fe2:	781b      	ldrb	r3, [r3, #0]
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	d01a      	beq.n	800101e <USART1_EXTI25_IRQHandler+0xd2>
        if (transmit_index < transmit_length) {
 8000fe8:	4b15      	ldr	r3, [pc, #84]	@ (8001040 <USART1_EXTI25_IRQHandler+0xf4>)
 8000fea:	781a      	ldrb	r2, [r3, #0]
 8000fec:	4b15      	ldr	r3, [pc, #84]	@ (8001044 <USART1_EXTI25_IRQHandler+0xf8>)
 8000fee:	781b      	ldrb	r3, [r3, #0]
 8000ff0:	429a      	cmp	r2, r3
 8000ff2:	d20b      	bcs.n	800100c <USART1_EXTI25_IRQHandler+0xc0>
            USART1->TDR = transmit_buffer[transmit_index++];
 8000ff4:	4b12      	ldr	r3, [pc, #72]	@ (8001040 <USART1_EXTI25_IRQHandler+0xf4>)
 8000ff6:	781b      	ldrb	r3, [r3, #0]
 8000ff8:	1c5a      	adds	r2, r3, #1
 8000ffa:	b2d1      	uxtb	r1, r2
 8000ffc:	4a10      	ldr	r2, [pc, #64]	@ (8001040 <USART1_EXTI25_IRQHandler+0xf4>)
 8000ffe:	7011      	strb	r1, [r2, #0]
 8001000:	461a      	mov	r2, r3
 8001002:	4b11      	ldr	r3, [pc, #68]	@ (8001048 <USART1_EXTI25_IRQHandler+0xfc>)
 8001004:	5c9a      	ldrb	r2, [r3, r2]
 8001006:	4b08      	ldr	r3, [pc, #32]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 8001008:	851a      	strh	r2, [r3, #40]	@ 0x28
        } else {
            USART1->CR1 &= ~USART_CR1_TXEIE;
            is_transmitting = 0;
        }
    }
}
 800100a:	e008      	b.n	800101e <USART1_EXTI25_IRQHandler+0xd2>
            USART1->CR1 &= ~USART_CR1_TXEIE;
 800100c:	4b06      	ldr	r3, [pc, #24]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	4a05      	ldr	r2, [pc, #20]	@ (8001028 <USART1_EXTI25_IRQHandler+0xdc>)
 8001012:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8001016:	6013      	str	r3, [r2, #0]
            is_transmitting = 0;
 8001018:	4b08      	ldr	r3, [pc, #32]	@ (800103c <USART1_EXTI25_IRQHandler+0xf0>)
 800101a:	2200      	movs	r2, #0
 800101c:	701a      	strb	r2, [r3, #0]
}
 800101e:	bf00      	nop
 8001020:	3708      	adds	r7, #8
 8001022:	46bd      	mov	sp, r7
 8001024:	bd80      	pop	{r7, pc}
 8001026:	bf00      	nop
 8001028:	40013800 	.word	0x40013800
 800102c:	200002dd 	.word	0x200002dd
 8001030:	200002dc 	.word	0x200002dc
 8001034:	20000214 	.word	0x20000214
 8001038:	20000000 	.word	0x20000000
 800103c:	20000346 	.word	0x20000346
 8001040:	20000344 	.word	0x20000344
 8001044:	20000345 	.word	0x20000345
 8001048:	200002e0 	.word	0x200002e0

0800104c <enable_timers>:



void enable_timers(uint32_t delay_us) {
 800104c:	b580      	push	{r7, lr}
 800104e:	b082      	sub	sp, #8
 8001050:	af00      	add	r7, sp, #0
 8001052:	6078      	str	r0, [r7, #4]
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001054:	b672      	cpsid	i
}
 8001056:	bf00      	nop
    __disable_irq();
    // 1. Enable clock for TIM2
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001058:	4b21      	ldr	r3, [pc, #132]	@ (80010e0 <enable_timers+0x94>)
 800105a:	69db      	ldr	r3, [r3, #28]
 800105c:	4a20      	ldr	r2, [pc, #128]	@ (80010e0 <enable_timers+0x94>)
 800105e:	f043 0301 	orr.w	r3, r3, #1
 8001062:	61d3      	str	r3, [r2, #28]

    // 2. Reset control & disable timer
    TIM2->CR1 = 0;
 8001064:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001068:	2200      	movs	r2, #0
 800106a:	601a      	str	r2, [r3, #0]
    TIM2->DIER = 0;
 800106c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001070:	2200      	movs	r2, #0
 8001072:	60da      	str	r2, [r3, #12]
    TIM2->SR = 0;       // Clear interrupt flags
 8001074:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001078:	2200      	movs	r2, #0
 800107a:	611a      	str	r2, [r3, #16]
    TIM2->CNT = 0;
 800107c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001080:	2200      	movs	r2, #0
 8001082:	625a      	str	r2, [r3, #36]	@ 0x24

    // 3. Set prescaler and ARR
    TIM2->PSC = 7999;         // 1 µs tick
 8001084:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001088:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 800108c:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = delay_us;
 800108e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	62d3      	str	r3, [r2, #44]	@ 0x2c

    // 4. Force update event to preload ARR & PSC into shadow registers
    TIM2->EGR = TIM_EGR_UG;
 8001096:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800109a:	2201      	movs	r2, #1
 800109c:	615a      	str	r2, [r3, #20]

    // 5. Re-clear UIF after EGR (some MCUs auto-set it)
    TIM2->SR &= ~TIM_SR_UIF;
 800109e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80010a2:	691b      	ldr	r3, [r3, #16]
 80010a4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80010a8:	f023 0301 	bic.w	r3, r3, #1
 80010ac:	6113      	str	r3, [r2, #16]

    // 6. Enable update interrupt
    TIM2->DIER = TIM_DIER_UIE;
 80010ae:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80010b2:	2201      	movs	r2, #1
 80010b4:	60da      	str	r2, [r3, #12]
    NVIC_SetPriority(TIM2_IRQn, 2);
 80010b6:	2102      	movs	r1, #2
 80010b8:	201c      	movs	r0, #28
 80010ba:	f7ff ff1d 	bl	8000ef8 <__NVIC_SetPriority>
    NVIC_EnableIRQ(TIM2_IRQn);
 80010be:	201c      	movs	r0, #28
 80010c0:	f7ff fefe 	bl	8000ec0 <__NVIC_EnableIRQ>
    // 7. Only now: Start timer
    TIM2->CR1 |= TIM_CR1_CEN;
 80010c4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80010ce:	f043 0301 	orr.w	r3, r3, #1
 80010d2:	6013      	str	r3, [r2, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 80010d4:	b662      	cpsie	i
}
 80010d6:	bf00      	nop

    __enable_irq();
}
 80010d8:	bf00      	nop
 80010da:	3708      	adds	r7, #8
 80010dc:	46bd      	mov	sp, r7
 80010de:	bd80      	pop	{r7, pc}
 80010e0:	40021000 	.word	0x40021000

080010e4 <main>:
#include "chase_led.h"



int main(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	af00      	add	r7, sp, #0
    enable_clocks();
 80010e8:	f000 f8d4 	bl	8001294 <enable_clocks>
    initialise_board();
 80010ec:	f000 f8e0 	bl	80012b0 <initialise_board>
    SerialInitialise(BAUD_115200, &USART1_PORT, 0x00);
 80010f0:	2200      	movs	r2, #0
 80010f2:	4904      	ldr	r1, [pc, #16]	@ (8001104 <main+0x20>)
 80010f4:	2004      	movs	r0, #4
 80010f6:	f000 f84d 	bl	8001194 <SerialInitialise>
    enable_interrupt();
 80010fa:	f000 f8e9 	bl	80012d0 <enable_interrupt>

    for (;;);
 80010fe:	bf00      	nop
 8001100:	e7fd      	b.n	80010fe <main+0x1a>
 8001102:	bf00      	nop
 8001104:	20000004 	.word	0x20000004

08001108 <__NVIC_EnableIRQ>:
{
 8001108:	b480      	push	{r7}
 800110a:	b083      	sub	sp, #12
 800110c:	af00      	add	r7, sp, #0
 800110e:	4603      	mov	r3, r0
 8001110:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001112:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001116:	2b00      	cmp	r3, #0
 8001118:	db0b      	blt.n	8001132 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800111a:	79fb      	ldrb	r3, [r7, #7]
 800111c:	f003 021f 	and.w	r2, r3, #31
 8001120:	4906      	ldr	r1, [pc, #24]	@ (800113c <__NVIC_EnableIRQ+0x34>)
 8001122:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001126:	095b      	lsrs	r3, r3, #5
 8001128:	2001      	movs	r0, #1
 800112a:	fa00 f202 	lsl.w	r2, r0, r2
 800112e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001132:	bf00      	nop
 8001134:	370c      	adds	r7, #12
 8001136:	46bd      	mov	sp, r7
 8001138:	bc80      	pop	{r7}
 800113a:	4770      	bx	lr
 800113c:	e000e100 	.word	0xe000e100

08001140 <__NVIC_SetPriority>:
{
 8001140:	b480      	push	{r7}
 8001142:	b083      	sub	sp, #12
 8001144:	af00      	add	r7, sp, #0
 8001146:	4603      	mov	r3, r0
 8001148:	6039      	str	r1, [r7, #0]
 800114a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800114c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001150:	2b00      	cmp	r3, #0
 8001152:	db0a      	blt.n	800116a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001154:	683b      	ldr	r3, [r7, #0]
 8001156:	b2da      	uxtb	r2, r3
 8001158:	490c      	ldr	r1, [pc, #48]	@ (800118c <__NVIC_SetPriority+0x4c>)
 800115a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800115e:	0112      	lsls	r2, r2, #4
 8001160:	b2d2      	uxtb	r2, r2
 8001162:	440b      	add	r3, r1
 8001164:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 8001168:	e00a      	b.n	8001180 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800116a:	683b      	ldr	r3, [r7, #0]
 800116c:	b2da      	uxtb	r2, r3
 800116e:	4908      	ldr	r1, [pc, #32]	@ (8001190 <__NVIC_SetPriority+0x50>)
 8001170:	79fb      	ldrb	r3, [r7, #7]
 8001172:	f003 030f 	and.w	r3, r3, #15
 8001176:	3b04      	subs	r3, #4
 8001178:	0112      	lsls	r2, r2, #4
 800117a:	b2d2      	uxtb	r2, r2
 800117c:	440b      	add	r3, r1
 800117e:	761a      	strb	r2, [r3, #24]
}
 8001180:	bf00      	nop
 8001182:	370c      	adds	r7, #12
 8001184:	46bd      	mov	sp, r7
 8001186:	bc80      	pop	{r7}
 8001188:	4770      	bx	lr
 800118a:	bf00      	nop
 800118c:	e000e100 	.word	0xe000e100
 8001190:	e000ed00 	.word	0xe000ed00

08001194 <SerialInitialise>:
		};


// InitialiseSerial - Initialise the serial port
// Input: baudRate is from an enumerated set
void SerialInitialise(uint32_t baudRate, SerialPort *serial_port, void (*completion_function)(uint32_t)) {
 8001194:	b480      	push	{r7}
 8001196:	b087      	sub	sp, #28
 8001198:	af00      	add	r7, sp, #0
 800119a:	60f8      	str	r0, [r7, #12]
 800119c:	60b9      	str	r1, [r7, #8]
 800119e:	607a      	str	r2, [r7, #4]

	serial_port->completion_function = completion_function;
 80011a0:	68bb      	ldr	r3, [r7, #8]
 80011a2:	687a      	ldr	r2, [r7, #4]
 80011a4:	625a      	str	r2, [r3, #36]	@ 0x24

	// enable clock power, system configuration clock and GPIOC
	// common to all UARTs
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 80011a6:	4b3a      	ldr	r3, [pc, #232]	@ (8001290 <SerialInitialise+0xfc>)
 80011a8:	69db      	ldr	r3, [r3, #28]
 80011aa:	4a39      	ldr	r2, [pc, #228]	@ (8001290 <SerialInitialise+0xfc>)
 80011ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011b0:	61d3      	str	r3, [r2, #28]
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80011b2:	4b37      	ldr	r3, [pc, #220]	@ (8001290 <SerialInitialise+0xfc>)
 80011b4:	699b      	ldr	r3, [r3, #24]
 80011b6:	4a36      	ldr	r2, [pc, #216]	@ (8001290 <SerialInitialise+0xfc>)
 80011b8:	f043 0301 	orr.w	r3, r3, #1
 80011bc:	6193      	str	r3, [r2, #24]

	// enable the GPIO which is on the AHB bus
	RCC->AHBENR |= serial_port->MaskAHBENR;
 80011be:	68bb      	ldr	r3, [r7, #8]
 80011c0:	691a      	ldr	r2, [r3, #16]
 80011c2:	4b33      	ldr	r3, [pc, #204]	@ (8001290 <SerialInitialise+0xfc>)
 80011c4:	695b      	ldr	r3, [r3, #20]
 80011c6:	4932      	ldr	r1, [pc, #200]	@ (8001290 <SerialInitialise+0xfc>)
 80011c8:	4313      	orrs	r3, r2
 80011ca:	614b      	str	r3, [r1, #20]

	// set pin mode to alternate function for the specific GPIO pins
	serial_port->GPIO->MODER = serial_port->SerialPinModeValue;
 80011cc:	68bb      	ldr	r3, [r7, #8]
 80011ce:	685b      	ldr	r3, [r3, #4]
 80011d0:	68ba      	ldr	r2, [r7, #8]
 80011d2:	6952      	ldr	r2, [r2, #20]
 80011d4:	601a      	str	r2, [r3, #0]

	// enable high speed clock for specific GPIO pins
	serial_port->GPIO->OSPEEDR = serial_port->SerialPinSpeedValue;
 80011d6:	68bb      	ldr	r3, [r7, #8]
 80011d8:	685b      	ldr	r3, [r3, #4]
 80011da:	68ba      	ldr	r2, [r7, #8]
 80011dc:	6992      	ldr	r2, [r2, #24]
 80011de:	609a      	str	r2, [r3, #8]

	// set alternate function to enable USART to external pins
	serial_port->GPIO->AFR[0] |= serial_port->SerialPinAlternatePinValueLow;
 80011e0:	68bb      	ldr	r3, [r7, #8]
 80011e2:	69d9      	ldr	r1, [r3, #28]
 80011e4:	68bb      	ldr	r3, [r7, #8]
 80011e6:	685b      	ldr	r3, [r3, #4]
 80011e8:	6a1a      	ldr	r2, [r3, #32]
 80011ea:	68bb      	ldr	r3, [r7, #8]
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	430a      	orrs	r2, r1
 80011f0:	621a      	str	r2, [r3, #32]
	serial_port->GPIO->AFR[1] |= serial_port->SerialPinAlternatePinValueHigh;
 80011f2:	68bb      	ldr	r3, [r7, #8]
 80011f4:	6a19      	ldr	r1, [r3, #32]
 80011f6:	68bb      	ldr	r3, [r7, #8]
 80011f8:	685b      	ldr	r3, [r3, #4]
 80011fa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	685b      	ldr	r3, [r3, #4]
 8001200:	430a      	orrs	r2, r1
 8001202:	625a      	str	r2, [r3, #36]	@ 0x24

	// enable the device based on the bits defined in the serial port definition
	RCC->APB1ENR |= serial_port->MaskAPB1ENR;
 8001204:	68bb      	ldr	r3, [r7, #8]
 8001206:	68da      	ldr	r2, [r3, #12]
 8001208:	4b21      	ldr	r3, [pc, #132]	@ (8001290 <SerialInitialise+0xfc>)
 800120a:	69db      	ldr	r3, [r3, #28]
 800120c:	4920      	ldr	r1, [pc, #128]	@ (8001290 <SerialInitialise+0xfc>)
 800120e:	4313      	orrs	r3, r2
 8001210:	61cb      	str	r3, [r1, #28]
	RCC->APB2ENR |= serial_port->MaskAPB2ENR;
 8001212:	68bb      	ldr	r3, [r7, #8]
 8001214:	689a      	ldr	r2, [r3, #8]
 8001216:	4b1e      	ldr	r3, [pc, #120]	@ (8001290 <SerialInitialise+0xfc>)
 8001218:	699b      	ldr	r3, [r3, #24]
 800121a:	491d      	ldr	r1, [pc, #116]	@ (8001290 <SerialInitialise+0xfc>)
 800121c:	4313      	orrs	r3, r2
 800121e:	618b      	str	r3, [r1, #24]

	// Get a pointer to the 16 bits of the BRR register that we want to change
	uint16_t *baud_rate_config = (uint16_t*)&serial_port->UART->BRR; // only 16 bits used!
 8001220:	68bb      	ldr	r3, [r7, #8]
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	330c      	adds	r3, #12
 8001226:	617b      	str	r3, [r7, #20]

	// Baud rate calculation from datasheet
	switch(baudRate){
 8001228:	68fb      	ldr	r3, [r7, #12]
 800122a:	2b04      	cmp	r3, #4
 800122c:	d822      	bhi.n	8001274 <SerialInitialise+0xe0>
 800122e:	a201      	add	r2, pc, #4	@ (adr r2, 8001234 <SerialInitialise+0xa0>)
 8001230:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001234:	08001249 	.word	0x08001249
 8001238:	08001253 	.word	0x08001253
 800123c:	0800125d 	.word	0x0800125d
 8001240:	08001265 	.word	0x08001265
 8001244:	0800126d 	.word	0x0800126d
	case BAUD_9600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x341;  // 115200 at 8MHz
 8001248:	697b      	ldr	r3, [r7, #20]
 800124a:	f240 3241 	movw	r2, #833	@ 0x341
 800124e:	801a      	strh	r2, [r3, #0]
		break;
 8001250:	e010      	b.n	8001274 <SerialInitialise+0xe0>
	case BAUD_19200:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x1A1;  // 115200 at 8MHz
 8001252:	697b      	ldr	r3, [r7, #20]
 8001254:	f240 12a1 	movw	r2, #417	@ 0x1a1
 8001258:	801a      	strh	r2, [r3, #0]
		break;
 800125a:	e00b      	b.n	8001274 <SerialInitialise+0xe0>
	case BAUD_38400:
		// NEED TO FIX THIS !
		*baud_rate_config = 0xD0;  // 115200 at 8MHz
 800125c:	697b      	ldr	r3, [r7, #20]
 800125e:	22d0      	movs	r2, #208	@ 0xd0
 8001260:	801a      	strh	r2, [r3, #0]
		break;
 8001262:	e007      	b.n	8001274 <SerialInitialise+0xe0>
	case BAUD_57600:
		// NEED TO FIX THIS !
		*baud_rate_config = 0x8B;  // 115200 at 8MHz
 8001264:	697b      	ldr	r3, [r7, #20]
 8001266:	228b      	movs	r2, #139	@ 0x8b
 8001268:	801a      	strh	r2, [r3, #0]
		break;
 800126a:	e003      	b.n	8001274 <SerialInitialise+0xe0>
	case BAUD_115200:
		*baud_rate_config = 0x46;  // 115200 at 8MHz
 800126c:	697b      	ldr	r3, [r7, #20]
 800126e:	2246      	movs	r2, #70	@ 0x46
 8001270:	801a      	strh	r2, [r3, #0]
		break;
 8001272:	bf00      	nop
	}


	// enable serial port for tx and rx
	serial_port->UART->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
 8001274:	68bb      	ldr	r3, [r7, #8]
 8001276:	681b      	ldr	r3, [r3, #0]
 8001278:	681a      	ldr	r2, [r3, #0]
 800127a:	68bb      	ldr	r3, [r7, #8]
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	f042 020d 	orr.w	r2, r2, #13
 8001282:	601a      	str	r2, [r3, #0]
}
 8001284:	bf00      	nop
 8001286:	371c      	adds	r7, #28
 8001288:	46bd      	mov	sp, r7
 800128a:	bc80      	pop	{r7}
 800128c:	4770      	bx	lr
 800128e:	bf00      	nop
 8001290:	40021000 	.word	0x40021000

08001294 <enable_clocks>:


void enable_clocks() {
 8001294:	b480      	push	{r7}
 8001296:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIOEEN;
 8001298:	4b04      	ldr	r3, [pc, #16]	@ (80012ac <enable_clocks+0x18>)
 800129a:	695b      	ldr	r3, [r3, #20]
 800129c:	4a03      	ldr	r2, [pc, #12]	@ (80012ac <enable_clocks+0x18>)
 800129e:	f443 1328 	orr.w	r3, r3, #2752512	@ 0x2a0000
 80012a2:	6153      	str	r3, [r2, #20]
}
 80012a4:	bf00      	nop
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bc80      	pop	{r7}
 80012aa:	4770      	bx	lr
 80012ac:	40021000 	.word	0x40021000

080012b0 <initialise_board>:
// initialise the discovery board I/O (just outputs: inputs are selected by default)
void initialise_board() {
 80012b0:	b480      	push	{r7}
 80012b2:	b083      	sub	sp, #12
 80012b4:	af00      	add	r7, sp, #0
	// get a pointer to the second half word of the MODER register (for outputs pe8-15)
	uint16_t *led_output_registers = ((uint16_t *)&(GPIOE->MODER)) + 1;
 80012b6:	4b05      	ldr	r3, [pc, #20]	@ (80012cc <initialise_board+0x1c>)
 80012b8:	607b      	str	r3, [r7, #4]
	*led_output_registers = 0x5555;
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	f245 5255 	movw	r2, #21845	@ 0x5555
 80012c0:	801a      	strh	r2, [r3, #0]
}
 80012c2:	bf00      	nop
 80012c4:	370c      	adds	r7, #12
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bc80      	pop	{r7}
 80012ca:	4770      	bx	lr
 80012cc:	48001002 	.word	0x48001002

080012d0 <enable_interrupt>:

void enable_interrupt() {
 80012d0:	b580      	push	{r7, lr}
 80012d2:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 80012d4:	b672      	cpsid	i
}
 80012d6:	bf00      	nop
    // Temporarily disable interrupts globally during setup
    __disable_irq();

    // -------- USART1 Interrupt setup (highest priority) --------
    USART1->CR1 |= USART_CR1_RXNEIE;  // Enable USART RXNE interrupt
 80012d8:	4b08      	ldr	r3, [pc, #32]	@ (80012fc <enable_interrupt+0x2c>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	4a07      	ldr	r2, [pc, #28]	@ (80012fc <enable_interrupt+0x2c>)
 80012de:	f043 0320 	orr.w	r3, r3, #32
 80012e2:	6013      	str	r3, [r2, #0]

    // Set USART1 interrupt priority to highest (0 is highest in NVIC)
    NVIC_SetPriority(USART1_IRQn, 1);
 80012e4:	2101      	movs	r1, #1
 80012e6:	2025      	movs	r0, #37	@ 0x25
 80012e8:	f7ff ff2a 	bl	8001140 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 80012ec:	2025      	movs	r0, #37	@ 0x25
 80012ee:	f7ff ff0b 	bl	8001108 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 80012f2:	b662      	cpsie	i
}
 80012f4:	bf00      	nop



    __enable_irq();
}
 80012f6:	bf00      	nop
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	40013800 	.word	0x40013800

08001300 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001300:	b480      	push	{r7}
 8001302:	af00      	add	r7, sp, #0
	return 1;
 8001304:	2301      	movs	r3, #1
}
 8001306:	4618      	mov	r0, r3
 8001308:	46bd      	mov	sp, r7
 800130a:	bc80      	pop	{r7}
 800130c:	4770      	bx	lr

0800130e <_kill>:

int _kill(int pid, int sig)
{
 800130e:	b580      	push	{r7, lr}
 8001310:	b082      	sub	sp, #8
 8001312:	af00      	add	r7, sp, #0
 8001314:	6078      	str	r0, [r7, #4]
 8001316:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001318:	f000 fee4 	bl	80020e4 <__errno>
 800131c:	4603      	mov	r3, r0
 800131e:	2216      	movs	r2, #22
 8001320:	601a      	str	r2, [r3, #0]
	return -1;
 8001322:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001326:	4618      	mov	r0, r3
 8001328:	3708      	adds	r7, #8
 800132a:	46bd      	mov	sp, r7
 800132c:	bd80      	pop	{r7, pc}

0800132e <_exit>:

void _exit (int status)
{
 800132e:	b580      	push	{r7, lr}
 8001330:	b082      	sub	sp, #8
 8001332:	af00      	add	r7, sp, #0
 8001334:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001336:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800133a:	6878      	ldr	r0, [r7, #4]
 800133c:	f7ff ffe7 	bl	800130e <_kill>
	while (1) {}		/* Make sure we hang here */
 8001340:	bf00      	nop
 8001342:	e7fd      	b.n	8001340 <_exit+0x12>

08001344 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001344:	b580      	push	{r7, lr}
 8001346:	b086      	sub	sp, #24
 8001348:	af00      	add	r7, sp, #0
 800134a:	60f8      	str	r0, [r7, #12]
 800134c:	60b9      	str	r1, [r7, #8]
 800134e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001350:	2300      	movs	r3, #0
 8001352:	617b      	str	r3, [r7, #20]
 8001354:	e00a      	b.n	800136c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001356:	f3af 8000 	nop.w
 800135a:	4601      	mov	r1, r0
 800135c:	68bb      	ldr	r3, [r7, #8]
 800135e:	1c5a      	adds	r2, r3, #1
 8001360:	60ba      	str	r2, [r7, #8]
 8001362:	b2ca      	uxtb	r2, r1
 8001364:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001366:	697b      	ldr	r3, [r7, #20]
 8001368:	3301      	adds	r3, #1
 800136a:	617b      	str	r3, [r7, #20]
 800136c:	697a      	ldr	r2, [r7, #20]
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	429a      	cmp	r2, r3
 8001372:	dbf0      	blt.n	8001356 <_read+0x12>
	}

return len;
 8001374:	687b      	ldr	r3, [r7, #4]
}
 8001376:	4618      	mov	r0, r3
 8001378:	3718      	adds	r7, #24
 800137a:	46bd      	mov	sp, r7
 800137c:	bd80      	pop	{r7, pc}

0800137e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800137e:	b580      	push	{r7, lr}
 8001380:	b086      	sub	sp, #24
 8001382:	af00      	add	r7, sp, #0
 8001384:	60f8      	str	r0, [r7, #12]
 8001386:	60b9      	str	r1, [r7, #8]
 8001388:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800138a:	2300      	movs	r3, #0
 800138c:	617b      	str	r3, [r7, #20]
 800138e:	e009      	b.n	80013a4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001390:	68bb      	ldr	r3, [r7, #8]
 8001392:	1c5a      	adds	r2, r3, #1
 8001394:	60ba      	str	r2, [r7, #8]
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	4618      	mov	r0, r3
 800139a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800139e:	697b      	ldr	r3, [r7, #20]
 80013a0:	3301      	adds	r3, #1
 80013a2:	617b      	str	r3, [r7, #20]
 80013a4:	697a      	ldr	r2, [r7, #20]
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	429a      	cmp	r2, r3
 80013aa:	dbf1      	blt.n	8001390 <_write+0x12>
	}
	return len;
 80013ac:	687b      	ldr	r3, [r7, #4]
}
 80013ae:	4618      	mov	r0, r3
 80013b0:	3718      	adds	r7, #24
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}

080013b6 <_close>:

int _close(int file)
{
 80013b6:	b480      	push	{r7}
 80013b8:	b083      	sub	sp, #12
 80013ba:	af00      	add	r7, sp, #0
 80013bc:	6078      	str	r0, [r7, #4]
	return -1;
 80013be:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80013c2:	4618      	mov	r0, r3
 80013c4:	370c      	adds	r7, #12
 80013c6:	46bd      	mov	sp, r7
 80013c8:	bc80      	pop	{r7}
 80013ca:	4770      	bx	lr

080013cc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80013cc:	b480      	push	{r7}
 80013ce:	b083      	sub	sp, #12
 80013d0:	af00      	add	r7, sp, #0
 80013d2:	6078      	str	r0, [r7, #4]
 80013d4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80013d6:	683b      	ldr	r3, [r7, #0]
 80013d8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80013dc:	605a      	str	r2, [r3, #4]
	return 0;
 80013de:	2300      	movs	r3, #0
}
 80013e0:	4618      	mov	r0, r3
 80013e2:	370c      	adds	r7, #12
 80013e4:	46bd      	mov	sp, r7
 80013e6:	bc80      	pop	{r7}
 80013e8:	4770      	bx	lr

080013ea <_isatty>:

int _isatty(int file)
{
 80013ea:	b480      	push	{r7}
 80013ec:	b083      	sub	sp, #12
 80013ee:	af00      	add	r7, sp, #0
 80013f0:	6078      	str	r0, [r7, #4]
	return 1;
 80013f2:	2301      	movs	r3, #1
}
 80013f4:	4618      	mov	r0, r3
 80013f6:	370c      	adds	r7, #12
 80013f8:	46bd      	mov	sp, r7
 80013fa:	bc80      	pop	{r7}
 80013fc:	4770      	bx	lr

080013fe <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80013fe:	b480      	push	{r7}
 8001400:	b085      	sub	sp, #20
 8001402:	af00      	add	r7, sp, #0
 8001404:	60f8      	str	r0, [r7, #12]
 8001406:	60b9      	str	r1, [r7, #8]
 8001408:	607a      	str	r2, [r7, #4]
	return 0;
 800140a:	2300      	movs	r3, #0
}
 800140c:	4618      	mov	r0, r3
 800140e:	3714      	adds	r7, #20
 8001410:	46bd      	mov	sp, r7
 8001412:	bc80      	pop	{r7}
 8001414:	4770      	bx	lr
	...

08001418 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001418:	b580      	push	{r7, lr}
 800141a:	b086      	sub	sp, #24
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001420:	4a14      	ldr	r2, [pc, #80]	@ (8001474 <_sbrk+0x5c>)
 8001422:	4b15      	ldr	r3, [pc, #84]	@ (8001478 <_sbrk+0x60>)
 8001424:	1ad3      	subs	r3, r2, r3
 8001426:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001428:	697b      	ldr	r3, [r7, #20]
 800142a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800142c:	4b13      	ldr	r3, [pc, #76]	@ (800147c <_sbrk+0x64>)
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	2b00      	cmp	r3, #0
 8001432:	d102      	bne.n	800143a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001434:	4b11      	ldr	r3, [pc, #68]	@ (800147c <_sbrk+0x64>)
 8001436:	4a12      	ldr	r2, [pc, #72]	@ (8001480 <_sbrk+0x68>)
 8001438:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800143a:	4b10      	ldr	r3, [pc, #64]	@ (800147c <_sbrk+0x64>)
 800143c:	681a      	ldr	r2, [r3, #0]
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	4413      	add	r3, r2
 8001442:	693a      	ldr	r2, [r7, #16]
 8001444:	429a      	cmp	r2, r3
 8001446:	d207      	bcs.n	8001458 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001448:	f000 fe4c 	bl	80020e4 <__errno>
 800144c:	4603      	mov	r3, r0
 800144e:	220c      	movs	r2, #12
 8001450:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001452:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001456:	e009      	b.n	800146c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001458:	4b08      	ldr	r3, [pc, #32]	@ (800147c <_sbrk+0x64>)
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800145e:	4b07      	ldr	r3, [pc, #28]	@ (800147c <_sbrk+0x64>)
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	4413      	add	r3, r2
 8001466:	4a05      	ldr	r2, [pc, #20]	@ (800147c <_sbrk+0x64>)
 8001468:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800146a:	68fb      	ldr	r3, [r7, #12]
}
 800146c:	4618      	mov	r0, r3
 800146e:	3718      	adds	r7, #24
 8001470:	46bd      	mov	sp, r7
 8001472:	bd80      	pop	{r7, pc}
 8001474:	2000a000 	.word	0x2000a000
 8001478:	00000400 	.word	0x00000400
 800147c:	20000348 	.word	0x20000348
 8001480:	20000498 	.word	0x20000498

08001484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001484:	480d      	ldr	r0, [pc, #52]	@ (80014bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001488:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800148c:	480c      	ldr	r0, [pc, #48]	@ (80014c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800148e:	490d      	ldr	r1, [pc, #52]	@ (80014c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001490:	4a0d      	ldr	r2, [pc, #52]	@ (80014c8 <LoopForever+0xe>)
  movs r3, #0
 8001492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001494:	e002      	b.n	800149c <LoopCopyDataInit>

08001496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800149a:	3304      	adds	r3, #4

0800149c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800149c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800149e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80014a0:	d3f9      	bcc.n	8001496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80014a2:	4a0a      	ldr	r2, [pc, #40]	@ (80014cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80014a4:	4c0a      	ldr	r4, [pc, #40]	@ (80014d0 <LoopForever+0x16>)
  movs r3, #0
 80014a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80014a8:	e001      	b.n	80014ae <LoopFillZerobss>

080014aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80014aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80014ac:	3204      	adds	r2, #4

080014ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80014ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80014b0:	d3fb      	bcc.n	80014aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80014b2:	f000 fe1d 	bl	80020f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80014b6:	f7ff fe15 	bl	80010e4 <main>

080014ba <LoopForever>:

LoopForever:
    b LoopForever
 80014ba:	e7fe      	b.n	80014ba <LoopForever>
  ldr   r0, =_estack
 80014bc:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80014c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80014c4:	200001f4 	.word	0x200001f4
  ldr r2, =_sidata
 80014c8:	080043dc 	.word	0x080043dc
  ldr r2, =_sbss
 80014cc:	200001f4 	.word	0x200001f4
  ldr r4, =_ebss
 80014d0:	20000498 	.word	0x20000498

080014d4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014d4:	e7fe      	b.n	80014d4 <ADC1_2_IRQHandler>

080014d6 <__cvt>:
 80014d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014da:	b088      	sub	sp, #32
 80014dc:	2b00      	cmp	r3, #0
 80014de:	461d      	mov	r5, r3
 80014e0:	4614      	mov	r4, r2
 80014e2:	bfbc      	itt	lt
 80014e4:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80014e8:	4614      	movlt	r4, r2
 80014ea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80014ec:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80014ee:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80014f2:	bfb6      	itet	lt
 80014f4:	461d      	movlt	r5, r3
 80014f6:	2300      	movge	r3, #0
 80014f8:	232d      	movlt	r3, #45	@ 0x2d
 80014fa:	7013      	strb	r3, [r2, #0]
 80014fc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80014fe:	f023 0820 	bic.w	r8, r3, #32
 8001502:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001506:	d005      	beq.n	8001514 <__cvt+0x3e>
 8001508:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800150c:	d100      	bne.n	8001510 <__cvt+0x3a>
 800150e:	3601      	adds	r6, #1
 8001510:	2302      	movs	r3, #2
 8001512:	e000      	b.n	8001516 <__cvt+0x40>
 8001514:	2303      	movs	r3, #3
 8001516:	aa07      	add	r2, sp, #28
 8001518:	9204      	str	r2, [sp, #16]
 800151a:	aa06      	add	r2, sp, #24
 800151c:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001520:	e9cd 3600 	strd	r3, r6, [sp]
 8001524:	4622      	mov	r2, r4
 8001526:	462b      	mov	r3, r5
 8001528:	f000 feba 	bl	80022a0 <_dtoa_r>
 800152c:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001530:	4607      	mov	r7, r0
 8001532:	d119      	bne.n	8001568 <__cvt+0x92>
 8001534:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001536:	07db      	lsls	r3, r3, #31
 8001538:	d50e      	bpl.n	8001558 <__cvt+0x82>
 800153a:	eb00 0906 	add.w	r9, r0, r6
 800153e:	2200      	movs	r2, #0
 8001540:	2300      	movs	r3, #0
 8001542:	4620      	mov	r0, r4
 8001544:	4629      	mov	r1, r5
 8001546:	f7ff fad1 	bl	8000aec <__aeabi_dcmpeq>
 800154a:	b108      	cbz	r0, 8001550 <__cvt+0x7a>
 800154c:	f8cd 901c 	str.w	r9, [sp, #28]
 8001550:	2230      	movs	r2, #48	@ 0x30
 8001552:	9b07      	ldr	r3, [sp, #28]
 8001554:	454b      	cmp	r3, r9
 8001556:	d31e      	bcc.n	8001596 <__cvt+0xc0>
 8001558:	9b07      	ldr	r3, [sp, #28]
 800155a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800155c:	1bdb      	subs	r3, r3, r7
 800155e:	4638      	mov	r0, r7
 8001560:	6013      	str	r3, [r2, #0]
 8001562:	b008      	add	sp, #32
 8001564:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001568:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800156c:	eb00 0906 	add.w	r9, r0, r6
 8001570:	d1e5      	bne.n	800153e <__cvt+0x68>
 8001572:	7803      	ldrb	r3, [r0, #0]
 8001574:	2b30      	cmp	r3, #48	@ 0x30
 8001576:	d10a      	bne.n	800158e <__cvt+0xb8>
 8001578:	2200      	movs	r2, #0
 800157a:	2300      	movs	r3, #0
 800157c:	4620      	mov	r0, r4
 800157e:	4629      	mov	r1, r5
 8001580:	f7ff fab4 	bl	8000aec <__aeabi_dcmpeq>
 8001584:	b918      	cbnz	r0, 800158e <__cvt+0xb8>
 8001586:	f1c6 0601 	rsb	r6, r6, #1
 800158a:	f8ca 6000 	str.w	r6, [sl]
 800158e:	f8da 3000 	ldr.w	r3, [sl]
 8001592:	4499      	add	r9, r3
 8001594:	e7d3      	b.n	800153e <__cvt+0x68>
 8001596:	1c59      	adds	r1, r3, #1
 8001598:	9107      	str	r1, [sp, #28]
 800159a:	701a      	strb	r2, [r3, #0]
 800159c:	e7d9      	b.n	8001552 <__cvt+0x7c>

0800159e <__exponent>:
 800159e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015a0:	2900      	cmp	r1, #0
 80015a2:	bfba      	itte	lt
 80015a4:	4249      	neglt	r1, r1
 80015a6:	232d      	movlt	r3, #45	@ 0x2d
 80015a8:	232b      	movge	r3, #43	@ 0x2b
 80015aa:	2909      	cmp	r1, #9
 80015ac:	7002      	strb	r2, [r0, #0]
 80015ae:	7043      	strb	r3, [r0, #1]
 80015b0:	dd29      	ble.n	8001606 <__exponent+0x68>
 80015b2:	f10d 0307 	add.w	r3, sp, #7
 80015b6:	461d      	mov	r5, r3
 80015b8:	270a      	movs	r7, #10
 80015ba:	461a      	mov	r2, r3
 80015bc:	fbb1 f6f7 	udiv	r6, r1, r7
 80015c0:	fb07 1416 	mls	r4, r7, r6, r1
 80015c4:	3430      	adds	r4, #48	@ 0x30
 80015c6:	f802 4c01 	strb.w	r4, [r2, #-1]
 80015ca:	460c      	mov	r4, r1
 80015cc:	2c63      	cmp	r4, #99	@ 0x63
 80015ce:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80015d2:	4631      	mov	r1, r6
 80015d4:	dcf1      	bgt.n	80015ba <__exponent+0x1c>
 80015d6:	3130      	adds	r1, #48	@ 0x30
 80015d8:	1e94      	subs	r4, r2, #2
 80015da:	f803 1c01 	strb.w	r1, [r3, #-1]
 80015de:	1c41      	adds	r1, r0, #1
 80015e0:	4623      	mov	r3, r4
 80015e2:	42ab      	cmp	r3, r5
 80015e4:	d30a      	bcc.n	80015fc <__exponent+0x5e>
 80015e6:	f10d 0309 	add.w	r3, sp, #9
 80015ea:	1a9b      	subs	r3, r3, r2
 80015ec:	42ac      	cmp	r4, r5
 80015ee:	bf88      	it	hi
 80015f0:	2300      	movhi	r3, #0
 80015f2:	3302      	adds	r3, #2
 80015f4:	4403      	add	r3, r0
 80015f6:	1a18      	subs	r0, r3, r0
 80015f8:	b003      	add	sp, #12
 80015fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015fc:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001600:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001604:	e7ed      	b.n	80015e2 <__exponent+0x44>
 8001606:	2330      	movs	r3, #48	@ 0x30
 8001608:	3130      	adds	r1, #48	@ 0x30
 800160a:	7083      	strb	r3, [r0, #2]
 800160c:	70c1      	strb	r1, [r0, #3]
 800160e:	1d03      	adds	r3, r0, #4
 8001610:	e7f1      	b.n	80015f6 <__exponent+0x58>
	...

08001614 <_printf_float>:
 8001614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001618:	b091      	sub	sp, #68	@ 0x44
 800161a:	460c      	mov	r4, r1
 800161c:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001620:	4616      	mov	r6, r2
 8001622:	461f      	mov	r7, r3
 8001624:	4605      	mov	r5, r0
 8001626:	f000 fd59 	bl	80020dc <_localeconv_r>
 800162a:	6803      	ldr	r3, [r0, #0]
 800162c:	9308      	str	r3, [sp, #32]
 800162e:	4618      	mov	r0, r3
 8001630:	f7fe fe26 	bl	8000280 <strlen>
 8001634:	2300      	movs	r3, #0
 8001636:	930e      	str	r3, [sp, #56]	@ 0x38
 8001638:	f8d8 3000 	ldr.w	r3, [r8]
 800163c:	9009      	str	r0, [sp, #36]	@ 0x24
 800163e:	3307      	adds	r3, #7
 8001640:	f023 0307 	bic.w	r3, r3, #7
 8001644:	f103 0208 	add.w	r2, r3, #8
 8001648:	f894 a018 	ldrb.w	sl, [r4, #24]
 800164c:	f8d4 b000 	ldr.w	fp, [r4]
 8001650:	f8c8 2000 	str.w	r2, [r8]
 8001654:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001658:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800165c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800165e:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001662:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001666:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800166a:	4b9d      	ldr	r3, [pc, #628]	@ (80018e0 <_printf_float+0x2cc>)
 800166c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001670:	f7ff fa6e 	bl	8000b50 <__aeabi_dcmpun>
 8001674:	bb70      	cbnz	r0, 80016d4 <_printf_float+0xc0>
 8001676:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800167a:	4b99      	ldr	r3, [pc, #612]	@ (80018e0 <_printf_float+0x2cc>)
 800167c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001680:	f7ff fa48 	bl	8000b14 <__aeabi_dcmple>
 8001684:	bb30      	cbnz	r0, 80016d4 <_printf_float+0xc0>
 8001686:	2200      	movs	r2, #0
 8001688:	2300      	movs	r3, #0
 800168a:	4640      	mov	r0, r8
 800168c:	4649      	mov	r1, r9
 800168e:	f7ff fa37 	bl	8000b00 <__aeabi_dcmplt>
 8001692:	b110      	cbz	r0, 800169a <_printf_float+0x86>
 8001694:	232d      	movs	r3, #45	@ 0x2d
 8001696:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800169a:	4a92      	ldr	r2, [pc, #584]	@ (80018e4 <_printf_float+0x2d0>)
 800169c:	4b92      	ldr	r3, [pc, #584]	@ (80018e8 <_printf_float+0x2d4>)
 800169e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80016a2:	bf94      	ite	ls
 80016a4:	4690      	movls	r8, r2
 80016a6:	4698      	movhi	r8, r3
 80016a8:	2303      	movs	r3, #3
 80016aa:	6123      	str	r3, [r4, #16]
 80016ac:	f02b 0304 	bic.w	r3, fp, #4
 80016b0:	6023      	str	r3, [r4, #0]
 80016b2:	f04f 0900 	mov.w	r9, #0
 80016b6:	9700      	str	r7, [sp, #0]
 80016b8:	4633      	mov	r3, r6
 80016ba:	aa0f      	add	r2, sp, #60	@ 0x3c
 80016bc:	4621      	mov	r1, r4
 80016be:	4628      	mov	r0, r5
 80016c0:	f000 f9d4 	bl	8001a6c <_printf_common>
 80016c4:	3001      	adds	r0, #1
 80016c6:	f040 808f 	bne.w	80017e8 <_printf_float+0x1d4>
 80016ca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80016ce:	b011      	add	sp, #68	@ 0x44
 80016d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016d4:	4642      	mov	r2, r8
 80016d6:	464b      	mov	r3, r9
 80016d8:	4640      	mov	r0, r8
 80016da:	4649      	mov	r1, r9
 80016dc:	f7ff fa38 	bl	8000b50 <__aeabi_dcmpun>
 80016e0:	b140      	cbz	r0, 80016f4 <_printf_float+0xe0>
 80016e2:	464b      	mov	r3, r9
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	bfbc      	itt	lt
 80016e8:	232d      	movlt	r3, #45	@ 0x2d
 80016ea:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80016ee:	4a7f      	ldr	r2, [pc, #508]	@ (80018ec <_printf_float+0x2d8>)
 80016f0:	4b7f      	ldr	r3, [pc, #508]	@ (80018f0 <_printf_float+0x2dc>)
 80016f2:	e7d4      	b.n	800169e <_printf_float+0x8a>
 80016f4:	6863      	ldr	r3, [r4, #4]
 80016f6:	1c5a      	adds	r2, r3, #1
 80016f8:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80016fc:	d13f      	bne.n	800177e <_printf_float+0x16a>
 80016fe:	2306      	movs	r3, #6
 8001700:	6063      	str	r3, [r4, #4]
 8001702:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8001706:	2200      	movs	r2, #0
 8001708:	6023      	str	r3, [r4, #0]
 800170a:	9206      	str	r2, [sp, #24]
 800170c:	aa0e      	add	r2, sp, #56	@ 0x38
 800170e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8001712:	aa0d      	add	r2, sp, #52	@ 0x34
 8001714:	9203      	str	r2, [sp, #12]
 8001716:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 800171a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800171e:	6863      	ldr	r3, [r4, #4]
 8001720:	9300      	str	r3, [sp, #0]
 8001722:	4642      	mov	r2, r8
 8001724:	464b      	mov	r3, r9
 8001726:	4628      	mov	r0, r5
 8001728:	910a      	str	r1, [sp, #40]	@ 0x28
 800172a:	f7ff fed4 	bl	80014d6 <__cvt>
 800172e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001730:	2947      	cmp	r1, #71	@ 0x47
 8001732:	4680      	mov	r8, r0
 8001734:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001736:	d128      	bne.n	800178a <_printf_float+0x176>
 8001738:	1cc8      	adds	r0, r1, #3
 800173a:	db02      	blt.n	8001742 <_printf_float+0x12e>
 800173c:	6863      	ldr	r3, [r4, #4]
 800173e:	4299      	cmp	r1, r3
 8001740:	dd40      	ble.n	80017c4 <_printf_float+0x1b0>
 8001742:	f1aa 0a02 	sub.w	sl, sl, #2
 8001746:	fa5f fa8a 	uxtb.w	sl, sl
 800174a:	3901      	subs	r1, #1
 800174c:	4652      	mov	r2, sl
 800174e:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001752:	910d      	str	r1, [sp, #52]	@ 0x34
 8001754:	f7ff ff23 	bl	800159e <__exponent>
 8001758:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800175a:	1813      	adds	r3, r2, r0
 800175c:	2a01      	cmp	r2, #1
 800175e:	4681      	mov	r9, r0
 8001760:	6123      	str	r3, [r4, #16]
 8001762:	dc02      	bgt.n	800176a <_printf_float+0x156>
 8001764:	6822      	ldr	r2, [r4, #0]
 8001766:	07d2      	lsls	r2, r2, #31
 8001768:	d501      	bpl.n	800176e <_printf_float+0x15a>
 800176a:	3301      	adds	r3, #1
 800176c:	6123      	str	r3, [r4, #16]
 800176e:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001772:	2b00      	cmp	r3, #0
 8001774:	d09f      	beq.n	80016b6 <_printf_float+0xa2>
 8001776:	232d      	movs	r3, #45	@ 0x2d
 8001778:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800177c:	e79b      	b.n	80016b6 <_printf_float+0xa2>
 800177e:	2947      	cmp	r1, #71	@ 0x47
 8001780:	d1bf      	bne.n	8001702 <_printf_float+0xee>
 8001782:	2b00      	cmp	r3, #0
 8001784:	d1bd      	bne.n	8001702 <_printf_float+0xee>
 8001786:	2301      	movs	r3, #1
 8001788:	e7ba      	b.n	8001700 <_printf_float+0xec>
 800178a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800178e:	d9dc      	bls.n	800174a <_printf_float+0x136>
 8001790:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001794:	d118      	bne.n	80017c8 <_printf_float+0x1b4>
 8001796:	2900      	cmp	r1, #0
 8001798:	6863      	ldr	r3, [r4, #4]
 800179a:	dd0b      	ble.n	80017b4 <_printf_float+0x1a0>
 800179c:	6121      	str	r1, [r4, #16]
 800179e:	b913      	cbnz	r3, 80017a6 <_printf_float+0x192>
 80017a0:	6822      	ldr	r2, [r4, #0]
 80017a2:	07d0      	lsls	r0, r2, #31
 80017a4:	d502      	bpl.n	80017ac <_printf_float+0x198>
 80017a6:	3301      	adds	r3, #1
 80017a8:	440b      	add	r3, r1
 80017aa:	6123      	str	r3, [r4, #16]
 80017ac:	65a1      	str	r1, [r4, #88]	@ 0x58
 80017ae:	f04f 0900 	mov.w	r9, #0
 80017b2:	e7dc      	b.n	800176e <_printf_float+0x15a>
 80017b4:	b913      	cbnz	r3, 80017bc <_printf_float+0x1a8>
 80017b6:	6822      	ldr	r2, [r4, #0]
 80017b8:	07d2      	lsls	r2, r2, #31
 80017ba:	d501      	bpl.n	80017c0 <_printf_float+0x1ac>
 80017bc:	3302      	adds	r3, #2
 80017be:	e7f4      	b.n	80017aa <_printf_float+0x196>
 80017c0:	2301      	movs	r3, #1
 80017c2:	e7f2      	b.n	80017aa <_printf_float+0x196>
 80017c4:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80017c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80017ca:	4299      	cmp	r1, r3
 80017cc:	db05      	blt.n	80017da <_printf_float+0x1c6>
 80017ce:	6823      	ldr	r3, [r4, #0]
 80017d0:	6121      	str	r1, [r4, #16]
 80017d2:	07d8      	lsls	r0, r3, #31
 80017d4:	d5ea      	bpl.n	80017ac <_printf_float+0x198>
 80017d6:	1c4b      	adds	r3, r1, #1
 80017d8:	e7e7      	b.n	80017aa <_printf_float+0x196>
 80017da:	2900      	cmp	r1, #0
 80017dc:	bfd4      	ite	le
 80017de:	f1c1 0202 	rsble	r2, r1, #2
 80017e2:	2201      	movgt	r2, #1
 80017e4:	4413      	add	r3, r2
 80017e6:	e7e0      	b.n	80017aa <_printf_float+0x196>
 80017e8:	6823      	ldr	r3, [r4, #0]
 80017ea:	055a      	lsls	r2, r3, #21
 80017ec:	d407      	bmi.n	80017fe <_printf_float+0x1ea>
 80017ee:	6923      	ldr	r3, [r4, #16]
 80017f0:	4642      	mov	r2, r8
 80017f2:	4631      	mov	r1, r6
 80017f4:	4628      	mov	r0, r5
 80017f6:	47b8      	blx	r7
 80017f8:	3001      	adds	r0, #1
 80017fa:	d12b      	bne.n	8001854 <_printf_float+0x240>
 80017fc:	e765      	b.n	80016ca <_printf_float+0xb6>
 80017fe:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001802:	f240 80dd 	bls.w	80019c0 <_printf_float+0x3ac>
 8001806:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800180a:	2200      	movs	r2, #0
 800180c:	2300      	movs	r3, #0
 800180e:	f7ff f96d 	bl	8000aec <__aeabi_dcmpeq>
 8001812:	2800      	cmp	r0, #0
 8001814:	d033      	beq.n	800187e <_printf_float+0x26a>
 8001816:	4a37      	ldr	r2, [pc, #220]	@ (80018f4 <_printf_float+0x2e0>)
 8001818:	2301      	movs	r3, #1
 800181a:	4631      	mov	r1, r6
 800181c:	4628      	mov	r0, r5
 800181e:	47b8      	blx	r7
 8001820:	3001      	adds	r0, #1
 8001822:	f43f af52 	beq.w	80016ca <_printf_float+0xb6>
 8001826:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 800182a:	4543      	cmp	r3, r8
 800182c:	db02      	blt.n	8001834 <_printf_float+0x220>
 800182e:	6823      	ldr	r3, [r4, #0]
 8001830:	07d8      	lsls	r0, r3, #31
 8001832:	d50f      	bpl.n	8001854 <_printf_float+0x240>
 8001834:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001838:	4631      	mov	r1, r6
 800183a:	4628      	mov	r0, r5
 800183c:	47b8      	blx	r7
 800183e:	3001      	adds	r0, #1
 8001840:	f43f af43 	beq.w	80016ca <_printf_float+0xb6>
 8001844:	f04f 0900 	mov.w	r9, #0
 8001848:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800184c:	f104 0a1a 	add.w	sl, r4, #26
 8001850:	45c8      	cmp	r8, r9
 8001852:	dc09      	bgt.n	8001868 <_printf_float+0x254>
 8001854:	6823      	ldr	r3, [r4, #0]
 8001856:	079b      	lsls	r3, r3, #30
 8001858:	f100 8103 	bmi.w	8001a62 <_printf_float+0x44e>
 800185c:	68e0      	ldr	r0, [r4, #12]
 800185e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001860:	4298      	cmp	r0, r3
 8001862:	bfb8      	it	lt
 8001864:	4618      	movlt	r0, r3
 8001866:	e732      	b.n	80016ce <_printf_float+0xba>
 8001868:	2301      	movs	r3, #1
 800186a:	4652      	mov	r2, sl
 800186c:	4631      	mov	r1, r6
 800186e:	4628      	mov	r0, r5
 8001870:	47b8      	blx	r7
 8001872:	3001      	adds	r0, #1
 8001874:	f43f af29 	beq.w	80016ca <_printf_float+0xb6>
 8001878:	f109 0901 	add.w	r9, r9, #1
 800187c:	e7e8      	b.n	8001850 <_printf_float+0x23c>
 800187e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001880:	2b00      	cmp	r3, #0
 8001882:	dc39      	bgt.n	80018f8 <_printf_float+0x2e4>
 8001884:	4a1b      	ldr	r2, [pc, #108]	@ (80018f4 <_printf_float+0x2e0>)
 8001886:	2301      	movs	r3, #1
 8001888:	4631      	mov	r1, r6
 800188a:	4628      	mov	r0, r5
 800188c:	47b8      	blx	r7
 800188e:	3001      	adds	r0, #1
 8001890:	f43f af1b 	beq.w	80016ca <_printf_float+0xb6>
 8001894:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001898:	ea59 0303 	orrs.w	r3, r9, r3
 800189c:	d102      	bne.n	80018a4 <_printf_float+0x290>
 800189e:	6823      	ldr	r3, [r4, #0]
 80018a0:	07d9      	lsls	r1, r3, #31
 80018a2:	d5d7      	bpl.n	8001854 <_printf_float+0x240>
 80018a4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80018a8:	4631      	mov	r1, r6
 80018aa:	4628      	mov	r0, r5
 80018ac:	47b8      	blx	r7
 80018ae:	3001      	adds	r0, #1
 80018b0:	f43f af0b 	beq.w	80016ca <_printf_float+0xb6>
 80018b4:	f04f 0a00 	mov.w	sl, #0
 80018b8:	f104 0b1a 	add.w	fp, r4, #26
 80018bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80018be:	425b      	negs	r3, r3
 80018c0:	4553      	cmp	r3, sl
 80018c2:	dc01      	bgt.n	80018c8 <_printf_float+0x2b4>
 80018c4:	464b      	mov	r3, r9
 80018c6:	e793      	b.n	80017f0 <_printf_float+0x1dc>
 80018c8:	2301      	movs	r3, #1
 80018ca:	465a      	mov	r2, fp
 80018cc:	4631      	mov	r1, r6
 80018ce:	4628      	mov	r0, r5
 80018d0:	47b8      	blx	r7
 80018d2:	3001      	adds	r0, #1
 80018d4:	f43f aef9 	beq.w	80016ca <_printf_float+0xb6>
 80018d8:	f10a 0a01 	add.w	sl, sl, #1
 80018dc:	e7ee      	b.n	80018bc <_printf_float+0x2a8>
 80018de:	bf00      	nop
 80018e0:	7fefffff 	.word	0x7fefffff
 80018e4:	08004000 	.word	0x08004000
 80018e8:	08004004 	.word	0x08004004
 80018ec:	08004008 	.word	0x08004008
 80018f0:	0800400c 	.word	0x0800400c
 80018f4:	08004010 	.word	0x08004010
 80018f8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80018fa:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80018fe:	4553      	cmp	r3, sl
 8001900:	bfa8      	it	ge
 8001902:	4653      	movge	r3, sl
 8001904:	2b00      	cmp	r3, #0
 8001906:	4699      	mov	r9, r3
 8001908:	dc36      	bgt.n	8001978 <_printf_float+0x364>
 800190a:	f04f 0b00 	mov.w	fp, #0
 800190e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001912:	f104 021a 	add.w	r2, r4, #26
 8001916:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001918:	930a      	str	r3, [sp, #40]	@ 0x28
 800191a:	eba3 0309 	sub.w	r3, r3, r9
 800191e:	455b      	cmp	r3, fp
 8001920:	dc31      	bgt.n	8001986 <_printf_float+0x372>
 8001922:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001924:	459a      	cmp	sl, r3
 8001926:	dc3a      	bgt.n	800199e <_printf_float+0x38a>
 8001928:	6823      	ldr	r3, [r4, #0]
 800192a:	07da      	lsls	r2, r3, #31
 800192c:	d437      	bmi.n	800199e <_printf_float+0x38a>
 800192e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001930:	ebaa 0903 	sub.w	r9, sl, r3
 8001934:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001936:	ebaa 0303 	sub.w	r3, sl, r3
 800193a:	4599      	cmp	r9, r3
 800193c:	bfa8      	it	ge
 800193e:	4699      	movge	r9, r3
 8001940:	f1b9 0f00 	cmp.w	r9, #0
 8001944:	dc33      	bgt.n	80019ae <_printf_float+0x39a>
 8001946:	f04f 0800 	mov.w	r8, #0
 800194a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800194e:	f104 0b1a 	add.w	fp, r4, #26
 8001952:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001954:	ebaa 0303 	sub.w	r3, sl, r3
 8001958:	eba3 0309 	sub.w	r3, r3, r9
 800195c:	4543      	cmp	r3, r8
 800195e:	f77f af79 	ble.w	8001854 <_printf_float+0x240>
 8001962:	2301      	movs	r3, #1
 8001964:	465a      	mov	r2, fp
 8001966:	4631      	mov	r1, r6
 8001968:	4628      	mov	r0, r5
 800196a:	47b8      	blx	r7
 800196c:	3001      	adds	r0, #1
 800196e:	f43f aeac 	beq.w	80016ca <_printf_float+0xb6>
 8001972:	f108 0801 	add.w	r8, r8, #1
 8001976:	e7ec      	b.n	8001952 <_printf_float+0x33e>
 8001978:	4642      	mov	r2, r8
 800197a:	4631      	mov	r1, r6
 800197c:	4628      	mov	r0, r5
 800197e:	47b8      	blx	r7
 8001980:	3001      	adds	r0, #1
 8001982:	d1c2      	bne.n	800190a <_printf_float+0x2f6>
 8001984:	e6a1      	b.n	80016ca <_printf_float+0xb6>
 8001986:	2301      	movs	r3, #1
 8001988:	4631      	mov	r1, r6
 800198a:	4628      	mov	r0, r5
 800198c:	920a      	str	r2, [sp, #40]	@ 0x28
 800198e:	47b8      	blx	r7
 8001990:	3001      	adds	r0, #1
 8001992:	f43f ae9a 	beq.w	80016ca <_printf_float+0xb6>
 8001996:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001998:	f10b 0b01 	add.w	fp, fp, #1
 800199c:	e7bb      	b.n	8001916 <_printf_float+0x302>
 800199e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80019a2:	4631      	mov	r1, r6
 80019a4:	4628      	mov	r0, r5
 80019a6:	47b8      	blx	r7
 80019a8:	3001      	adds	r0, #1
 80019aa:	d1c0      	bne.n	800192e <_printf_float+0x31a>
 80019ac:	e68d      	b.n	80016ca <_printf_float+0xb6>
 80019ae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80019b0:	464b      	mov	r3, r9
 80019b2:	4442      	add	r2, r8
 80019b4:	4631      	mov	r1, r6
 80019b6:	4628      	mov	r0, r5
 80019b8:	47b8      	blx	r7
 80019ba:	3001      	adds	r0, #1
 80019bc:	d1c3      	bne.n	8001946 <_printf_float+0x332>
 80019be:	e684      	b.n	80016ca <_printf_float+0xb6>
 80019c0:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80019c4:	f1ba 0f01 	cmp.w	sl, #1
 80019c8:	dc01      	bgt.n	80019ce <_printf_float+0x3ba>
 80019ca:	07db      	lsls	r3, r3, #31
 80019cc:	d536      	bpl.n	8001a3c <_printf_float+0x428>
 80019ce:	2301      	movs	r3, #1
 80019d0:	4642      	mov	r2, r8
 80019d2:	4631      	mov	r1, r6
 80019d4:	4628      	mov	r0, r5
 80019d6:	47b8      	blx	r7
 80019d8:	3001      	adds	r0, #1
 80019da:	f43f ae76 	beq.w	80016ca <_printf_float+0xb6>
 80019de:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80019e2:	4631      	mov	r1, r6
 80019e4:	4628      	mov	r0, r5
 80019e6:	47b8      	blx	r7
 80019e8:	3001      	adds	r0, #1
 80019ea:	f43f ae6e 	beq.w	80016ca <_printf_float+0xb6>
 80019ee:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80019f2:	2200      	movs	r2, #0
 80019f4:	2300      	movs	r3, #0
 80019f6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 80019fa:	f7ff f877 	bl	8000aec <__aeabi_dcmpeq>
 80019fe:	b9c0      	cbnz	r0, 8001a32 <_printf_float+0x41e>
 8001a00:	4653      	mov	r3, sl
 8001a02:	f108 0201 	add.w	r2, r8, #1
 8001a06:	4631      	mov	r1, r6
 8001a08:	4628      	mov	r0, r5
 8001a0a:	47b8      	blx	r7
 8001a0c:	3001      	adds	r0, #1
 8001a0e:	d10c      	bne.n	8001a2a <_printf_float+0x416>
 8001a10:	e65b      	b.n	80016ca <_printf_float+0xb6>
 8001a12:	2301      	movs	r3, #1
 8001a14:	465a      	mov	r2, fp
 8001a16:	4631      	mov	r1, r6
 8001a18:	4628      	mov	r0, r5
 8001a1a:	47b8      	blx	r7
 8001a1c:	3001      	adds	r0, #1
 8001a1e:	f43f ae54 	beq.w	80016ca <_printf_float+0xb6>
 8001a22:	f108 0801 	add.w	r8, r8, #1
 8001a26:	45d0      	cmp	r8, sl
 8001a28:	dbf3      	blt.n	8001a12 <_printf_float+0x3fe>
 8001a2a:	464b      	mov	r3, r9
 8001a2c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001a30:	e6df      	b.n	80017f2 <_printf_float+0x1de>
 8001a32:	f04f 0800 	mov.w	r8, #0
 8001a36:	f104 0b1a 	add.w	fp, r4, #26
 8001a3a:	e7f4      	b.n	8001a26 <_printf_float+0x412>
 8001a3c:	2301      	movs	r3, #1
 8001a3e:	4642      	mov	r2, r8
 8001a40:	e7e1      	b.n	8001a06 <_printf_float+0x3f2>
 8001a42:	2301      	movs	r3, #1
 8001a44:	464a      	mov	r2, r9
 8001a46:	4631      	mov	r1, r6
 8001a48:	4628      	mov	r0, r5
 8001a4a:	47b8      	blx	r7
 8001a4c:	3001      	adds	r0, #1
 8001a4e:	f43f ae3c 	beq.w	80016ca <_printf_float+0xb6>
 8001a52:	f108 0801 	add.w	r8, r8, #1
 8001a56:	68e3      	ldr	r3, [r4, #12]
 8001a58:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001a5a:	1a5b      	subs	r3, r3, r1
 8001a5c:	4543      	cmp	r3, r8
 8001a5e:	dcf0      	bgt.n	8001a42 <_printf_float+0x42e>
 8001a60:	e6fc      	b.n	800185c <_printf_float+0x248>
 8001a62:	f04f 0800 	mov.w	r8, #0
 8001a66:	f104 0919 	add.w	r9, r4, #25
 8001a6a:	e7f4      	b.n	8001a56 <_printf_float+0x442>

08001a6c <_printf_common>:
 8001a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a70:	4616      	mov	r6, r2
 8001a72:	4698      	mov	r8, r3
 8001a74:	688a      	ldr	r2, [r1, #8]
 8001a76:	690b      	ldr	r3, [r1, #16]
 8001a78:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001a7c:	4293      	cmp	r3, r2
 8001a7e:	bfb8      	it	lt
 8001a80:	4613      	movlt	r3, r2
 8001a82:	6033      	str	r3, [r6, #0]
 8001a84:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001a88:	4607      	mov	r7, r0
 8001a8a:	460c      	mov	r4, r1
 8001a8c:	b10a      	cbz	r2, 8001a92 <_printf_common+0x26>
 8001a8e:	3301      	adds	r3, #1
 8001a90:	6033      	str	r3, [r6, #0]
 8001a92:	6823      	ldr	r3, [r4, #0]
 8001a94:	0699      	lsls	r1, r3, #26
 8001a96:	bf42      	ittt	mi
 8001a98:	6833      	ldrmi	r3, [r6, #0]
 8001a9a:	3302      	addmi	r3, #2
 8001a9c:	6033      	strmi	r3, [r6, #0]
 8001a9e:	6825      	ldr	r5, [r4, #0]
 8001aa0:	f015 0506 	ands.w	r5, r5, #6
 8001aa4:	d106      	bne.n	8001ab4 <_printf_common+0x48>
 8001aa6:	f104 0a19 	add.w	sl, r4, #25
 8001aaa:	68e3      	ldr	r3, [r4, #12]
 8001aac:	6832      	ldr	r2, [r6, #0]
 8001aae:	1a9b      	subs	r3, r3, r2
 8001ab0:	42ab      	cmp	r3, r5
 8001ab2:	dc26      	bgt.n	8001b02 <_printf_common+0x96>
 8001ab4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001ab8:	6822      	ldr	r2, [r4, #0]
 8001aba:	3b00      	subs	r3, #0
 8001abc:	bf18      	it	ne
 8001abe:	2301      	movne	r3, #1
 8001ac0:	0692      	lsls	r2, r2, #26
 8001ac2:	d42b      	bmi.n	8001b1c <_printf_common+0xb0>
 8001ac4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001ac8:	4641      	mov	r1, r8
 8001aca:	4638      	mov	r0, r7
 8001acc:	47c8      	blx	r9
 8001ace:	3001      	adds	r0, #1
 8001ad0:	d01e      	beq.n	8001b10 <_printf_common+0xa4>
 8001ad2:	6823      	ldr	r3, [r4, #0]
 8001ad4:	6922      	ldr	r2, [r4, #16]
 8001ad6:	f003 0306 	and.w	r3, r3, #6
 8001ada:	2b04      	cmp	r3, #4
 8001adc:	bf02      	ittt	eq
 8001ade:	68e5      	ldreq	r5, [r4, #12]
 8001ae0:	6833      	ldreq	r3, [r6, #0]
 8001ae2:	1aed      	subeq	r5, r5, r3
 8001ae4:	68a3      	ldr	r3, [r4, #8]
 8001ae6:	bf0c      	ite	eq
 8001ae8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001aec:	2500      	movne	r5, #0
 8001aee:	4293      	cmp	r3, r2
 8001af0:	bfc4      	itt	gt
 8001af2:	1a9b      	subgt	r3, r3, r2
 8001af4:	18ed      	addgt	r5, r5, r3
 8001af6:	2600      	movs	r6, #0
 8001af8:	341a      	adds	r4, #26
 8001afa:	42b5      	cmp	r5, r6
 8001afc:	d11a      	bne.n	8001b34 <_printf_common+0xc8>
 8001afe:	2000      	movs	r0, #0
 8001b00:	e008      	b.n	8001b14 <_printf_common+0xa8>
 8001b02:	2301      	movs	r3, #1
 8001b04:	4652      	mov	r2, sl
 8001b06:	4641      	mov	r1, r8
 8001b08:	4638      	mov	r0, r7
 8001b0a:	47c8      	blx	r9
 8001b0c:	3001      	adds	r0, #1
 8001b0e:	d103      	bne.n	8001b18 <_printf_common+0xac>
 8001b10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b18:	3501      	adds	r5, #1
 8001b1a:	e7c6      	b.n	8001aaa <_printf_common+0x3e>
 8001b1c:	18e1      	adds	r1, r4, r3
 8001b1e:	1c5a      	adds	r2, r3, #1
 8001b20:	2030      	movs	r0, #48	@ 0x30
 8001b22:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001b26:	4422      	add	r2, r4
 8001b28:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001b2c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001b30:	3302      	adds	r3, #2
 8001b32:	e7c7      	b.n	8001ac4 <_printf_common+0x58>
 8001b34:	2301      	movs	r3, #1
 8001b36:	4622      	mov	r2, r4
 8001b38:	4641      	mov	r1, r8
 8001b3a:	4638      	mov	r0, r7
 8001b3c:	47c8      	blx	r9
 8001b3e:	3001      	adds	r0, #1
 8001b40:	d0e6      	beq.n	8001b10 <_printf_common+0xa4>
 8001b42:	3601      	adds	r6, #1
 8001b44:	e7d9      	b.n	8001afa <_printf_common+0x8e>
	...

08001b48 <_printf_i>:
 8001b48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b4c:	7e0f      	ldrb	r7, [r1, #24]
 8001b4e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001b50:	2f78      	cmp	r7, #120	@ 0x78
 8001b52:	4691      	mov	r9, r2
 8001b54:	4680      	mov	r8, r0
 8001b56:	460c      	mov	r4, r1
 8001b58:	469a      	mov	sl, r3
 8001b5a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001b5e:	d807      	bhi.n	8001b70 <_printf_i+0x28>
 8001b60:	2f62      	cmp	r7, #98	@ 0x62
 8001b62:	d80a      	bhi.n	8001b7a <_printf_i+0x32>
 8001b64:	2f00      	cmp	r7, #0
 8001b66:	f000 80d2 	beq.w	8001d0e <_printf_i+0x1c6>
 8001b6a:	2f58      	cmp	r7, #88	@ 0x58
 8001b6c:	f000 80b9 	beq.w	8001ce2 <_printf_i+0x19a>
 8001b70:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001b74:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001b78:	e03a      	b.n	8001bf0 <_printf_i+0xa8>
 8001b7a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001b7e:	2b15      	cmp	r3, #21
 8001b80:	d8f6      	bhi.n	8001b70 <_printf_i+0x28>
 8001b82:	a101      	add	r1, pc, #4	@ (adr r1, 8001b88 <_printf_i+0x40>)
 8001b84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001b88:	08001be1 	.word	0x08001be1
 8001b8c:	08001bf5 	.word	0x08001bf5
 8001b90:	08001b71 	.word	0x08001b71
 8001b94:	08001b71 	.word	0x08001b71
 8001b98:	08001b71 	.word	0x08001b71
 8001b9c:	08001b71 	.word	0x08001b71
 8001ba0:	08001bf5 	.word	0x08001bf5
 8001ba4:	08001b71 	.word	0x08001b71
 8001ba8:	08001b71 	.word	0x08001b71
 8001bac:	08001b71 	.word	0x08001b71
 8001bb0:	08001b71 	.word	0x08001b71
 8001bb4:	08001cf5 	.word	0x08001cf5
 8001bb8:	08001c1f 	.word	0x08001c1f
 8001bbc:	08001caf 	.word	0x08001caf
 8001bc0:	08001b71 	.word	0x08001b71
 8001bc4:	08001b71 	.word	0x08001b71
 8001bc8:	08001d17 	.word	0x08001d17
 8001bcc:	08001b71 	.word	0x08001b71
 8001bd0:	08001c1f 	.word	0x08001c1f
 8001bd4:	08001b71 	.word	0x08001b71
 8001bd8:	08001b71 	.word	0x08001b71
 8001bdc:	08001cb7 	.word	0x08001cb7
 8001be0:	6833      	ldr	r3, [r6, #0]
 8001be2:	1d1a      	adds	r2, r3, #4
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	6032      	str	r2, [r6, #0]
 8001be8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001bec:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001bf0:	2301      	movs	r3, #1
 8001bf2:	e09d      	b.n	8001d30 <_printf_i+0x1e8>
 8001bf4:	6833      	ldr	r3, [r6, #0]
 8001bf6:	6820      	ldr	r0, [r4, #0]
 8001bf8:	1d19      	adds	r1, r3, #4
 8001bfa:	6031      	str	r1, [r6, #0]
 8001bfc:	0606      	lsls	r6, r0, #24
 8001bfe:	d501      	bpl.n	8001c04 <_printf_i+0xbc>
 8001c00:	681d      	ldr	r5, [r3, #0]
 8001c02:	e003      	b.n	8001c0c <_printf_i+0xc4>
 8001c04:	0645      	lsls	r5, r0, #25
 8001c06:	d5fb      	bpl.n	8001c00 <_printf_i+0xb8>
 8001c08:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001c0c:	2d00      	cmp	r5, #0
 8001c0e:	da03      	bge.n	8001c18 <_printf_i+0xd0>
 8001c10:	232d      	movs	r3, #45	@ 0x2d
 8001c12:	426d      	negs	r5, r5
 8001c14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c18:	4859      	ldr	r0, [pc, #356]	@ (8001d80 <_printf_i+0x238>)
 8001c1a:	230a      	movs	r3, #10
 8001c1c:	e011      	b.n	8001c42 <_printf_i+0xfa>
 8001c1e:	6821      	ldr	r1, [r4, #0]
 8001c20:	6833      	ldr	r3, [r6, #0]
 8001c22:	0608      	lsls	r0, r1, #24
 8001c24:	f853 5b04 	ldr.w	r5, [r3], #4
 8001c28:	d402      	bmi.n	8001c30 <_printf_i+0xe8>
 8001c2a:	0649      	lsls	r1, r1, #25
 8001c2c:	bf48      	it	mi
 8001c2e:	b2ad      	uxthmi	r5, r5
 8001c30:	2f6f      	cmp	r7, #111	@ 0x6f
 8001c32:	4853      	ldr	r0, [pc, #332]	@ (8001d80 <_printf_i+0x238>)
 8001c34:	6033      	str	r3, [r6, #0]
 8001c36:	bf14      	ite	ne
 8001c38:	230a      	movne	r3, #10
 8001c3a:	2308      	moveq	r3, #8
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001c42:	6866      	ldr	r6, [r4, #4]
 8001c44:	60a6      	str	r6, [r4, #8]
 8001c46:	2e00      	cmp	r6, #0
 8001c48:	bfa2      	ittt	ge
 8001c4a:	6821      	ldrge	r1, [r4, #0]
 8001c4c:	f021 0104 	bicge.w	r1, r1, #4
 8001c50:	6021      	strge	r1, [r4, #0]
 8001c52:	b90d      	cbnz	r5, 8001c58 <_printf_i+0x110>
 8001c54:	2e00      	cmp	r6, #0
 8001c56:	d04b      	beq.n	8001cf0 <_printf_i+0x1a8>
 8001c58:	4616      	mov	r6, r2
 8001c5a:	fbb5 f1f3 	udiv	r1, r5, r3
 8001c5e:	fb03 5711 	mls	r7, r3, r1, r5
 8001c62:	5dc7      	ldrb	r7, [r0, r7]
 8001c64:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001c68:	462f      	mov	r7, r5
 8001c6a:	42bb      	cmp	r3, r7
 8001c6c:	460d      	mov	r5, r1
 8001c6e:	d9f4      	bls.n	8001c5a <_printf_i+0x112>
 8001c70:	2b08      	cmp	r3, #8
 8001c72:	d10b      	bne.n	8001c8c <_printf_i+0x144>
 8001c74:	6823      	ldr	r3, [r4, #0]
 8001c76:	07df      	lsls	r7, r3, #31
 8001c78:	d508      	bpl.n	8001c8c <_printf_i+0x144>
 8001c7a:	6923      	ldr	r3, [r4, #16]
 8001c7c:	6861      	ldr	r1, [r4, #4]
 8001c7e:	4299      	cmp	r1, r3
 8001c80:	bfde      	ittt	le
 8001c82:	2330      	movle	r3, #48	@ 0x30
 8001c84:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001c88:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001c8c:	1b92      	subs	r2, r2, r6
 8001c8e:	6122      	str	r2, [r4, #16]
 8001c90:	f8cd a000 	str.w	sl, [sp]
 8001c94:	464b      	mov	r3, r9
 8001c96:	aa03      	add	r2, sp, #12
 8001c98:	4621      	mov	r1, r4
 8001c9a:	4640      	mov	r0, r8
 8001c9c:	f7ff fee6 	bl	8001a6c <_printf_common>
 8001ca0:	3001      	adds	r0, #1
 8001ca2:	d14a      	bne.n	8001d3a <_printf_i+0x1f2>
 8001ca4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001ca8:	b004      	add	sp, #16
 8001caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001cae:	6823      	ldr	r3, [r4, #0]
 8001cb0:	f043 0320 	orr.w	r3, r3, #32
 8001cb4:	6023      	str	r3, [r4, #0]
 8001cb6:	4833      	ldr	r0, [pc, #204]	@ (8001d84 <_printf_i+0x23c>)
 8001cb8:	2778      	movs	r7, #120	@ 0x78
 8001cba:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001cbe:	6823      	ldr	r3, [r4, #0]
 8001cc0:	6831      	ldr	r1, [r6, #0]
 8001cc2:	061f      	lsls	r7, r3, #24
 8001cc4:	f851 5b04 	ldr.w	r5, [r1], #4
 8001cc8:	d402      	bmi.n	8001cd0 <_printf_i+0x188>
 8001cca:	065f      	lsls	r7, r3, #25
 8001ccc:	bf48      	it	mi
 8001cce:	b2ad      	uxthmi	r5, r5
 8001cd0:	6031      	str	r1, [r6, #0]
 8001cd2:	07d9      	lsls	r1, r3, #31
 8001cd4:	bf44      	itt	mi
 8001cd6:	f043 0320 	orrmi.w	r3, r3, #32
 8001cda:	6023      	strmi	r3, [r4, #0]
 8001cdc:	b11d      	cbz	r5, 8001ce6 <_printf_i+0x19e>
 8001cde:	2310      	movs	r3, #16
 8001ce0:	e7ac      	b.n	8001c3c <_printf_i+0xf4>
 8001ce2:	4827      	ldr	r0, [pc, #156]	@ (8001d80 <_printf_i+0x238>)
 8001ce4:	e7e9      	b.n	8001cba <_printf_i+0x172>
 8001ce6:	6823      	ldr	r3, [r4, #0]
 8001ce8:	f023 0320 	bic.w	r3, r3, #32
 8001cec:	6023      	str	r3, [r4, #0]
 8001cee:	e7f6      	b.n	8001cde <_printf_i+0x196>
 8001cf0:	4616      	mov	r6, r2
 8001cf2:	e7bd      	b.n	8001c70 <_printf_i+0x128>
 8001cf4:	6833      	ldr	r3, [r6, #0]
 8001cf6:	6825      	ldr	r5, [r4, #0]
 8001cf8:	6961      	ldr	r1, [r4, #20]
 8001cfa:	1d18      	adds	r0, r3, #4
 8001cfc:	6030      	str	r0, [r6, #0]
 8001cfe:	062e      	lsls	r6, r5, #24
 8001d00:	681b      	ldr	r3, [r3, #0]
 8001d02:	d501      	bpl.n	8001d08 <_printf_i+0x1c0>
 8001d04:	6019      	str	r1, [r3, #0]
 8001d06:	e002      	b.n	8001d0e <_printf_i+0x1c6>
 8001d08:	0668      	lsls	r0, r5, #25
 8001d0a:	d5fb      	bpl.n	8001d04 <_printf_i+0x1bc>
 8001d0c:	8019      	strh	r1, [r3, #0]
 8001d0e:	2300      	movs	r3, #0
 8001d10:	6123      	str	r3, [r4, #16]
 8001d12:	4616      	mov	r6, r2
 8001d14:	e7bc      	b.n	8001c90 <_printf_i+0x148>
 8001d16:	6833      	ldr	r3, [r6, #0]
 8001d18:	1d1a      	adds	r2, r3, #4
 8001d1a:	6032      	str	r2, [r6, #0]
 8001d1c:	681e      	ldr	r6, [r3, #0]
 8001d1e:	6862      	ldr	r2, [r4, #4]
 8001d20:	2100      	movs	r1, #0
 8001d22:	4630      	mov	r0, r6
 8001d24:	f7fe fa5c 	bl	80001e0 <memchr>
 8001d28:	b108      	cbz	r0, 8001d2e <_printf_i+0x1e6>
 8001d2a:	1b80      	subs	r0, r0, r6
 8001d2c:	6060      	str	r0, [r4, #4]
 8001d2e:	6863      	ldr	r3, [r4, #4]
 8001d30:	6123      	str	r3, [r4, #16]
 8001d32:	2300      	movs	r3, #0
 8001d34:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001d38:	e7aa      	b.n	8001c90 <_printf_i+0x148>
 8001d3a:	6923      	ldr	r3, [r4, #16]
 8001d3c:	4632      	mov	r2, r6
 8001d3e:	4649      	mov	r1, r9
 8001d40:	4640      	mov	r0, r8
 8001d42:	47d0      	blx	sl
 8001d44:	3001      	adds	r0, #1
 8001d46:	d0ad      	beq.n	8001ca4 <_printf_i+0x15c>
 8001d48:	6823      	ldr	r3, [r4, #0]
 8001d4a:	079b      	lsls	r3, r3, #30
 8001d4c:	d413      	bmi.n	8001d76 <_printf_i+0x22e>
 8001d4e:	68e0      	ldr	r0, [r4, #12]
 8001d50:	9b03      	ldr	r3, [sp, #12]
 8001d52:	4298      	cmp	r0, r3
 8001d54:	bfb8      	it	lt
 8001d56:	4618      	movlt	r0, r3
 8001d58:	e7a6      	b.n	8001ca8 <_printf_i+0x160>
 8001d5a:	2301      	movs	r3, #1
 8001d5c:	4632      	mov	r2, r6
 8001d5e:	4649      	mov	r1, r9
 8001d60:	4640      	mov	r0, r8
 8001d62:	47d0      	blx	sl
 8001d64:	3001      	adds	r0, #1
 8001d66:	d09d      	beq.n	8001ca4 <_printf_i+0x15c>
 8001d68:	3501      	adds	r5, #1
 8001d6a:	68e3      	ldr	r3, [r4, #12]
 8001d6c:	9903      	ldr	r1, [sp, #12]
 8001d6e:	1a5b      	subs	r3, r3, r1
 8001d70:	42ab      	cmp	r3, r5
 8001d72:	dcf2      	bgt.n	8001d5a <_printf_i+0x212>
 8001d74:	e7eb      	b.n	8001d4e <_printf_i+0x206>
 8001d76:	2500      	movs	r5, #0
 8001d78:	f104 0619 	add.w	r6, r4, #25
 8001d7c:	e7f5      	b.n	8001d6a <_printf_i+0x222>
 8001d7e:	bf00      	nop
 8001d80:	08004012 	.word	0x08004012
 8001d84:	08004023 	.word	0x08004023

08001d88 <std>:
 8001d88:	2300      	movs	r3, #0
 8001d8a:	b510      	push	{r4, lr}
 8001d8c:	4604      	mov	r4, r0
 8001d8e:	e9c0 3300 	strd	r3, r3, [r0]
 8001d92:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001d96:	6083      	str	r3, [r0, #8]
 8001d98:	8181      	strh	r1, [r0, #12]
 8001d9a:	6643      	str	r3, [r0, #100]	@ 0x64
 8001d9c:	81c2      	strh	r2, [r0, #14]
 8001d9e:	6183      	str	r3, [r0, #24]
 8001da0:	4619      	mov	r1, r3
 8001da2:	2208      	movs	r2, #8
 8001da4:	305c      	adds	r0, #92	@ 0x5c
 8001da6:	f000 f991 	bl	80020cc <memset>
 8001daa:	4b0d      	ldr	r3, [pc, #52]	@ (8001de0 <std+0x58>)
 8001dac:	6263      	str	r3, [r4, #36]	@ 0x24
 8001dae:	4b0d      	ldr	r3, [pc, #52]	@ (8001de4 <std+0x5c>)
 8001db0:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001db2:	4b0d      	ldr	r3, [pc, #52]	@ (8001de8 <std+0x60>)
 8001db4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001db6:	4b0d      	ldr	r3, [pc, #52]	@ (8001dec <std+0x64>)
 8001db8:	6323      	str	r3, [r4, #48]	@ 0x30
 8001dba:	4b0d      	ldr	r3, [pc, #52]	@ (8001df0 <std+0x68>)
 8001dbc:	6224      	str	r4, [r4, #32]
 8001dbe:	429c      	cmp	r4, r3
 8001dc0:	d006      	beq.n	8001dd0 <std+0x48>
 8001dc2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001dc6:	4294      	cmp	r4, r2
 8001dc8:	d002      	beq.n	8001dd0 <std+0x48>
 8001dca:	33d0      	adds	r3, #208	@ 0xd0
 8001dcc:	429c      	cmp	r4, r3
 8001dce:	d105      	bne.n	8001ddc <std+0x54>
 8001dd0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001dd8:	f000 b9ae 	b.w	8002138 <__retarget_lock_init_recursive>
 8001ddc:	bd10      	pop	{r4, pc}
 8001dde:	bf00      	nop
 8001de0:	080037ed 	.word	0x080037ed
 8001de4:	0800380f 	.word	0x0800380f
 8001de8:	08003847 	.word	0x08003847
 8001dec:	0800386b 	.word	0x0800386b
 8001df0:	2000034c 	.word	0x2000034c

08001df4 <stdio_exit_handler>:
 8001df4:	4a02      	ldr	r2, [pc, #8]	@ (8001e00 <stdio_exit_handler+0xc>)
 8001df6:	4903      	ldr	r1, [pc, #12]	@ (8001e04 <stdio_exit_handler+0x10>)
 8001df8:	4803      	ldr	r0, [pc, #12]	@ (8001e08 <stdio_exit_handler+0x14>)
 8001dfa:	f000 b8ed 	b.w	8001fd8 <_fwalk_sglue>
 8001dfe:	bf00      	nop
 8001e00:	2000002c 	.word	0x2000002c
 8001e04:	08003085 	.word	0x08003085
 8001e08:	2000003c 	.word	0x2000003c

08001e0c <cleanup_stdio>:
 8001e0c:	6841      	ldr	r1, [r0, #4]
 8001e0e:	4b0c      	ldr	r3, [pc, #48]	@ (8001e40 <cleanup_stdio+0x34>)
 8001e10:	4299      	cmp	r1, r3
 8001e12:	b510      	push	{r4, lr}
 8001e14:	4604      	mov	r4, r0
 8001e16:	d001      	beq.n	8001e1c <cleanup_stdio+0x10>
 8001e18:	f001 f934 	bl	8003084 <_fflush_r>
 8001e1c:	68a1      	ldr	r1, [r4, #8]
 8001e1e:	4b09      	ldr	r3, [pc, #36]	@ (8001e44 <cleanup_stdio+0x38>)
 8001e20:	4299      	cmp	r1, r3
 8001e22:	d002      	beq.n	8001e2a <cleanup_stdio+0x1e>
 8001e24:	4620      	mov	r0, r4
 8001e26:	f001 f92d 	bl	8003084 <_fflush_r>
 8001e2a:	68e1      	ldr	r1, [r4, #12]
 8001e2c:	4b06      	ldr	r3, [pc, #24]	@ (8001e48 <cleanup_stdio+0x3c>)
 8001e2e:	4299      	cmp	r1, r3
 8001e30:	d004      	beq.n	8001e3c <cleanup_stdio+0x30>
 8001e32:	4620      	mov	r0, r4
 8001e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e38:	f001 b924 	b.w	8003084 <_fflush_r>
 8001e3c:	bd10      	pop	{r4, pc}
 8001e3e:	bf00      	nop
 8001e40:	2000034c 	.word	0x2000034c
 8001e44:	200003b4 	.word	0x200003b4
 8001e48:	2000041c 	.word	0x2000041c

08001e4c <global_stdio_init.part.0>:
 8001e4c:	b510      	push	{r4, lr}
 8001e4e:	4b0b      	ldr	r3, [pc, #44]	@ (8001e7c <global_stdio_init.part.0+0x30>)
 8001e50:	4c0b      	ldr	r4, [pc, #44]	@ (8001e80 <global_stdio_init.part.0+0x34>)
 8001e52:	4a0c      	ldr	r2, [pc, #48]	@ (8001e84 <global_stdio_init.part.0+0x38>)
 8001e54:	601a      	str	r2, [r3, #0]
 8001e56:	4620      	mov	r0, r4
 8001e58:	2200      	movs	r2, #0
 8001e5a:	2104      	movs	r1, #4
 8001e5c:	f7ff ff94 	bl	8001d88 <std>
 8001e60:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8001e64:	2201      	movs	r2, #1
 8001e66:	2109      	movs	r1, #9
 8001e68:	f7ff ff8e 	bl	8001d88 <std>
 8001e6c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001e70:	2202      	movs	r2, #2
 8001e72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e76:	2112      	movs	r1, #18
 8001e78:	f7ff bf86 	b.w	8001d88 <std>
 8001e7c:	20000484 	.word	0x20000484
 8001e80:	2000034c 	.word	0x2000034c
 8001e84:	08001df5 	.word	0x08001df5

08001e88 <__sfp_lock_acquire>:
 8001e88:	4801      	ldr	r0, [pc, #4]	@ (8001e90 <__sfp_lock_acquire+0x8>)
 8001e8a:	f000 b956 	b.w	800213a <__retarget_lock_acquire_recursive>
 8001e8e:	bf00      	nop
 8001e90:	20000489 	.word	0x20000489

08001e94 <__sfp_lock_release>:
 8001e94:	4801      	ldr	r0, [pc, #4]	@ (8001e9c <__sfp_lock_release+0x8>)
 8001e96:	f000 b951 	b.w	800213c <__retarget_lock_release_recursive>
 8001e9a:	bf00      	nop
 8001e9c:	20000489 	.word	0x20000489

08001ea0 <__sinit>:
 8001ea0:	b510      	push	{r4, lr}
 8001ea2:	4604      	mov	r4, r0
 8001ea4:	f7ff fff0 	bl	8001e88 <__sfp_lock_acquire>
 8001ea8:	6a23      	ldr	r3, [r4, #32]
 8001eaa:	b11b      	cbz	r3, 8001eb4 <__sinit+0x14>
 8001eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001eb0:	f7ff bff0 	b.w	8001e94 <__sfp_lock_release>
 8001eb4:	4b04      	ldr	r3, [pc, #16]	@ (8001ec8 <__sinit+0x28>)
 8001eb6:	6223      	str	r3, [r4, #32]
 8001eb8:	4b04      	ldr	r3, [pc, #16]	@ (8001ecc <__sinit+0x2c>)
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d1f5      	bne.n	8001eac <__sinit+0xc>
 8001ec0:	f7ff ffc4 	bl	8001e4c <global_stdio_init.part.0>
 8001ec4:	e7f2      	b.n	8001eac <__sinit+0xc>
 8001ec6:	bf00      	nop
 8001ec8:	08001e0d 	.word	0x08001e0d
 8001ecc:	20000484 	.word	0x20000484

08001ed0 <_strtol_l.constprop.0>:
 8001ed0:	2b24      	cmp	r3, #36	@ 0x24
 8001ed2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ed6:	4686      	mov	lr, r0
 8001ed8:	4690      	mov	r8, r2
 8001eda:	d801      	bhi.n	8001ee0 <_strtol_l.constprop.0+0x10>
 8001edc:	2b01      	cmp	r3, #1
 8001ede:	d106      	bne.n	8001eee <_strtol_l.constprop.0+0x1e>
 8001ee0:	f000 f900 	bl	80020e4 <__errno>
 8001ee4:	2316      	movs	r3, #22
 8001ee6:	6003      	str	r3, [r0, #0]
 8001ee8:	2000      	movs	r0, #0
 8001eea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001eee:	4834      	ldr	r0, [pc, #208]	@ (8001fc0 <_strtol_l.constprop.0+0xf0>)
 8001ef0:	460d      	mov	r5, r1
 8001ef2:	462a      	mov	r2, r5
 8001ef4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001ef8:	5d06      	ldrb	r6, [r0, r4]
 8001efa:	f016 0608 	ands.w	r6, r6, #8
 8001efe:	d1f8      	bne.n	8001ef2 <_strtol_l.constprop.0+0x22>
 8001f00:	2c2d      	cmp	r4, #45	@ 0x2d
 8001f02:	d12d      	bne.n	8001f60 <_strtol_l.constprop.0+0x90>
 8001f04:	782c      	ldrb	r4, [r5, #0]
 8001f06:	2601      	movs	r6, #1
 8001f08:	1c95      	adds	r5, r2, #2
 8001f0a:	f033 0210 	bics.w	r2, r3, #16
 8001f0e:	d109      	bne.n	8001f24 <_strtol_l.constprop.0+0x54>
 8001f10:	2c30      	cmp	r4, #48	@ 0x30
 8001f12:	d12a      	bne.n	8001f6a <_strtol_l.constprop.0+0x9a>
 8001f14:	782a      	ldrb	r2, [r5, #0]
 8001f16:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8001f1a:	2a58      	cmp	r2, #88	@ 0x58
 8001f1c:	d125      	bne.n	8001f6a <_strtol_l.constprop.0+0x9a>
 8001f1e:	786c      	ldrb	r4, [r5, #1]
 8001f20:	2310      	movs	r3, #16
 8001f22:	3502      	adds	r5, #2
 8001f24:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8001f28:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	fbbc f9f3 	udiv	r9, ip, r3
 8001f32:	4610      	mov	r0, r2
 8001f34:	fb03 ca19 	mls	sl, r3, r9, ip
 8001f38:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8001f3c:	2f09      	cmp	r7, #9
 8001f3e:	d81b      	bhi.n	8001f78 <_strtol_l.constprop.0+0xa8>
 8001f40:	463c      	mov	r4, r7
 8001f42:	42a3      	cmp	r3, r4
 8001f44:	dd27      	ble.n	8001f96 <_strtol_l.constprop.0+0xc6>
 8001f46:	1c57      	adds	r7, r2, #1
 8001f48:	d007      	beq.n	8001f5a <_strtol_l.constprop.0+0x8a>
 8001f4a:	4581      	cmp	r9, r0
 8001f4c:	d320      	bcc.n	8001f90 <_strtol_l.constprop.0+0xc0>
 8001f4e:	d101      	bne.n	8001f54 <_strtol_l.constprop.0+0x84>
 8001f50:	45a2      	cmp	sl, r4
 8001f52:	db1d      	blt.n	8001f90 <_strtol_l.constprop.0+0xc0>
 8001f54:	fb00 4003 	mla	r0, r0, r3, r4
 8001f58:	2201      	movs	r2, #1
 8001f5a:	f815 4b01 	ldrb.w	r4, [r5], #1
 8001f5e:	e7eb      	b.n	8001f38 <_strtol_l.constprop.0+0x68>
 8001f60:	2c2b      	cmp	r4, #43	@ 0x2b
 8001f62:	bf04      	itt	eq
 8001f64:	782c      	ldrbeq	r4, [r5, #0]
 8001f66:	1c95      	addeq	r5, r2, #2
 8001f68:	e7cf      	b.n	8001f0a <_strtol_l.constprop.0+0x3a>
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d1da      	bne.n	8001f24 <_strtol_l.constprop.0+0x54>
 8001f6e:	2c30      	cmp	r4, #48	@ 0x30
 8001f70:	bf0c      	ite	eq
 8001f72:	2308      	moveq	r3, #8
 8001f74:	230a      	movne	r3, #10
 8001f76:	e7d5      	b.n	8001f24 <_strtol_l.constprop.0+0x54>
 8001f78:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8001f7c:	2f19      	cmp	r7, #25
 8001f7e:	d801      	bhi.n	8001f84 <_strtol_l.constprop.0+0xb4>
 8001f80:	3c37      	subs	r4, #55	@ 0x37
 8001f82:	e7de      	b.n	8001f42 <_strtol_l.constprop.0+0x72>
 8001f84:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8001f88:	2f19      	cmp	r7, #25
 8001f8a:	d804      	bhi.n	8001f96 <_strtol_l.constprop.0+0xc6>
 8001f8c:	3c57      	subs	r4, #87	@ 0x57
 8001f8e:	e7d8      	b.n	8001f42 <_strtol_l.constprop.0+0x72>
 8001f90:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001f94:	e7e1      	b.n	8001f5a <_strtol_l.constprop.0+0x8a>
 8001f96:	1c53      	adds	r3, r2, #1
 8001f98:	d108      	bne.n	8001fac <_strtol_l.constprop.0+0xdc>
 8001f9a:	2322      	movs	r3, #34	@ 0x22
 8001f9c:	f8ce 3000 	str.w	r3, [lr]
 8001fa0:	4660      	mov	r0, ip
 8001fa2:	f1b8 0f00 	cmp.w	r8, #0
 8001fa6:	d0a0      	beq.n	8001eea <_strtol_l.constprop.0+0x1a>
 8001fa8:	1e69      	subs	r1, r5, #1
 8001faa:	e006      	b.n	8001fba <_strtol_l.constprop.0+0xea>
 8001fac:	b106      	cbz	r6, 8001fb0 <_strtol_l.constprop.0+0xe0>
 8001fae:	4240      	negs	r0, r0
 8001fb0:	f1b8 0f00 	cmp.w	r8, #0
 8001fb4:	d099      	beq.n	8001eea <_strtol_l.constprop.0+0x1a>
 8001fb6:	2a00      	cmp	r2, #0
 8001fb8:	d1f6      	bne.n	8001fa8 <_strtol_l.constprop.0+0xd8>
 8001fba:	f8c8 1000 	str.w	r1, [r8]
 8001fbe:	e794      	b.n	8001eea <_strtol_l.constprop.0+0x1a>
 8001fc0:	080040a6 	.word	0x080040a6

08001fc4 <strtol>:
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	460a      	mov	r2, r1
 8001fc8:	4601      	mov	r1, r0
 8001fca:	4802      	ldr	r0, [pc, #8]	@ (8001fd4 <strtol+0x10>)
 8001fcc:	6800      	ldr	r0, [r0, #0]
 8001fce:	f7ff bf7f 	b.w	8001ed0 <_strtol_l.constprop.0>
 8001fd2:	bf00      	nop
 8001fd4:	20000038 	.word	0x20000038

08001fd8 <_fwalk_sglue>:
 8001fd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001fdc:	4607      	mov	r7, r0
 8001fde:	4688      	mov	r8, r1
 8001fe0:	4614      	mov	r4, r2
 8001fe2:	2600      	movs	r6, #0
 8001fe4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001fe8:	f1b9 0901 	subs.w	r9, r9, #1
 8001fec:	d505      	bpl.n	8001ffa <_fwalk_sglue+0x22>
 8001fee:	6824      	ldr	r4, [r4, #0]
 8001ff0:	2c00      	cmp	r4, #0
 8001ff2:	d1f7      	bne.n	8001fe4 <_fwalk_sglue+0xc>
 8001ff4:	4630      	mov	r0, r6
 8001ff6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001ffa:	89ab      	ldrh	r3, [r5, #12]
 8001ffc:	2b01      	cmp	r3, #1
 8001ffe:	d907      	bls.n	8002010 <_fwalk_sglue+0x38>
 8002000:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002004:	3301      	adds	r3, #1
 8002006:	d003      	beq.n	8002010 <_fwalk_sglue+0x38>
 8002008:	4629      	mov	r1, r5
 800200a:	4638      	mov	r0, r7
 800200c:	47c0      	blx	r8
 800200e:	4306      	orrs	r6, r0
 8002010:	3568      	adds	r5, #104	@ 0x68
 8002012:	e7e9      	b.n	8001fe8 <_fwalk_sglue+0x10>

08002014 <strtok>:
 8002014:	4b16      	ldr	r3, [pc, #88]	@ (8002070 <strtok+0x5c>)
 8002016:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800201a:	681f      	ldr	r7, [r3, #0]
 800201c:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 800201e:	4605      	mov	r5, r0
 8002020:	460e      	mov	r6, r1
 8002022:	b9ec      	cbnz	r4, 8002060 <strtok+0x4c>
 8002024:	2050      	movs	r0, #80	@ 0x50
 8002026:	f000 ff03 	bl	8002e30 <malloc>
 800202a:	4602      	mov	r2, r0
 800202c:	6478      	str	r0, [r7, #68]	@ 0x44
 800202e:	b920      	cbnz	r0, 800203a <strtok+0x26>
 8002030:	4b10      	ldr	r3, [pc, #64]	@ (8002074 <strtok+0x60>)
 8002032:	4811      	ldr	r0, [pc, #68]	@ (8002078 <strtok+0x64>)
 8002034:	215b      	movs	r1, #91	@ 0x5b
 8002036:	f000 f88b 	bl	8002150 <__assert_func>
 800203a:	e9c0 4400 	strd	r4, r4, [r0]
 800203e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8002042:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8002046:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 800204a:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 800204e:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 8002052:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 8002056:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 800205a:	6184      	str	r4, [r0, #24]
 800205c:	7704      	strb	r4, [r0, #28]
 800205e:	6244      	str	r4, [r0, #36]	@ 0x24
 8002060:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002062:	4631      	mov	r1, r6
 8002064:	4628      	mov	r0, r5
 8002066:	2301      	movs	r3, #1
 8002068:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800206c:	f000 b806 	b.w	800207c <__strtok_r>
 8002070:	20000038 	.word	0x20000038
 8002074:	08004034 	.word	0x08004034
 8002078:	0800404b 	.word	0x0800404b

0800207c <__strtok_r>:
 800207c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800207e:	4604      	mov	r4, r0
 8002080:	b908      	cbnz	r0, 8002086 <__strtok_r+0xa>
 8002082:	6814      	ldr	r4, [r2, #0]
 8002084:	b144      	cbz	r4, 8002098 <__strtok_r+0x1c>
 8002086:	4620      	mov	r0, r4
 8002088:	f814 5b01 	ldrb.w	r5, [r4], #1
 800208c:	460f      	mov	r7, r1
 800208e:	f817 6b01 	ldrb.w	r6, [r7], #1
 8002092:	b91e      	cbnz	r6, 800209c <__strtok_r+0x20>
 8002094:	b965      	cbnz	r5, 80020b0 <__strtok_r+0x34>
 8002096:	6015      	str	r5, [r2, #0]
 8002098:	2000      	movs	r0, #0
 800209a:	e005      	b.n	80020a8 <__strtok_r+0x2c>
 800209c:	42b5      	cmp	r5, r6
 800209e:	d1f6      	bne.n	800208e <__strtok_r+0x12>
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	d1f0      	bne.n	8002086 <__strtok_r+0xa>
 80020a4:	6014      	str	r4, [r2, #0]
 80020a6:	7003      	strb	r3, [r0, #0]
 80020a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020aa:	461c      	mov	r4, r3
 80020ac:	e00c      	b.n	80020c8 <__strtok_r+0x4c>
 80020ae:	b915      	cbnz	r5, 80020b6 <__strtok_r+0x3a>
 80020b0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80020b4:	460e      	mov	r6, r1
 80020b6:	f816 5b01 	ldrb.w	r5, [r6], #1
 80020ba:	42ab      	cmp	r3, r5
 80020bc:	d1f7      	bne.n	80020ae <__strtok_r+0x32>
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d0f3      	beq.n	80020aa <__strtok_r+0x2e>
 80020c2:	2300      	movs	r3, #0
 80020c4:	f804 3c01 	strb.w	r3, [r4, #-1]
 80020c8:	6014      	str	r4, [r2, #0]
 80020ca:	e7ed      	b.n	80020a8 <__strtok_r+0x2c>

080020cc <memset>:
 80020cc:	4402      	add	r2, r0
 80020ce:	4603      	mov	r3, r0
 80020d0:	4293      	cmp	r3, r2
 80020d2:	d100      	bne.n	80020d6 <memset+0xa>
 80020d4:	4770      	bx	lr
 80020d6:	f803 1b01 	strb.w	r1, [r3], #1
 80020da:	e7f9      	b.n	80020d0 <memset+0x4>

080020dc <_localeconv_r>:
 80020dc:	4800      	ldr	r0, [pc, #0]	@ (80020e0 <_localeconv_r+0x4>)
 80020de:	4770      	bx	lr
 80020e0:	20000178 	.word	0x20000178

080020e4 <__errno>:
 80020e4:	4b01      	ldr	r3, [pc, #4]	@ (80020ec <__errno+0x8>)
 80020e6:	6818      	ldr	r0, [r3, #0]
 80020e8:	4770      	bx	lr
 80020ea:	bf00      	nop
 80020ec:	20000038 	.word	0x20000038

080020f0 <__libc_init_array>:
 80020f0:	b570      	push	{r4, r5, r6, lr}
 80020f2:	4d0d      	ldr	r5, [pc, #52]	@ (8002128 <__libc_init_array+0x38>)
 80020f4:	4c0d      	ldr	r4, [pc, #52]	@ (800212c <__libc_init_array+0x3c>)
 80020f6:	1b64      	subs	r4, r4, r5
 80020f8:	10a4      	asrs	r4, r4, #2
 80020fa:	2600      	movs	r6, #0
 80020fc:	42a6      	cmp	r6, r4
 80020fe:	d109      	bne.n	8002114 <__libc_init_array+0x24>
 8002100:	4d0b      	ldr	r5, [pc, #44]	@ (8002130 <__libc_init_array+0x40>)
 8002102:	4c0c      	ldr	r4, [pc, #48]	@ (8002134 <__libc_init_array+0x44>)
 8002104:	f001 ff4e 	bl	8003fa4 <_init>
 8002108:	1b64      	subs	r4, r4, r5
 800210a:	10a4      	asrs	r4, r4, #2
 800210c:	2600      	movs	r6, #0
 800210e:	42a6      	cmp	r6, r4
 8002110:	d105      	bne.n	800211e <__libc_init_array+0x2e>
 8002112:	bd70      	pop	{r4, r5, r6, pc}
 8002114:	f855 3b04 	ldr.w	r3, [r5], #4
 8002118:	4798      	blx	r3
 800211a:	3601      	adds	r6, #1
 800211c:	e7ee      	b.n	80020fc <__libc_init_array+0xc>
 800211e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002122:	4798      	blx	r3
 8002124:	3601      	adds	r6, #1
 8002126:	e7f2      	b.n	800210e <__libc_init_array+0x1e>
 8002128:	080043d4 	.word	0x080043d4
 800212c:	080043d4 	.word	0x080043d4
 8002130:	080043d4 	.word	0x080043d4
 8002134:	080043d8 	.word	0x080043d8

08002138 <__retarget_lock_init_recursive>:
 8002138:	4770      	bx	lr

0800213a <__retarget_lock_acquire_recursive>:
 800213a:	4770      	bx	lr

0800213c <__retarget_lock_release_recursive>:
 800213c:	4770      	bx	lr

0800213e <strcpy>:
 800213e:	4603      	mov	r3, r0
 8002140:	f811 2b01 	ldrb.w	r2, [r1], #1
 8002144:	f803 2b01 	strb.w	r2, [r3], #1
 8002148:	2a00      	cmp	r2, #0
 800214a:	d1f9      	bne.n	8002140 <strcpy+0x2>
 800214c:	4770      	bx	lr
	...

08002150 <__assert_func>:
 8002150:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002152:	4614      	mov	r4, r2
 8002154:	461a      	mov	r2, r3
 8002156:	4b09      	ldr	r3, [pc, #36]	@ (800217c <__assert_func+0x2c>)
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	4605      	mov	r5, r0
 800215c:	68d8      	ldr	r0, [r3, #12]
 800215e:	b954      	cbnz	r4, 8002176 <__assert_func+0x26>
 8002160:	4b07      	ldr	r3, [pc, #28]	@ (8002180 <__assert_func+0x30>)
 8002162:	461c      	mov	r4, r3
 8002164:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002168:	9100      	str	r1, [sp, #0]
 800216a:	462b      	mov	r3, r5
 800216c:	4905      	ldr	r1, [pc, #20]	@ (8002184 <__assert_func+0x34>)
 800216e:	f001 fb81 	bl	8003874 <fiprintf>
 8002172:	f001 fbf5 	bl	8003960 <abort>
 8002176:	4b04      	ldr	r3, [pc, #16]	@ (8002188 <__assert_func+0x38>)
 8002178:	e7f4      	b.n	8002164 <__assert_func+0x14>
 800217a:	bf00      	nop
 800217c:	20000038 	.word	0x20000038
 8002180:	080041e1 	.word	0x080041e1
 8002184:	080041b3 	.word	0x080041b3
 8002188:	080041a6 	.word	0x080041a6

0800218c <quorem>:
 800218c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002190:	6903      	ldr	r3, [r0, #16]
 8002192:	690c      	ldr	r4, [r1, #16]
 8002194:	42a3      	cmp	r3, r4
 8002196:	4607      	mov	r7, r0
 8002198:	db7e      	blt.n	8002298 <quorem+0x10c>
 800219a:	3c01      	subs	r4, #1
 800219c:	f101 0814 	add.w	r8, r1, #20
 80021a0:	00a3      	lsls	r3, r4, #2
 80021a2:	f100 0514 	add.w	r5, r0, #20
 80021a6:	9300      	str	r3, [sp, #0]
 80021a8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80021ac:	9301      	str	r3, [sp, #4]
 80021ae:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80021b2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021b6:	3301      	adds	r3, #1
 80021b8:	429a      	cmp	r2, r3
 80021ba:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80021be:	fbb2 f6f3 	udiv	r6, r2, r3
 80021c2:	d32e      	bcc.n	8002222 <quorem+0x96>
 80021c4:	f04f 0a00 	mov.w	sl, #0
 80021c8:	46c4      	mov	ip, r8
 80021ca:	46ae      	mov	lr, r5
 80021cc:	46d3      	mov	fp, sl
 80021ce:	f85c 3b04 	ldr.w	r3, [ip], #4
 80021d2:	b298      	uxth	r0, r3
 80021d4:	fb06 a000 	mla	r0, r6, r0, sl
 80021d8:	0c02      	lsrs	r2, r0, #16
 80021da:	0c1b      	lsrs	r3, r3, #16
 80021dc:	fb06 2303 	mla	r3, r6, r3, r2
 80021e0:	f8de 2000 	ldr.w	r2, [lr]
 80021e4:	b280      	uxth	r0, r0
 80021e6:	b292      	uxth	r2, r2
 80021e8:	1a12      	subs	r2, r2, r0
 80021ea:	445a      	add	r2, fp
 80021ec:	f8de 0000 	ldr.w	r0, [lr]
 80021f0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80021f4:	b29b      	uxth	r3, r3
 80021f6:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80021fa:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80021fe:	b292      	uxth	r2, r2
 8002200:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002204:	45e1      	cmp	r9, ip
 8002206:	f84e 2b04 	str.w	r2, [lr], #4
 800220a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800220e:	d2de      	bcs.n	80021ce <quorem+0x42>
 8002210:	9b00      	ldr	r3, [sp, #0]
 8002212:	58eb      	ldr	r3, [r5, r3]
 8002214:	b92b      	cbnz	r3, 8002222 <quorem+0x96>
 8002216:	9b01      	ldr	r3, [sp, #4]
 8002218:	3b04      	subs	r3, #4
 800221a:	429d      	cmp	r5, r3
 800221c:	461a      	mov	r2, r3
 800221e:	d32f      	bcc.n	8002280 <quorem+0xf4>
 8002220:	613c      	str	r4, [r7, #16]
 8002222:	4638      	mov	r0, r7
 8002224:	f001 f9dc 	bl	80035e0 <__mcmp>
 8002228:	2800      	cmp	r0, #0
 800222a:	db25      	blt.n	8002278 <quorem+0xec>
 800222c:	4629      	mov	r1, r5
 800222e:	2000      	movs	r0, #0
 8002230:	f858 2b04 	ldr.w	r2, [r8], #4
 8002234:	f8d1 c000 	ldr.w	ip, [r1]
 8002238:	fa1f fe82 	uxth.w	lr, r2
 800223c:	fa1f f38c 	uxth.w	r3, ip
 8002240:	eba3 030e 	sub.w	r3, r3, lr
 8002244:	4403      	add	r3, r0
 8002246:	0c12      	lsrs	r2, r2, #16
 8002248:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800224c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002250:	b29b      	uxth	r3, r3
 8002252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002256:	45c1      	cmp	r9, r8
 8002258:	f841 3b04 	str.w	r3, [r1], #4
 800225c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002260:	d2e6      	bcs.n	8002230 <quorem+0xa4>
 8002262:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002266:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800226a:	b922      	cbnz	r2, 8002276 <quorem+0xea>
 800226c:	3b04      	subs	r3, #4
 800226e:	429d      	cmp	r5, r3
 8002270:	461a      	mov	r2, r3
 8002272:	d30b      	bcc.n	800228c <quorem+0x100>
 8002274:	613c      	str	r4, [r7, #16]
 8002276:	3601      	adds	r6, #1
 8002278:	4630      	mov	r0, r6
 800227a:	b003      	add	sp, #12
 800227c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002280:	6812      	ldr	r2, [r2, #0]
 8002282:	3b04      	subs	r3, #4
 8002284:	2a00      	cmp	r2, #0
 8002286:	d1cb      	bne.n	8002220 <quorem+0x94>
 8002288:	3c01      	subs	r4, #1
 800228a:	e7c6      	b.n	800221a <quorem+0x8e>
 800228c:	6812      	ldr	r2, [r2, #0]
 800228e:	3b04      	subs	r3, #4
 8002290:	2a00      	cmp	r2, #0
 8002292:	d1ef      	bne.n	8002274 <quorem+0xe8>
 8002294:	3c01      	subs	r4, #1
 8002296:	e7ea      	b.n	800226e <quorem+0xe2>
 8002298:	2000      	movs	r0, #0
 800229a:	e7ee      	b.n	800227a <quorem+0xee>
 800229c:	0000      	movs	r0, r0
	...

080022a0 <_dtoa_r>:
 80022a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022a4:	69c7      	ldr	r7, [r0, #28]
 80022a6:	b097      	sub	sp, #92	@ 0x5c
 80022a8:	4614      	mov	r4, r2
 80022aa:	461d      	mov	r5, r3
 80022ac:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80022b0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80022b2:	4683      	mov	fp, r0
 80022b4:	b97f      	cbnz	r7, 80022d6 <_dtoa_r+0x36>
 80022b6:	2010      	movs	r0, #16
 80022b8:	f000 fdba 	bl	8002e30 <malloc>
 80022bc:	4602      	mov	r2, r0
 80022be:	f8cb 001c 	str.w	r0, [fp, #28]
 80022c2:	b920      	cbnz	r0, 80022ce <_dtoa_r+0x2e>
 80022c4:	4ba8      	ldr	r3, [pc, #672]	@ (8002568 <_dtoa_r+0x2c8>)
 80022c6:	21ef      	movs	r1, #239	@ 0xef
 80022c8:	48a8      	ldr	r0, [pc, #672]	@ (800256c <_dtoa_r+0x2cc>)
 80022ca:	f7ff ff41 	bl	8002150 <__assert_func>
 80022ce:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80022d2:	6007      	str	r7, [r0, #0]
 80022d4:	60c7      	str	r7, [r0, #12]
 80022d6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80022da:	6819      	ldr	r1, [r3, #0]
 80022dc:	b159      	cbz	r1, 80022f6 <_dtoa_r+0x56>
 80022de:	685a      	ldr	r2, [r3, #4]
 80022e0:	604a      	str	r2, [r1, #4]
 80022e2:	2301      	movs	r3, #1
 80022e4:	4093      	lsls	r3, r2
 80022e6:	608b      	str	r3, [r1, #8]
 80022e8:	4658      	mov	r0, fp
 80022ea:	f000 ff3f 	bl	800316c <_Bfree>
 80022ee:	f8db 301c 	ldr.w	r3, [fp, #28]
 80022f2:	2200      	movs	r2, #0
 80022f4:	601a      	str	r2, [r3, #0]
 80022f6:	1e2b      	subs	r3, r5, #0
 80022f8:	bfb9      	ittee	lt
 80022fa:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80022fe:	9303      	strlt	r3, [sp, #12]
 8002300:	2300      	movge	r3, #0
 8002302:	6033      	strge	r3, [r6, #0]
 8002304:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002308:	4b99      	ldr	r3, [pc, #612]	@ (8002570 <_dtoa_r+0x2d0>)
 800230a:	bfbc      	itt	lt
 800230c:	2201      	movlt	r2, #1
 800230e:	6032      	strlt	r2, [r6, #0]
 8002310:	ea33 0308 	bics.w	r3, r3, r8
 8002314:	d112      	bne.n	800233c <_dtoa_r+0x9c>
 8002316:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002318:	f242 730f 	movw	r3, #9999	@ 0x270f
 800231c:	6013      	str	r3, [r2, #0]
 800231e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002322:	4323      	orrs	r3, r4
 8002324:	f000 8551 	beq.w	8002dca <_dtoa_r+0xb2a>
 8002328:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800232a:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8002574 <_dtoa_r+0x2d4>
 800232e:	2b00      	cmp	r3, #0
 8002330:	f000 8553 	beq.w	8002dda <_dtoa_r+0xb3a>
 8002334:	f10a 0303 	add.w	r3, sl, #3
 8002338:	f000 bd4d 	b.w	8002dd6 <_dtoa_r+0xb36>
 800233c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002340:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002344:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002348:	2200      	movs	r2, #0
 800234a:	2300      	movs	r3, #0
 800234c:	f7fe fbce 	bl	8000aec <__aeabi_dcmpeq>
 8002350:	4607      	mov	r7, r0
 8002352:	b158      	cbz	r0, 800236c <_dtoa_r+0xcc>
 8002354:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002356:	2301      	movs	r3, #1
 8002358:	6013      	str	r3, [r2, #0]
 800235a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800235c:	b113      	cbz	r3, 8002364 <_dtoa_r+0xc4>
 800235e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002360:	4b85      	ldr	r3, [pc, #532]	@ (8002578 <_dtoa_r+0x2d8>)
 8002362:	6013      	str	r3, [r2, #0]
 8002364:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800257c <_dtoa_r+0x2dc>
 8002368:	f000 bd37 	b.w	8002dda <_dtoa_r+0xb3a>
 800236c:	ab14      	add	r3, sp, #80	@ 0x50
 800236e:	9301      	str	r3, [sp, #4]
 8002370:	ab15      	add	r3, sp, #84	@ 0x54
 8002372:	9300      	str	r3, [sp, #0]
 8002374:	4658      	mov	r0, fp
 8002376:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800237a:	f001 f9df 	bl	800373c <__d2b>
 800237e:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8002382:	4681      	mov	r9, r0
 8002384:	2e00      	cmp	r6, #0
 8002386:	d076      	beq.n	8002476 <_dtoa_r+0x1d6>
 8002388:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800238a:	9712      	str	r7, [sp, #72]	@ 0x48
 800238c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002390:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002394:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002398:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800239c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80023a0:	4619      	mov	r1, r3
 80023a2:	2200      	movs	r2, #0
 80023a4:	4b76      	ldr	r3, [pc, #472]	@ (8002580 <_dtoa_r+0x2e0>)
 80023a6:	f7fd ff81 	bl	80002ac <__aeabi_dsub>
 80023aa:	a369      	add	r3, pc, #420	@ (adr r3, 8002550 <_dtoa_r+0x2b0>)
 80023ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023b0:	f7fe f934 	bl	800061c <__aeabi_dmul>
 80023b4:	a368      	add	r3, pc, #416	@ (adr r3, 8002558 <_dtoa_r+0x2b8>)
 80023b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023ba:	f7fd ff79 	bl	80002b0 <__adddf3>
 80023be:	4604      	mov	r4, r0
 80023c0:	4630      	mov	r0, r6
 80023c2:	460d      	mov	r5, r1
 80023c4:	f7fe f8c0 	bl	8000548 <__aeabi_i2d>
 80023c8:	a365      	add	r3, pc, #404	@ (adr r3, 8002560 <_dtoa_r+0x2c0>)
 80023ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023ce:	f7fe f925 	bl	800061c <__aeabi_dmul>
 80023d2:	4602      	mov	r2, r0
 80023d4:	460b      	mov	r3, r1
 80023d6:	4620      	mov	r0, r4
 80023d8:	4629      	mov	r1, r5
 80023da:	f7fd ff69 	bl	80002b0 <__adddf3>
 80023de:	4604      	mov	r4, r0
 80023e0:	460d      	mov	r5, r1
 80023e2:	f7fe fbcb 	bl	8000b7c <__aeabi_d2iz>
 80023e6:	2200      	movs	r2, #0
 80023e8:	4607      	mov	r7, r0
 80023ea:	2300      	movs	r3, #0
 80023ec:	4620      	mov	r0, r4
 80023ee:	4629      	mov	r1, r5
 80023f0:	f7fe fb86 	bl	8000b00 <__aeabi_dcmplt>
 80023f4:	b140      	cbz	r0, 8002408 <_dtoa_r+0x168>
 80023f6:	4638      	mov	r0, r7
 80023f8:	f7fe f8a6 	bl	8000548 <__aeabi_i2d>
 80023fc:	4622      	mov	r2, r4
 80023fe:	462b      	mov	r3, r5
 8002400:	f7fe fb74 	bl	8000aec <__aeabi_dcmpeq>
 8002404:	b900      	cbnz	r0, 8002408 <_dtoa_r+0x168>
 8002406:	3f01      	subs	r7, #1
 8002408:	2f16      	cmp	r7, #22
 800240a:	d852      	bhi.n	80024b2 <_dtoa_r+0x212>
 800240c:	4b5d      	ldr	r3, [pc, #372]	@ (8002584 <_dtoa_r+0x2e4>)
 800240e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002412:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002416:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800241a:	f7fe fb71 	bl	8000b00 <__aeabi_dcmplt>
 800241e:	2800      	cmp	r0, #0
 8002420:	d049      	beq.n	80024b6 <_dtoa_r+0x216>
 8002422:	3f01      	subs	r7, #1
 8002424:	2300      	movs	r3, #0
 8002426:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002428:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800242a:	1b9b      	subs	r3, r3, r6
 800242c:	1e5a      	subs	r2, r3, #1
 800242e:	bf44      	itt	mi
 8002430:	f1c3 0801 	rsbmi	r8, r3, #1
 8002434:	2300      	movmi	r3, #0
 8002436:	9209      	str	r2, [sp, #36]	@ 0x24
 8002438:	bf54      	ite	pl
 800243a:	f04f 0800 	movpl.w	r8, #0
 800243e:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002440:	2f00      	cmp	r7, #0
 8002442:	db3a      	blt.n	80024ba <_dtoa_r+0x21a>
 8002444:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002446:	970e      	str	r7, [sp, #56]	@ 0x38
 8002448:	443b      	add	r3, r7
 800244a:	9309      	str	r3, [sp, #36]	@ 0x24
 800244c:	2300      	movs	r3, #0
 800244e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002450:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002452:	2b09      	cmp	r3, #9
 8002454:	d865      	bhi.n	8002522 <_dtoa_r+0x282>
 8002456:	2b05      	cmp	r3, #5
 8002458:	bfc4      	itt	gt
 800245a:	3b04      	subgt	r3, #4
 800245c:	9320      	strgt	r3, [sp, #128]	@ 0x80
 800245e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002460:	f1a3 0302 	sub.w	r3, r3, #2
 8002464:	bfcc      	ite	gt
 8002466:	2400      	movgt	r4, #0
 8002468:	2401      	movle	r4, #1
 800246a:	2b03      	cmp	r3, #3
 800246c:	d864      	bhi.n	8002538 <_dtoa_r+0x298>
 800246e:	e8df f003 	tbb	[pc, r3]
 8002472:	382b      	.short	0x382b
 8002474:	5636      	.short	0x5636
 8002476:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800247a:	441e      	add	r6, r3
 800247c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002480:	2b20      	cmp	r3, #32
 8002482:	bfc1      	itttt	gt
 8002484:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002488:	fa08 f803 	lslgt.w	r8, r8, r3
 800248c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002490:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002494:	bfd6      	itet	le
 8002496:	f1c3 0320 	rsble	r3, r3, #32
 800249a:	ea48 0003 	orrgt.w	r0, r8, r3
 800249e:	fa04 f003 	lslle.w	r0, r4, r3
 80024a2:	f7fe f841 	bl	8000528 <__aeabi_ui2d>
 80024a6:	2201      	movs	r2, #1
 80024a8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80024ac:	3e01      	subs	r6, #1
 80024ae:	9212      	str	r2, [sp, #72]	@ 0x48
 80024b0:	e776      	b.n	80023a0 <_dtoa_r+0x100>
 80024b2:	2301      	movs	r3, #1
 80024b4:	e7b7      	b.n	8002426 <_dtoa_r+0x186>
 80024b6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80024b8:	e7b6      	b.n	8002428 <_dtoa_r+0x188>
 80024ba:	427b      	negs	r3, r7
 80024bc:	930a      	str	r3, [sp, #40]	@ 0x28
 80024be:	2300      	movs	r3, #0
 80024c0:	eba8 0807 	sub.w	r8, r8, r7
 80024c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80024c6:	e7c3      	b.n	8002450 <_dtoa_r+0x1b0>
 80024c8:	2300      	movs	r3, #0
 80024ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80024cc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	dc35      	bgt.n	800253e <_dtoa_r+0x29e>
 80024d2:	2301      	movs	r3, #1
 80024d4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80024d8:	461a      	mov	r2, r3
 80024da:	9221      	str	r2, [sp, #132]	@ 0x84
 80024dc:	e00b      	b.n	80024f6 <_dtoa_r+0x256>
 80024de:	2301      	movs	r3, #1
 80024e0:	e7f3      	b.n	80024ca <_dtoa_r+0x22a>
 80024e2:	2300      	movs	r3, #0
 80024e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80024e6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80024e8:	18fb      	adds	r3, r7, r3
 80024ea:	9308      	str	r3, [sp, #32]
 80024ec:	3301      	adds	r3, #1
 80024ee:	2b01      	cmp	r3, #1
 80024f0:	9307      	str	r3, [sp, #28]
 80024f2:	bfb8      	it	lt
 80024f4:	2301      	movlt	r3, #1
 80024f6:	f8db 001c 	ldr.w	r0, [fp, #28]
 80024fa:	2100      	movs	r1, #0
 80024fc:	2204      	movs	r2, #4
 80024fe:	f102 0514 	add.w	r5, r2, #20
 8002502:	429d      	cmp	r5, r3
 8002504:	d91f      	bls.n	8002546 <_dtoa_r+0x2a6>
 8002506:	6041      	str	r1, [r0, #4]
 8002508:	4658      	mov	r0, fp
 800250a:	f000 fdef 	bl	80030ec <_Balloc>
 800250e:	4682      	mov	sl, r0
 8002510:	2800      	cmp	r0, #0
 8002512:	d13b      	bne.n	800258c <_dtoa_r+0x2ec>
 8002514:	4b1c      	ldr	r3, [pc, #112]	@ (8002588 <_dtoa_r+0x2e8>)
 8002516:	4602      	mov	r2, r0
 8002518:	f240 11af 	movw	r1, #431	@ 0x1af
 800251c:	e6d4      	b.n	80022c8 <_dtoa_r+0x28>
 800251e:	2301      	movs	r3, #1
 8002520:	e7e0      	b.n	80024e4 <_dtoa_r+0x244>
 8002522:	2401      	movs	r4, #1
 8002524:	2300      	movs	r3, #0
 8002526:	9320      	str	r3, [sp, #128]	@ 0x80
 8002528:	940b      	str	r4, [sp, #44]	@ 0x2c
 800252a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800252e:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002532:	2200      	movs	r2, #0
 8002534:	2312      	movs	r3, #18
 8002536:	e7d0      	b.n	80024da <_dtoa_r+0x23a>
 8002538:	2301      	movs	r3, #1
 800253a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800253c:	e7f5      	b.n	800252a <_dtoa_r+0x28a>
 800253e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002540:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002544:	e7d7      	b.n	80024f6 <_dtoa_r+0x256>
 8002546:	3101      	adds	r1, #1
 8002548:	0052      	lsls	r2, r2, #1
 800254a:	e7d8      	b.n	80024fe <_dtoa_r+0x25e>
 800254c:	f3af 8000 	nop.w
 8002550:	636f4361 	.word	0x636f4361
 8002554:	3fd287a7 	.word	0x3fd287a7
 8002558:	8b60c8b3 	.word	0x8b60c8b3
 800255c:	3fc68a28 	.word	0x3fc68a28
 8002560:	509f79fb 	.word	0x509f79fb
 8002564:	3fd34413 	.word	0x3fd34413
 8002568:	08004034 	.word	0x08004034
 800256c:	080041ef 	.word	0x080041ef
 8002570:	7ff00000 	.word	0x7ff00000
 8002574:	080041eb 	.word	0x080041eb
 8002578:	08004011 	.word	0x08004011
 800257c:	08004010 	.word	0x08004010
 8002580:	3ff80000 	.word	0x3ff80000
 8002584:	080042e8 	.word	0x080042e8
 8002588:	08004247 	.word	0x08004247
 800258c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002590:	6018      	str	r0, [r3, #0]
 8002592:	9b07      	ldr	r3, [sp, #28]
 8002594:	2b0e      	cmp	r3, #14
 8002596:	f200 80a4 	bhi.w	80026e2 <_dtoa_r+0x442>
 800259a:	2c00      	cmp	r4, #0
 800259c:	f000 80a1 	beq.w	80026e2 <_dtoa_r+0x442>
 80025a0:	2f00      	cmp	r7, #0
 80025a2:	dd33      	ble.n	800260c <_dtoa_r+0x36c>
 80025a4:	4b86      	ldr	r3, [pc, #536]	@ (80027c0 <_dtoa_r+0x520>)
 80025a6:	f007 020f 	and.w	r2, r7, #15
 80025aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025ae:	e9d3 3400 	ldrd	r3, r4, [r3]
 80025b2:	05f8      	lsls	r0, r7, #23
 80025b4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80025b8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80025bc:	d516      	bpl.n	80025ec <_dtoa_r+0x34c>
 80025be:	4b81      	ldr	r3, [pc, #516]	@ (80027c4 <_dtoa_r+0x524>)
 80025c0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80025c4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80025c8:	f7fe f952 	bl	8000870 <__aeabi_ddiv>
 80025cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025d0:	f004 040f 	and.w	r4, r4, #15
 80025d4:	2603      	movs	r6, #3
 80025d6:	4d7b      	ldr	r5, [pc, #492]	@ (80027c4 <_dtoa_r+0x524>)
 80025d8:	b954      	cbnz	r4, 80025f0 <_dtoa_r+0x350>
 80025da:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80025de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80025e2:	f7fe f945 	bl	8000870 <__aeabi_ddiv>
 80025e6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025ea:	e028      	b.n	800263e <_dtoa_r+0x39e>
 80025ec:	2602      	movs	r6, #2
 80025ee:	e7f2      	b.n	80025d6 <_dtoa_r+0x336>
 80025f0:	07e1      	lsls	r1, r4, #31
 80025f2:	d508      	bpl.n	8002606 <_dtoa_r+0x366>
 80025f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025f8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80025fc:	f7fe f80e 	bl	800061c <__aeabi_dmul>
 8002600:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002604:	3601      	adds	r6, #1
 8002606:	1064      	asrs	r4, r4, #1
 8002608:	3508      	adds	r5, #8
 800260a:	e7e5      	b.n	80025d8 <_dtoa_r+0x338>
 800260c:	f000 80d2 	beq.w	80027b4 <_dtoa_r+0x514>
 8002610:	427c      	negs	r4, r7
 8002612:	4b6b      	ldr	r3, [pc, #428]	@ (80027c0 <_dtoa_r+0x520>)
 8002614:	4d6b      	ldr	r5, [pc, #428]	@ (80027c4 <_dtoa_r+0x524>)
 8002616:	f004 020f 	and.w	r2, r4, #15
 800261a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800261e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002622:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002626:	f7fd fff9 	bl	800061c <__aeabi_dmul>
 800262a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800262e:	1124      	asrs	r4, r4, #4
 8002630:	2300      	movs	r3, #0
 8002632:	2602      	movs	r6, #2
 8002634:	2c00      	cmp	r4, #0
 8002636:	f040 80b2 	bne.w	800279e <_dtoa_r+0x4fe>
 800263a:	2b00      	cmp	r3, #0
 800263c:	d1d3      	bne.n	80025e6 <_dtoa_r+0x346>
 800263e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002640:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002644:	2b00      	cmp	r3, #0
 8002646:	f000 80b7 	beq.w	80027b8 <_dtoa_r+0x518>
 800264a:	4b5f      	ldr	r3, [pc, #380]	@ (80027c8 <_dtoa_r+0x528>)
 800264c:	2200      	movs	r2, #0
 800264e:	4620      	mov	r0, r4
 8002650:	4629      	mov	r1, r5
 8002652:	f7fe fa55 	bl	8000b00 <__aeabi_dcmplt>
 8002656:	2800      	cmp	r0, #0
 8002658:	f000 80ae 	beq.w	80027b8 <_dtoa_r+0x518>
 800265c:	9b07      	ldr	r3, [sp, #28]
 800265e:	2b00      	cmp	r3, #0
 8002660:	f000 80aa 	beq.w	80027b8 <_dtoa_r+0x518>
 8002664:	9b08      	ldr	r3, [sp, #32]
 8002666:	2b00      	cmp	r3, #0
 8002668:	dd37      	ble.n	80026da <_dtoa_r+0x43a>
 800266a:	1e7b      	subs	r3, r7, #1
 800266c:	9304      	str	r3, [sp, #16]
 800266e:	4620      	mov	r0, r4
 8002670:	4b56      	ldr	r3, [pc, #344]	@ (80027cc <_dtoa_r+0x52c>)
 8002672:	2200      	movs	r2, #0
 8002674:	4629      	mov	r1, r5
 8002676:	f7fd ffd1 	bl	800061c <__aeabi_dmul>
 800267a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800267e:	9c08      	ldr	r4, [sp, #32]
 8002680:	3601      	adds	r6, #1
 8002682:	4630      	mov	r0, r6
 8002684:	f7fd ff60 	bl	8000548 <__aeabi_i2d>
 8002688:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800268c:	f7fd ffc6 	bl	800061c <__aeabi_dmul>
 8002690:	4b4f      	ldr	r3, [pc, #316]	@ (80027d0 <_dtoa_r+0x530>)
 8002692:	2200      	movs	r2, #0
 8002694:	f7fd fe0c 	bl	80002b0 <__adddf3>
 8002698:	4605      	mov	r5, r0
 800269a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800269e:	2c00      	cmp	r4, #0
 80026a0:	f040 809a 	bne.w	80027d8 <_dtoa_r+0x538>
 80026a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80026a8:	4b4a      	ldr	r3, [pc, #296]	@ (80027d4 <_dtoa_r+0x534>)
 80026aa:	2200      	movs	r2, #0
 80026ac:	f7fd fdfe 	bl	80002ac <__aeabi_dsub>
 80026b0:	4602      	mov	r2, r0
 80026b2:	460b      	mov	r3, r1
 80026b4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80026b8:	462a      	mov	r2, r5
 80026ba:	4633      	mov	r3, r6
 80026bc:	f7fe fa3e 	bl	8000b3c <__aeabi_dcmpgt>
 80026c0:	2800      	cmp	r0, #0
 80026c2:	f040 828e 	bne.w	8002be2 <_dtoa_r+0x942>
 80026c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80026ca:	462a      	mov	r2, r5
 80026cc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80026d0:	f7fe fa16 	bl	8000b00 <__aeabi_dcmplt>
 80026d4:	2800      	cmp	r0, #0
 80026d6:	f040 8127 	bne.w	8002928 <_dtoa_r+0x688>
 80026da:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80026de:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80026e2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	f2c0 8163 	blt.w	80029b0 <_dtoa_r+0x710>
 80026ea:	2f0e      	cmp	r7, #14
 80026ec:	f300 8160 	bgt.w	80029b0 <_dtoa_r+0x710>
 80026f0:	4b33      	ldr	r3, [pc, #204]	@ (80027c0 <_dtoa_r+0x520>)
 80026f2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80026f6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80026fa:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80026fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002700:	2b00      	cmp	r3, #0
 8002702:	da03      	bge.n	800270c <_dtoa_r+0x46c>
 8002704:	9b07      	ldr	r3, [sp, #28]
 8002706:	2b00      	cmp	r3, #0
 8002708:	f340 8100 	ble.w	800290c <_dtoa_r+0x66c>
 800270c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002710:	4656      	mov	r6, sl
 8002712:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002716:	4620      	mov	r0, r4
 8002718:	4629      	mov	r1, r5
 800271a:	f7fe f8a9 	bl	8000870 <__aeabi_ddiv>
 800271e:	f7fe fa2d 	bl	8000b7c <__aeabi_d2iz>
 8002722:	4680      	mov	r8, r0
 8002724:	f7fd ff10 	bl	8000548 <__aeabi_i2d>
 8002728:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800272c:	f7fd ff76 	bl	800061c <__aeabi_dmul>
 8002730:	4602      	mov	r2, r0
 8002732:	460b      	mov	r3, r1
 8002734:	4620      	mov	r0, r4
 8002736:	4629      	mov	r1, r5
 8002738:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800273c:	f7fd fdb6 	bl	80002ac <__aeabi_dsub>
 8002740:	f806 4b01 	strb.w	r4, [r6], #1
 8002744:	9d07      	ldr	r5, [sp, #28]
 8002746:	eba6 040a 	sub.w	r4, r6, sl
 800274a:	42a5      	cmp	r5, r4
 800274c:	4602      	mov	r2, r0
 800274e:	460b      	mov	r3, r1
 8002750:	f040 8116 	bne.w	8002980 <_dtoa_r+0x6e0>
 8002754:	f7fd fdac 	bl	80002b0 <__adddf3>
 8002758:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800275c:	4604      	mov	r4, r0
 800275e:	460d      	mov	r5, r1
 8002760:	f7fe f9ec 	bl	8000b3c <__aeabi_dcmpgt>
 8002764:	2800      	cmp	r0, #0
 8002766:	f040 80f8 	bne.w	800295a <_dtoa_r+0x6ba>
 800276a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800276e:	4620      	mov	r0, r4
 8002770:	4629      	mov	r1, r5
 8002772:	f7fe f9bb 	bl	8000aec <__aeabi_dcmpeq>
 8002776:	b118      	cbz	r0, 8002780 <_dtoa_r+0x4e0>
 8002778:	f018 0f01 	tst.w	r8, #1
 800277c:	f040 80ed 	bne.w	800295a <_dtoa_r+0x6ba>
 8002780:	4649      	mov	r1, r9
 8002782:	4658      	mov	r0, fp
 8002784:	f000 fcf2 	bl	800316c <_Bfree>
 8002788:	2300      	movs	r3, #0
 800278a:	7033      	strb	r3, [r6, #0]
 800278c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800278e:	3701      	adds	r7, #1
 8002790:	601f      	str	r7, [r3, #0]
 8002792:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002794:	2b00      	cmp	r3, #0
 8002796:	f000 8320 	beq.w	8002dda <_dtoa_r+0xb3a>
 800279a:	601e      	str	r6, [r3, #0]
 800279c:	e31d      	b.n	8002dda <_dtoa_r+0xb3a>
 800279e:	07e2      	lsls	r2, r4, #31
 80027a0:	d505      	bpl.n	80027ae <_dtoa_r+0x50e>
 80027a2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80027a6:	f7fd ff39 	bl	800061c <__aeabi_dmul>
 80027aa:	3601      	adds	r6, #1
 80027ac:	2301      	movs	r3, #1
 80027ae:	1064      	asrs	r4, r4, #1
 80027b0:	3508      	adds	r5, #8
 80027b2:	e73f      	b.n	8002634 <_dtoa_r+0x394>
 80027b4:	2602      	movs	r6, #2
 80027b6:	e742      	b.n	800263e <_dtoa_r+0x39e>
 80027b8:	9c07      	ldr	r4, [sp, #28]
 80027ba:	9704      	str	r7, [sp, #16]
 80027bc:	e761      	b.n	8002682 <_dtoa_r+0x3e2>
 80027be:	bf00      	nop
 80027c0:	080042e8 	.word	0x080042e8
 80027c4:	080042c0 	.word	0x080042c0
 80027c8:	3ff00000 	.word	0x3ff00000
 80027cc:	40240000 	.word	0x40240000
 80027d0:	401c0000 	.word	0x401c0000
 80027d4:	40140000 	.word	0x40140000
 80027d8:	4b70      	ldr	r3, [pc, #448]	@ (800299c <_dtoa_r+0x6fc>)
 80027da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80027dc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80027e0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80027e4:	4454      	add	r4, sl
 80027e6:	2900      	cmp	r1, #0
 80027e8:	d045      	beq.n	8002876 <_dtoa_r+0x5d6>
 80027ea:	496d      	ldr	r1, [pc, #436]	@ (80029a0 <_dtoa_r+0x700>)
 80027ec:	2000      	movs	r0, #0
 80027ee:	f7fe f83f 	bl	8000870 <__aeabi_ddiv>
 80027f2:	4633      	mov	r3, r6
 80027f4:	462a      	mov	r2, r5
 80027f6:	f7fd fd59 	bl	80002ac <__aeabi_dsub>
 80027fa:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80027fe:	4656      	mov	r6, sl
 8002800:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002804:	f7fe f9ba 	bl	8000b7c <__aeabi_d2iz>
 8002808:	4605      	mov	r5, r0
 800280a:	f7fd fe9d 	bl	8000548 <__aeabi_i2d>
 800280e:	4602      	mov	r2, r0
 8002810:	460b      	mov	r3, r1
 8002812:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002816:	f7fd fd49 	bl	80002ac <__aeabi_dsub>
 800281a:	3530      	adds	r5, #48	@ 0x30
 800281c:	4602      	mov	r2, r0
 800281e:	460b      	mov	r3, r1
 8002820:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002824:	f806 5b01 	strb.w	r5, [r6], #1
 8002828:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800282c:	f7fe f968 	bl	8000b00 <__aeabi_dcmplt>
 8002830:	2800      	cmp	r0, #0
 8002832:	d163      	bne.n	80028fc <_dtoa_r+0x65c>
 8002834:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002838:	495a      	ldr	r1, [pc, #360]	@ (80029a4 <_dtoa_r+0x704>)
 800283a:	2000      	movs	r0, #0
 800283c:	f7fd fd36 	bl	80002ac <__aeabi_dsub>
 8002840:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002844:	f7fe f95c 	bl	8000b00 <__aeabi_dcmplt>
 8002848:	2800      	cmp	r0, #0
 800284a:	f040 8087 	bne.w	800295c <_dtoa_r+0x6bc>
 800284e:	42a6      	cmp	r6, r4
 8002850:	f43f af43 	beq.w	80026da <_dtoa_r+0x43a>
 8002854:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002858:	4b53      	ldr	r3, [pc, #332]	@ (80029a8 <_dtoa_r+0x708>)
 800285a:	2200      	movs	r2, #0
 800285c:	f7fd fede 	bl	800061c <__aeabi_dmul>
 8002860:	4b51      	ldr	r3, [pc, #324]	@ (80029a8 <_dtoa_r+0x708>)
 8002862:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002866:	2200      	movs	r2, #0
 8002868:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800286c:	f7fd fed6 	bl	800061c <__aeabi_dmul>
 8002870:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002874:	e7c4      	b.n	8002800 <_dtoa_r+0x560>
 8002876:	4631      	mov	r1, r6
 8002878:	4628      	mov	r0, r5
 800287a:	f7fd fecf 	bl	800061c <__aeabi_dmul>
 800287e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002882:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002884:	4656      	mov	r6, sl
 8002886:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800288a:	f7fe f977 	bl	8000b7c <__aeabi_d2iz>
 800288e:	4605      	mov	r5, r0
 8002890:	f7fd fe5a 	bl	8000548 <__aeabi_i2d>
 8002894:	4602      	mov	r2, r0
 8002896:	460b      	mov	r3, r1
 8002898:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800289c:	f7fd fd06 	bl	80002ac <__aeabi_dsub>
 80028a0:	3530      	adds	r5, #48	@ 0x30
 80028a2:	f806 5b01 	strb.w	r5, [r6], #1
 80028a6:	4602      	mov	r2, r0
 80028a8:	460b      	mov	r3, r1
 80028aa:	42a6      	cmp	r6, r4
 80028ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80028b0:	f04f 0200 	mov.w	r2, #0
 80028b4:	d124      	bne.n	8002900 <_dtoa_r+0x660>
 80028b6:	4b3a      	ldr	r3, [pc, #232]	@ (80029a0 <_dtoa_r+0x700>)
 80028b8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80028bc:	f7fd fcf8 	bl	80002b0 <__adddf3>
 80028c0:	4602      	mov	r2, r0
 80028c2:	460b      	mov	r3, r1
 80028c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028c8:	f7fe f938 	bl	8000b3c <__aeabi_dcmpgt>
 80028cc:	2800      	cmp	r0, #0
 80028ce:	d145      	bne.n	800295c <_dtoa_r+0x6bc>
 80028d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80028d4:	4932      	ldr	r1, [pc, #200]	@ (80029a0 <_dtoa_r+0x700>)
 80028d6:	2000      	movs	r0, #0
 80028d8:	f7fd fce8 	bl	80002ac <__aeabi_dsub>
 80028dc:	4602      	mov	r2, r0
 80028de:	460b      	mov	r3, r1
 80028e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028e4:	f7fe f90c 	bl	8000b00 <__aeabi_dcmplt>
 80028e8:	2800      	cmp	r0, #0
 80028ea:	f43f aef6 	beq.w	80026da <_dtoa_r+0x43a>
 80028ee:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80028f0:	1e73      	subs	r3, r6, #1
 80028f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80028f4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80028f8:	2b30      	cmp	r3, #48	@ 0x30
 80028fa:	d0f8      	beq.n	80028ee <_dtoa_r+0x64e>
 80028fc:	9f04      	ldr	r7, [sp, #16]
 80028fe:	e73f      	b.n	8002780 <_dtoa_r+0x4e0>
 8002900:	4b29      	ldr	r3, [pc, #164]	@ (80029a8 <_dtoa_r+0x708>)
 8002902:	f7fd fe8b 	bl	800061c <__aeabi_dmul>
 8002906:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800290a:	e7bc      	b.n	8002886 <_dtoa_r+0x5e6>
 800290c:	d10c      	bne.n	8002928 <_dtoa_r+0x688>
 800290e:	4b27      	ldr	r3, [pc, #156]	@ (80029ac <_dtoa_r+0x70c>)
 8002910:	2200      	movs	r2, #0
 8002912:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002916:	f7fd fe81 	bl	800061c <__aeabi_dmul>
 800291a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800291e:	f7fe f903 	bl	8000b28 <__aeabi_dcmpge>
 8002922:	2800      	cmp	r0, #0
 8002924:	f000 815b 	beq.w	8002bde <_dtoa_r+0x93e>
 8002928:	2400      	movs	r4, #0
 800292a:	4625      	mov	r5, r4
 800292c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800292e:	43db      	mvns	r3, r3
 8002930:	9304      	str	r3, [sp, #16]
 8002932:	4656      	mov	r6, sl
 8002934:	2700      	movs	r7, #0
 8002936:	4621      	mov	r1, r4
 8002938:	4658      	mov	r0, fp
 800293a:	f000 fc17 	bl	800316c <_Bfree>
 800293e:	2d00      	cmp	r5, #0
 8002940:	d0dc      	beq.n	80028fc <_dtoa_r+0x65c>
 8002942:	b12f      	cbz	r7, 8002950 <_dtoa_r+0x6b0>
 8002944:	42af      	cmp	r7, r5
 8002946:	d003      	beq.n	8002950 <_dtoa_r+0x6b0>
 8002948:	4639      	mov	r1, r7
 800294a:	4658      	mov	r0, fp
 800294c:	f000 fc0e 	bl	800316c <_Bfree>
 8002950:	4629      	mov	r1, r5
 8002952:	4658      	mov	r0, fp
 8002954:	f000 fc0a 	bl	800316c <_Bfree>
 8002958:	e7d0      	b.n	80028fc <_dtoa_r+0x65c>
 800295a:	9704      	str	r7, [sp, #16]
 800295c:	4633      	mov	r3, r6
 800295e:	461e      	mov	r6, r3
 8002960:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002964:	2a39      	cmp	r2, #57	@ 0x39
 8002966:	d107      	bne.n	8002978 <_dtoa_r+0x6d8>
 8002968:	459a      	cmp	sl, r3
 800296a:	d1f8      	bne.n	800295e <_dtoa_r+0x6be>
 800296c:	9a04      	ldr	r2, [sp, #16]
 800296e:	3201      	adds	r2, #1
 8002970:	9204      	str	r2, [sp, #16]
 8002972:	2230      	movs	r2, #48	@ 0x30
 8002974:	f88a 2000 	strb.w	r2, [sl]
 8002978:	781a      	ldrb	r2, [r3, #0]
 800297a:	3201      	adds	r2, #1
 800297c:	701a      	strb	r2, [r3, #0]
 800297e:	e7bd      	b.n	80028fc <_dtoa_r+0x65c>
 8002980:	4b09      	ldr	r3, [pc, #36]	@ (80029a8 <_dtoa_r+0x708>)
 8002982:	2200      	movs	r2, #0
 8002984:	f7fd fe4a 	bl	800061c <__aeabi_dmul>
 8002988:	2200      	movs	r2, #0
 800298a:	2300      	movs	r3, #0
 800298c:	4604      	mov	r4, r0
 800298e:	460d      	mov	r5, r1
 8002990:	f7fe f8ac 	bl	8000aec <__aeabi_dcmpeq>
 8002994:	2800      	cmp	r0, #0
 8002996:	f43f aebc 	beq.w	8002712 <_dtoa_r+0x472>
 800299a:	e6f1      	b.n	8002780 <_dtoa_r+0x4e0>
 800299c:	080042e8 	.word	0x080042e8
 80029a0:	3fe00000 	.word	0x3fe00000
 80029a4:	3ff00000 	.word	0x3ff00000
 80029a8:	40240000 	.word	0x40240000
 80029ac:	40140000 	.word	0x40140000
 80029b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80029b2:	2a00      	cmp	r2, #0
 80029b4:	f000 80db 	beq.w	8002b6e <_dtoa_r+0x8ce>
 80029b8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80029ba:	2a01      	cmp	r2, #1
 80029bc:	f300 80bf 	bgt.w	8002b3e <_dtoa_r+0x89e>
 80029c0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80029c2:	2a00      	cmp	r2, #0
 80029c4:	f000 80b7 	beq.w	8002b36 <_dtoa_r+0x896>
 80029c8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80029cc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80029ce:	4646      	mov	r6, r8
 80029d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80029d2:	2101      	movs	r1, #1
 80029d4:	441a      	add	r2, r3
 80029d6:	4658      	mov	r0, fp
 80029d8:	4498      	add	r8, r3
 80029da:	9209      	str	r2, [sp, #36]	@ 0x24
 80029dc:	f000 fc7a 	bl	80032d4 <__i2b>
 80029e0:	4605      	mov	r5, r0
 80029e2:	b15e      	cbz	r6, 80029fc <_dtoa_r+0x75c>
 80029e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	dd08      	ble.n	80029fc <_dtoa_r+0x75c>
 80029ea:	42b3      	cmp	r3, r6
 80029ec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80029ee:	bfa8      	it	ge
 80029f0:	4633      	movge	r3, r6
 80029f2:	eba8 0803 	sub.w	r8, r8, r3
 80029f6:	1af6      	subs	r6, r6, r3
 80029f8:	1ad3      	subs	r3, r2, r3
 80029fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80029fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80029fe:	b1f3      	cbz	r3, 8002a3e <_dtoa_r+0x79e>
 8002a00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	f000 80b7 	beq.w	8002b76 <_dtoa_r+0x8d6>
 8002a08:	b18c      	cbz	r4, 8002a2e <_dtoa_r+0x78e>
 8002a0a:	4629      	mov	r1, r5
 8002a0c:	4622      	mov	r2, r4
 8002a0e:	4658      	mov	r0, fp
 8002a10:	f000 fd20 	bl	8003454 <__pow5mult>
 8002a14:	464a      	mov	r2, r9
 8002a16:	4601      	mov	r1, r0
 8002a18:	4605      	mov	r5, r0
 8002a1a:	4658      	mov	r0, fp
 8002a1c:	f000 fc70 	bl	8003300 <__multiply>
 8002a20:	4649      	mov	r1, r9
 8002a22:	9004      	str	r0, [sp, #16]
 8002a24:	4658      	mov	r0, fp
 8002a26:	f000 fba1 	bl	800316c <_Bfree>
 8002a2a:	9b04      	ldr	r3, [sp, #16]
 8002a2c:	4699      	mov	r9, r3
 8002a2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002a30:	1b1a      	subs	r2, r3, r4
 8002a32:	d004      	beq.n	8002a3e <_dtoa_r+0x79e>
 8002a34:	4649      	mov	r1, r9
 8002a36:	4658      	mov	r0, fp
 8002a38:	f000 fd0c 	bl	8003454 <__pow5mult>
 8002a3c:	4681      	mov	r9, r0
 8002a3e:	2101      	movs	r1, #1
 8002a40:	4658      	mov	r0, fp
 8002a42:	f000 fc47 	bl	80032d4 <__i2b>
 8002a46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002a48:	4604      	mov	r4, r0
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	f000 81c9 	beq.w	8002de2 <_dtoa_r+0xb42>
 8002a50:	461a      	mov	r2, r3
 8002a52:	4601      	mov	r1, r0
 8002a54:	4658      	mov	r0, fp
 8002a56:	f000 fcfd 	bl	8003454 <__pow5mult>
 8002a5a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002a5c:	2b01      	cmp	r3, #1
 8002a5e:	4604      	mov	r4, r0
 8002a60:	f300 808f 	bgt.w	8002b82 <_dtoa_r+0x8e2>
 8002a64:	9b02      	ldr	r3, [sp, #8]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	f040 8087 	bne.w	8002b7a <_dtoa_r+0x8da>
 8002a6c:	9b03      	ldr	r3, [sp, #12]
 8002a6e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	f040 8083 	bne.w	8002b7e <_dtoa_r+0x8de>
 8002a78:	9b03      	ldr	r3, [sp, #12]
 8002a7a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002a7e:	0d1b      	lsrs	r3, r3, #20
 8002a80:	051b      	lsls	r3, r3, #20
 8002a82:	b12b      	cbz	r3, 8002a90 <_dtoa_r+0x7f0>
 8002a84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002a86:	3301      	adds	r3, #1
 8002a88:	9309      	str	r3, [sp, #36]	@ 0x24
 8002a8a:	f108 0801 	add.w	r8, r8, #1
 8002a8e:	2301      	movs	r3, #1
 8002a90:	930a      	str	r3, [sp, #40]	@ 0x28
 8002a92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	f000 81aa 	beq.w	8002dee <_dtoa_r+0xb4e>
 8002a9a:	6923      	ldr	r3, [r4, #16]
 8002a9c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002aa0:	6918      	ldr	r0, [r3, #16]
 8002aa2:	f000 fbcb 	bl	800323c <__hi0bits>
 8002aa6:	f1c0 0020 	rsb	r0, r0, #32
 8002aaa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002aac:	4418      	add	r0, r3
 8002aae:	f010 001f 	ands.w	r0, r0, #31
 8002ab2:	d071      	beq.n	8002b98 <_dtoa_r+0x8f8>
 8002ab4:	f1c0 0320 	rsb	r3, r0, #32
 8002ab8:	2b04      	cmp	r3, #4
 8002aba:	dd65      	ble.n	8002b88 <_dtoa_r+0x8e8>
 8002abc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002abe:	f1c0 001c 	rsb	r0, r0, #28
 8002ac2:	4403      	add	r3, r0
 8002ac4:	4480      	add	r8, r0
 8002ac6:	4406      	add	r6, r0
 8002ac8:	9309      	str	r3, [sp, #36]	@ 0x24
 8002aca:	f1b8 0f00 	cmp.w	r8, #0
 8002ace:	dd05      	ble.n	8002adc <_dtoa_r+0x83c>
 8002ad0:	4649      	mov	r1, r9
 8002ad2:	4642      	mov	r2, r8
 8002ad4:	4658      	mov	r0, fp
 8002ad6:	f000 fd17 	bl	8003508 <__lshift>
 8002ada:	4681      	mov	r9, r0
 8002adc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	dd05      	ble.n	8002aee <_dtoa_r+0x84e>
 8002ae2:	4621      	mov	r1, r4
 8002ae4:	461a      	mov	r2, r3
 8002ae6:	4658      	mov	r0, fp
 8002ae8:	f000 fd0e 	bl	8003508 <__lshift>
 8002aec:	4604      	mov	r4, r0
 8002aee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d053      	beq.n	8002b9c <_dtoa_r+0x8fc>
 8002af4:	4621      	mov	r1, r4
 8002af6:	4648      	mov	r0, r9
 8002af8:	f000 fd72 	bl	80035e0 <__mcmp>
 8002afc:	2800      	cmp	r0, #0
 8002afe:	da4d      	bge.n	8002b9c <_dtoa_r+0x8fc>
 8002b00:	1e7b      	subs	r3, r7, #1
 8002b02:	9304      	str	r3, [sp, #16]
 8002b04:	4649      	mov	r1, r9
 8002b06:	2300      	movs	r3, #0
 8002b08:	220a      	movs	r2, #10
 8002b0a:	4658      	mov	r0, fp
 8002b0c:	f000 fb50 	bl	80031b0 <__multadd>
 8002b10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002b12:	4681      	mov	r9, r0
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	f000 816c 	beq.w	8002df2 <_dtoa_r+0xb52>
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	4629      	mov	r1, r5
 8002b1e:	220a      	movs	r2, #10
 8002b20:	4658      	mov	r0, fp
 8002b22:	f000 fb45 	bl	80031b0 <__multadd>
 8002b26:	9b08      	ldr	r3, [sp, #32]
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	4605      	mov	r5, r0
 8002b2c:	dc61      	bgt.n	8002bf2 <_dtoa_r+0x952>
 8002b2e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002b30:	2b02      	cmp	r3, #2
 8002b32:	dc3b      	bgt.n	8002bac <_dtoa_r+0x90c>
 8002b34:	e05d      	b.n	8002bf2 <_dtoa_r+0x952>
 8002b36:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002b38:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002b3c:	e746      	b.n	80029cc <_dtoa_r+0x72c>
 8002b3e:	9b07      	ldr	r3, [sp, #28]
 8002b40:	1e5c      	subs	r4, r3, #1
 8002b42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002b44:	42a3      	cmp	r3, r4
 8002b46:	bfbf      	itttt	lt
 8002b48:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002b4a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8002b4c:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002b4e:	1ae3      	sublt	r3, r4, r3
 8002b50:	bfb4      	ite	lt
 8002b52:	18d2      	addlt	r2, r2, r3
 8002b54:	1b1c      	subge	r4, r3, r4
 8002b56:	9b07      	ldr	r3, [sp, #28]
 8002b58:	bfbc      	itt	lt
 8002b5a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8002b5c:	2400      	movlt	r4, #0
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	bfb5      	itete	lt
 8002b62:	eba8 0603 	sublt.w	r6, r8, r3
 8002b66:	9b07      	ldrge	r3, [sp, #28]
 8002b68:	2300      	movlt	r3, #0
 8002b6a:	4646      	movge	r6, r8
 8002b6c:	e730      	b.n	80029d0 <_dtoa_r+0x730>
 8002b6e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002b70:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002b72:	4646      	mov	r6, r8
 8002b74:	e735      	b.n	80029e2 <_dtoa_r+0x742>
 8002b76:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002b78:	e75c      	b.n	8002a34 <_dtoa_r+0x794>
 8002b7a:	2300      	movs	r3, #0
 8002b7c:	e788      	b.n	8002a90 <_dtoa_r+0x7f0>
 8002b7e:	9b02      	ldr	r3, [sp, #8]
 8002b80:	e786      	b.n	8002a90 <_dtoa_r+0x7f0>
 8002b82:	2300      	movs	r3, #0
 8002b84:	930a      	str	r3, [sp, #40]	@ 0x28
 8002b86:	e788      	b.n	8002a9a <_dtoa_r+0x7fa>
 8002b88:	d09f      	beq.n	8002aca <_dtoa_r+0x82a>
 8002b8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002b8c:	331c      	adds	r3, #28
 8002b8e:	441a      	add	r2, r3
 8002b90:	4498      	add	r8, r3
 8002b92:	441e      	add	r6, r3
 8002b94:	9209      	str	r2, [sp, #36]	@ 0x24
 8002b96:	e798      	b.n	8002aca <_dtoa_r+0x82a>
 8002b98:	4603      	mov	r3, r0
 8002b9a:	e7f6      	b.n	8002b8a <_dtoa_r+0x8ea>
 8002b9c:	9b07      	ldr	r3, [sp, #28]
 8002b9e:	9704      	str	r7, [sp, #16]
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	dc20      	bgt.n	8002be6 <_dtoa_r+0x946>
 8002ba4:	9308      	str	r3, [sp, #32]
 8002ba6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002ba8:	2b02      	cmp	r3, #2
 8002baa:	dd1e      	ble.n	8002bea <_dtoa_r+0x94a>
 8002bac:	9b08      	ldr	r3, [sp, #32]
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	f47f aebc 	bne.w	800292c <_dtoa_r+0x68c>
 8002bb4:	4621      	mov	r1, r4
 8002bb6:	2205      	movs	r2, #5
 8002bb8:	4658      	mov	r0, fp
 8002bba:	f000 faf9 	bl	80031b0 <__multadd>
 8002bbe:	4601      	mov	r1, r0
 8002bc0:	4604      	mov	r4, r0
 8002bc2:	4648      	mov	r0, r9
 8002bc4:	f000 fd0c 	bl	80035e0 <__mcmp>
 8002bc8:	2800      	cmp	r0, #0
 8002bca:	f77f aeaf 	ble.w	800292c <_dtoa_r+0x68c>
 8002bce:	4656      	mov	r6, sl
 8002bd0:	2331      	movs	r3, #49	@ 0x31
 8002bd2:	f806 3b01 	strb.w	r3, [r6], #1
 8002bd6:	9b04      	ldr	r3, [sp, #16]
 8002bd8:	3301      	adds	r3, #1
 8002bda:	9304      	str	r3, [sp, #16]
 8002bdc:	e6aa      	b.n	8002934 <_dtoa_r+0x694>
 8002bde:	9c07      	ldr	r4, [sp, #28]
 8002be0:	9704      	str	r7, [sp, #16]
 8002be2:	4625      	mov	r5, r4
 8002be4:	e7f3      	b.n	8002bce <_dtoa_r+0x92e>
 8002be6:	9b07      	ldr	r3, [sp, #28]
 8002be8:	9308      	str	r3, [sp, #32]
 8002bea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	f000 8104 	beq.w	8002dfa <_dtoa_r+0xb5a>
 8002bf2:	2e00      	cmp	r6, #0
 8002bf4:	dd05      	ble.n	8002c02 <_dtoa_r+0x962>
 8002bf6:	4629      	mov	r1, r5
 8002bf8:	4632      	mov	r2, r6
 8002bfa:	4658      	mov	r0, fp
 8002bfc:	f000 fc84 	bl	8003508 <__lshift>
 8002c00:	4605      	mov	r5, r0
 8002c02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d05a      	beq.n	8002cbe <_dtoa_r+0xa1e>
 8002c08:	6869      	ldr	r1, [r5, #4]
 8002c0a:	4658      	mov	r0, fp
 8002c0c:	f000 fa6e 	bl	80030ec <_Balloc>
 8002c10:	4606      	mov	r6, r0
 8002c12:	b928      	cbnz	r0, 8002c20 <_dtoa_r+0x980>
 8002c14:	4b84      	ldr	r3, [pc, #528]	@ (8002e28 <_dtoa_r+0xb88>)
 8002c16:	4602      	mov	r2, r0
 8002c18:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002c1c:	f7ff bb54 	b.w	80022c8 <_dtoa_r+0x28>
 8002c20:	692a      	ldr	r2, [r5, #16]
 8002c22:	3202      	adds	r2, #2
 8002c24:	0092      	lsls	r2, r2, #2
 8002c26:	f105 010c 	add.w	r1, r5, #12
 8002c2a:	300c      	adds	r0, #12
 8002c2c:	f000 fe8a 	bl	8003944 <memcpy>
 8002c30:	2201      	movs	r2, #1
 8002c32:	4631      	mov	r1, r6
 8002c34:	4658      	mov	r0, fp
 8002c36:	f000 fc67 	bl	8003508 <__lshift>
 8002c3a:	f10a 0301 	add.w	r3, sl, #1
 8002c3e:	9307      	str	r3, [sp, #28]
 8002c40:	9b08      	ldr	r3, [sp, #32]
 8002c42:	4453      	add	r3, sl
 8002c44:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002c46:	9b02      	ldr	r3, [sp, #8]
 8002c48:	f003 0301 	and.w	r3, r3, #1
 8002c4c:	462f      	mov	r7, r5
 8002c4e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002c50:	4605      	mov	r5, r0
 8002c52:	9b07      	ldr	r3, [sp, #28]
 8002c54:	4621      	mov	r1, r4
 8002c56:	3b01      	subs	r3, #1
 8002c58:	4648      	mov	r0, r9
 8002c5a:	9302      	str	r3, [sp, #8]
 8002c5c:	f7ff fa96 	bl	800218c <quorem>
 8002c60:	4639      	mov	r1, r7
 8002c62:	9008      	str	r0, [sp, #32]
 8002c64:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002c68:	4648      	mov	r0, r9
 8002c6a:	f000 fcb9 	bl	80035e0 <__mcmp>
 8002c6e:	462a      	mov	r2, r5
 8002c70:	9009      	str	r0, [sp, #36]	@ 0x24
 8002c72:	4621      	mov	r1, r4
 8002c74:	4658      	mov	r0, fp
 8002c76:	f000 fccf 	bl	8003618 <__mdiff>
 8002c7a:	68c2      	ldr	r2, [r0, #12]
 8002c7c:	4606      	mov	r6, r0
 8002c7e:	bb02      	cbnz	r2, 8002cc2 <_dtoa_r+0xa22>
 8002c80:	4601      	mov	r1, r0
 8002c82:	4648      	mov	r0, r9
 8002c84:	f000 fcac 	bl	80035e0 <__mcmp>
 8002c88:	4602      	mov	r2, r0
 8002c8a:	4631      	mov	r1, r6
 8002c8c:	4658      	mov	r0, fp
 8002c8e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002c90:	f000 fa6c 	bl	800316c <_Bfree>
 8002c94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002c96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002c98:	9e07      	ldr	r6, [sp, #28]
 8002c9a:	ea43 0102 	orr.w	r1, r3, r2
 8002c9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ca0:	4319      	orrs	r1, r3
 8002ca2:	d110      	bne.n	8002cc6 <_dtoa_r+0xa26>
 8002ca4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002ca8:	d029      	beq.n	8002cfe <_dtoa_r+0xa5e>
 8002caa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	dd02      	ble.n	8002cb6 <_dtoa_r+0xa16>
 8002cb0:	9b08      	ldr	r3, [sp, #32]
 8002cb2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002cb6:	9b02      	ldr	r3, [sp, #8]
 8002cb8:	f883 8000 	strb.w	r8, [r3]
 8002cbc:	e63b      	b.n	8002936 <_dtoa_r+0x696>
 8002cbe:	4628      	mov	r0, r5
 8002cc0:	e7bb      	b.n	8002c3a <_dtoa_r+0x99a>
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	e7e1      	b.n	8002c8a <_dtoa_r+0x9ea>
 8002cc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	db04      	blt.n	8002cd6 <_dtoa_r+0xa36>
 8002ccc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8002cce:	430b      	orrs	r3, r1
 8002cd0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002cd2:	430b      	orrs	r3, r1
 8002cd4:	d120      	bne.n	8002d18 <_dtoa_r+0xa78>
 8002cd6:	2a00      	cmp	r2, #0
 8002cd8:	dded      	ble.n	8002cb6 <_dtoa_r+0xa16>
 8002cda:	4649      	mov	r1, r9
 8002cdc:	2201      	movs	r2, #1
 8002cde:	4658      	mov	r0, fp
 8002ce0:	f000 fc12 	bl	8003508 <__lshift>
 8002ce4:	4621      	mov	r1, r4
 8002ce6:	4681      	mov	r9, r0
 8002ce8:	f000 fc7a 	bl	80035e0 <__mcmp>
 8002cec:	2800      	cmp	r0, #0
 8002cee:	dc03      	bgt.n	8002cf8 <_dtoa_r+0xa58>
 8002cf0:	d1e1      	bne.n	8002cb6 <_dtoa_r+0xa16>
 8002cf2:	f018 0f01 	tst.w	r8, #1
 8002cf6:	d0de      	beq.n	8002cb6 <_dtoa_r+0xa16>
 8002cf8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002cfc:	d1d8      	bne.n	8002cb0 <_dtoa_r+0xa10>
 8002cfe:	9a02      	ldr	r2, [sp, #8]
 8002d00:	2339      	movs	r3, #57	@ 0x39
 8002d02:	7013      	strb	r3, [r2, #0]
 8002d04:	4633      	mov	r3, r6
 8002d06:	461e      	mov	r6, r3
 8002d08:	3b01      	subs	r3, #1
 8002d0a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002d0e:	2a39      	cmp	r2, #57	@ 0x39
 8002d10:	d052      	beq.n	8002db8 <_dtoa_r+0xb18>
 8002d12:	3201      	adds	r2, #1
 8002d14:	701a      	strb	r2, [r3, #0]
 8002d16:	e60e      	b.n	8002936 <_dtoa_r+0x696>
 8002d18:	2a00      	cmp	r2, #0
 8002d1a:	dd07      	ble.n	8002d2c <_dtoa_r+0xa8c>
 8002d1c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002d20:	d0ed      	beq.n	8002cfe <_dtoa_r+0xa5e>
 8002d22:	9a02      	ldr	r2, [sp, #8]
 8002d24:	f108 0301 	add.w	r3, r8, #1
 8002d28:	7013      	strb	r3, [r2, #0]
 8002d2a:	e604      	b.n	8002936 <_dtoa_r+0x696>
 8002d2c:	9b07      	ldr	r3, [sp, #28]
 8002d2e:	9a07      	ldr	r2, [sp, #28]
 8002d30:	f803 8c01 	strb.w	r8, [r3, #-1]
 8002d34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002d36:	4293      	cmp	r3, r2
 8002d38:	d028      	beq.n	8002d8c <_dtoa_r+0xaec>
 8002d3a:	4649      	mov	r1, r9
 8002d3c:	2300      	movs	r3, #0
 8002d3e:	220a      	movs	r2, #10
 8002d40:	4658      	mov	r0, fp
 8002d42:	f000 fa35 	bl	80031b0 <__multadd>
 8002d46:	42af      	cmp	r7, r5
 8002d48:	4681      	mov	r9, r0
 8002d4a:	f04f 0300 	mov.w	r3, #0
 8002d4e:	f04f 020a 	mov.w	r2, #10
 8002d52:	4639      	mov	r1, r7
 8002d54:	4658      	mov	r0, fp
 8002d56:	d107      	bne.n	8002d68 <_dtoa_r+0xac8>
 8002d58:	f000 fa2a 	bl	80031b0 <__multadd>
 8002d5c:	4607      	mov	r7, r0
 8002d5e:	4605      	mov	r5, r0
 8002d60:	9b07      	ldr	r3, [sp, #28]
 8002d62:	3301      	adds	r3, #1
 8002d64:	9307      	str	r3, [sp, #28]
 8002d66:	e774      	b.n	8002c52 <_dtoa_r+0x9b2>
 8002d68:	f000 fa22 	bl	80031b0 <__multadd>
 8002d6c:	4629      	mov	r1, r5
 8002d6e:	4607      	mov	r7, r0
 8002d70:	2300      	movs	r3, #0
 8002d72:	220a      	movs	r2, #10
 8002d74:	4658      	mov	r0, fp
 8002d76:	f000 fa1b 	bl	80031b0 <__multadd>
 8002d7a:	4605      	mov	r5, r0
 8002d7c:	e7f0      	b.n	8002d60 <_dtoa_r+0xac0>
 8002d7e:	9b08      	ldr	r3, [sp, #32]
 8002d80:	2b00      	cmp	r3, #0
 8002d82:	bfcc      	ite	gt
 8002d84:	461e      	movgt	r6, r3
 8002d86:	2601      	movle	r6, #1
 8002d88:	4456      	add	r6, sl
 8002d8a:	2700      	movs	r7, #0
 8002d8c:	4649      	mov	r1, r9
 8002d8e:	2201      	movs	r2, #1
 8002d90:	4658      	mov	r0, fp
 8002d92:	f000 fbb9 	bl	8003508 <__lshift>
 8002d96:	4621      	mov	r1, r4
 8002d98:	4681      	mov	r9, r0
 8002d9a:	f000 fc21 	bl	80035e0 <__mcmp>
 8002d9e:	2800      	cmp	r0, #0
 8002da0:	dcb0      	bgt.n	8002d04 <_dtoa_r+0xa64>
 8002da2:	d102      	bne.n	8002daa <_dtoa_r+0xb0a>
 8002da4:	f018 0f01 	tst.w	r8, #1
 8002da8:	d1ac      	bne.n	8002d04 <_dtoa_r+0xa64>
 8002daa:	4633      	mov	r3, r6
 8002dac:	461e      	mov	r6, r3
 8002dae:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002db2:	2a30      	cmp	r2, #48	@ 0x30
 8002db4:	d0fa      	beq.n	8002dac <_dtoa_r+0xb0c>
 8002db6:	e5be      	b.n	8002936 <_dtoa_r+0x696>
 8002db8:	459a      	cmp	sl, r3
 8002dba:	d1a4      	bne.n	8002d06 <_dtoa_r+0xa66>
 8002dbc:	9b04      	ldr	r3, [sp, #16]
 8002dbe:	3301      	adds	r3, #1
 8002dc0:	9304      	str	r3, [sp, #16]
 8002dc2:	2331      	movs	r3, #49	@ 0x31
 8002dc4:	f88a 3000 	strb.w	r3, [sl]
 8002dc8:	e5b5      	b.n	8002936 <_dtoa_r+0x696>
 8002dca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002dcc:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8002e2c <_dtoa_r+0xb8c>
 8002dd0:	b11b      	cbz	r3, 8002dda <_dtoa_r+0xb3a>
 8002dd2:	f10a 0308 	add.w	r3, sl, #8
 8002dd6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002dd8:	6013      	str	r3, [r2, #0]
 8002dda:	4650      	mov	r0, sl
 8002ddc:	b017      	add	sp, #92	@ 0x5c
 8002dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002de2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002de4:	2b01      	cmp	r3, #1
 8002de6:	f77f ae3d 	ble.w	8002a64 <_dtoa_r+0x7c4>
 8002dea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002dec:	930a      	str	r3, [sp, #40]	@ 0x28
 8002dee:	2001      	movs	r0, #1
 8002df0:	e65b      	b.n	8002aaa <_dtoa_r+0x80a>
 8002df2:	9b08      	ldr	r3, [sp, #32]
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	f77f aed6 	ble.w	8002ba6 <_dtoa_r+0x906>
 8002dfa:	4656      	mov	r6, sl
 8002dfc:	4621      	mov	r1, r4
 8002dfe:	4648      	mov	r0, r9
 8002e00:	f7ff f9c4 	bl	800218c <quorem>
 8002e04:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002e08:	f806 8b01 	strb.w	r8, [r6], #1
 8002e0c:	9b08      	ldr	r3, [sp, #32]
 8002e0e:	eba6 020a 	sub.w	r2, r6, sl
 8002e12:	4293      	cmp	r3, r2
 8002e14:	ddb3      	ble.n	8002d7e <_dtoa_r+0xade>
 8002e16:	4649      	mov	r1, r9
 8002e18:	2300      	movs	r3, #0
 8002e1a:	220a      	movs	r2, #10
 8002e1c:	4658      	mov	r0, fp
 8002e1e:	f000 f9c7 	bl	80031b0 <__multadd>
 8002e22:	4681      	mov	r9, r0
 8002e24:	e7ea      	b.n	8002dfc <_dtoa_r+0xb5c>
 8002e26:	bf00      	nop
 8002e28:	08004247 	.word	0x08004247
 8002e2c:	080041e2 	.word	0x080041e2

08002e30 <malloc>:
 8002e30:	4b02      	ldr	r3, [pc, #8]	@ (8002e3c <malloc+0xc>)
 8002e32:	4601      	mov	r1, r0
 8002e34:	6818      	ldr	r0, [r3, #0]
 8002e36:	f000 b825 	b.w	8002e84 <_malloc_r>
 8002e3a:	bf00      	nop
 8002e3c:	20000038 	.word	0x20000038

08002e40 <sbrk_aligned>:
 8002e40:	b570      	push	{r4, r5, r6, lr}
 8002e42:	4e0f      	ldr	r6, [pc, #60]	@ (8002e80 <sbrk_aligned+0x40>)
 8002e44:	460c      	mov	r4, r1
 8002e46:	6831      	ldr	r1, [r6, #0]
 8002e48:	4605      	mov	r5, r0
 8002e4a:	b911      	cbnz	r1, 8002e52 <sbrk_aligned+0x12>
 8002e4c:	f000 fd58 	bl	8003900 <_sbrk_r>
 8002e50:	6030      	str	r0, [r6, #0]
 8002e52:	4621      	mov	r1, r4
 8002e54:	4628      	mov	r0, r5
 8002e56:	f000 fd53 	bl	8003900 <_sbrk_r>
 8002e5a:	1c43      	adds	r3, r0, #1
 8002e5c:	d103      	bne.n	8002e66 <sbrk_aligned+0x26>
 8002e5e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8002e62:	4620      	mov	r0, r4
 8002e64:	bd70      	pop	{r4, r5, r6, pc}
 8002e66:	1cc4      	adds	r4, r0, #3
 8002e68:	f024 0403 	bic.w	r4, r4, #3
 8002e6c:	42a0      	cmp	r0, r4
 8002e6e:	d0f8      	beq.n	8002e62 <sbrk_aligned+0x22>
 8002e70:	1a21      	subs	r1, r4, r0
 8002e72:	4628      	mov	r0, r5
 8002e74:	f000 fd44 	bl	8003900 <_sbrk_r>
 8002e78:	3001      	adds	r0, #1
 8002e7a:	d1f2      	bne.n	8002e62 <sbrk_aligned+0x22>
 8002e7c:	e7ef      	b.n	8002e5e <sbrk_aligned+0x1e>
 8002e7e:	bf00      	nop
 8002e80:	2000048c 	.word	0x2000048c

08002e84 <_malloc_r>:
 8002e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e88:	1ccd      	adds	r5, r1, #3
 8002e8a:	f025 0503 	bic.w	r5, r5, #3
 8002e8e:	3508      	adds	r5, #8
 8002e90:	2d0c      	cmp	r5, #12
 8002e92:	bf38      	it	cc
 8002e94:	250c      	movcc	r5, #12
 8002e96:	2d00      	cmp	r5, #0
 8002e98:	4606      	mov	r6, r0
 8002e9a:	db01      	blt.n	8002ea0 <_malloc_r+0x1c>
 8002e9c:	42a9      	cmp	r1, r5
 8002e9e:	d904      	bls.n	8002eaa <_malloc_r+0x26>
 8002ea0:	230c      	movs	r3, #12
 8002ea2:	6033      	str	r3, [r6, #0]
 8002ea4:	2000      	movs	r0, #0
 8002ea6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002eaa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002f80 <_malloc_r+0xfc>
 8002eae:	f000 f911 	bl	80030d4 <__malloc_lock>
 8002eb2:	f8d8 3000 	ldr.w	r3, [r8]
 8002eb6:	461c      	mov	r4, r3
 8002eb8:	bb44      	cbnz	r4, 8002f0c <_malloc_r+0x88>
 8002eba:	4629      	mov	r1, r5
 8002ebc:	4630      	mov	r0, r6
 8002ebe:	f7ff ffbf 	bl	8002e40 <sbrk_aligned>
 8002ec2:	1c43      	adds	r3, r0, #1
 8002ec4:	4604      	mov	r4, r0
 8002ec6:	d158      	bne.n	8002f7a <_malloc_r+0xf6>
 8002ec8:	f8d8 4000 	ldr.w	r4, [r8]
 8002ecc:	4627      	mov	r7, r4
 8002ece:	2f00      	cmp	r7, #0
 8002ed0:	d143      	bne.n	8002f5a <_malloc_r+0xd6>
 8002ed2:	2c00      	cmp	r4, #0
 8002ed4:	d04b      	beq.n	8002f6e <_malloc_r+0xea>
 8002ed6:	6823      	ldr	r3, [r4, #0]
 8002ed8:	4639      	mov	r1, r7
 8002eda:	4630      	mov	r0, r6
 8002edc:	eb04 0903 	add.w	r9, r4, r3
 8002ee0:	f000 fd0e 	bl	8003900 <_sbrk_r>
 8002ee4:	4581      	cmp	r9, r0
 8002ee6:	d142      	bne.n	8002f6e <_malloc_r+0xea>
 8002ee8:	6821      	ldr	r1, [r4, #0]
 8002eea:	1a6d      	subs	r5, r5, r1
 8002eec:	4629      	mov	r1, r5
 8002eee:	4630      	mov	r0, r6
 8002ef0:	f7ff ffa6 	bl	8002e40 <sbrk_aligned>
 8002ef4:	3001      	adds	r0, #1
 8002ef6:	d03a      	beq.n	8002f6e <_malloc_r+0xea>
 8002ef8:	6823      	ldr	r3, [r4, #0]
 8002efa:	442b      	add	r3, r5
 8002efc:	6023      	str	r3, [r4, #0]
 8002efe:	f8d8 3000 	ldr.w	r3, [r8]
 8002f02:	685a      	ldr	r2, [r3, #4]
 8002f04:	bb62      	cbnz	r2, 8002f60 <_malloc_r+0xdc>
 8002f06:	f8c8 7000 	str.w	r7, [r8]
 8002f0a:	e00f      	b.n	8002f2c <_malloc_r+0xa8>
 8002f0c:	6822      	ldr	r2, [r4, #0]
 8002f0e:	1b52      	subs	r2, r2, r5
 8002f10:	d420      	bmi.n	8002f54 <_malloc_r+0xd0>
 8002f12:	2a0b      	cmp	r2, #11
 8002f14:	d917      	bls.n	8002f46 <_malloc_r+0xc2>
 8002f16:	1961      	adds	r1, r4, r5
 8002f18:	42a3      	cmp	r3, r4
 8002f1a:	6025      	str	r5, [r4, #0]
 8002f1c:	bf18      	it	ne
 8002f1e:	6059      	strne	r1, [r3, #4]
 8002f20:	6863      	ldr	r3, [r4, #4]
 8002f22:	bf08      	it	eq
 8002f24:	f8c8 1000 	streq.w	r1, [r8]
 8002f28:	5162      	str	r2, [r4, r5]
 8002f2a:	604b      	str	r3, [r1, #4]
 8002f2c:	4630      	mov	r0, r6
 8002f2e:	f000 f8d7 	bl	80030e0 <__malloc_unlock>
 8002f32:	f104 000b 	add.w	r0, r4, #11
 8002f36:	1d23      	adds	r3, r4, #4
 8002f38:	f020 0007 	bic.w	r0, r0, #7
 8002f3c:	1ac2      	subs	r2, r0, r3
 8002f3e:	bf1c      	itt	ne
 8002f40:	1a1b      	subne	r3, r3, r0
 8002f42:	50a3      	strne	r3, [r4, r2]
 8002f44:	e7af      	b.n	8002ea6 <_malloc_r+0x22>
 8002f46:	6862      	ldr	r2, [r4, #4]
 8002f48:	42a3      	cmp	r3, r4
 8002f4a:	bf0c      	ite	eq
 8002f4c:	f8c8 2000 	streq.w	r2, [r8]
 8002f50:	605a      	strne	r2, [r3, #4]
 8002f52:	e7eb      	b.n	8002f2c <_malloc_r+0xa8>
 8002f54:	4623      	mov	r3, r4
 8002f56:	6864      	ldr	r4, [r4, #4]
 8002f58:	e7ae      	b.n	8002eb8 <_malloc_r+0x34>
 8002f5a:	463c      	mov	r4, r7
 8002f5c:	687f      	ldr	r7, [r7, #4]
 8002f5e:	e7b6      	b.n	8002ece <_malloc_r+0x4a>
 8002f60:	461a      	mov	r2, r3
 8002f62:	685b      	ldr	r3, [r3, #4]
 8002f64:	42a3      	cmp	r3, r4
 8002f66:	d1fb      	bne.n	8002f60 <_malloc_r+0xdc>
 8002f68:	2300      	movs	r3, #0
 8002f6a:	6053      	str	r3, [r2, #4]
 8002f6c:	e7de      	b.n	8002f2c <_malloc_r+0xa8>
 8002f6e:	230c      	movs	r3, #12
 8002f70:	6033      	str	r3, [r6, #0]
 8002f72:	4630      	mov	r0, r6
 8002f74:	f000 f8b4 	bl	80030e0 <__malloc_unlock>
 8002f78:	e794      	b.n	8002ea4 <_malloc_r+0x20>
 8002f7a:	6005      	str	r5, [r0, #0]
 8002f7c:	e7d6      	b.n	8002f2c <_malloc_r+0xa8>
 8002f7e:	bf00      	nop
 8002f80:	20000490 	.word	0x20000490

08002f84 <__sflush_r>:
 8002f84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8002f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f8a:	0716      	lsls	r6, r2, #28
 8002f8c:	4605      	mov	r5, r0
 8002f8e:	460c      	mov	r4, r1
 8002f90:	d454      	bmi.n	800303c <__sflush_r+0xb8>
 8002f92:	684b      	ldr	r3, [r1, #4]
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	dc02      	bgt.n	8002f9e <__sflush_r+0x1a>
 8002f98:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	dd48      	ble.n	8003030 <__sflush_r+0xac>
 8002f9e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8002fa0:	2e00      	cmp	r6, #0
 8002fa2:	d045      	beq.n	8003030 <__sflush_r+0xac>
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8002faa:	682f      	ldr	r7, [r5, #0]
 8002fac:	6a21      	ldr	r1, [r4, #32]
 8002fae:	602b      	str	r3, [r5, #0]
 8002fb0:	d030      	beq.n	8003014 <__sflush_r+0x90>
 8002fb2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8002fb4:	89a3      	ldrh	r3, [r4, #12]
 8002fb6:	0759      	lsls	r1, r3, #29
 8002fb8:	d505      	bpl.n	8002fc6 <__sflush_r+0x42>
 8002fba:	6863      	ldr	r3, [r4, #4]
 8002fbc:	1ad2      	subs	r2, r2, r3
 8002fbe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8002fc0:	b10b      	cbz	r3, 8002fc6 <__sflush_r+0x42>
 8002fc2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002fc4:	1ad2      	subs	r2, r2, r3
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8002fca:	6a21      	ldr	r1, [r4, #32]
 8002fcc:	4628      	mov	r0, r5
 8002fce:	47b0      	blx	r6
 8002fd0:	1c43      	adds	r3, r0, #1
 8002fd2:	89a3      	ldrh	r3, [r4, #12]
 8002fd4:	d106      	bne.n	8002fe4 <__sflush_r+0x60>
 8002fd6:	6829      	ldr	r1, [r5, #0]
 8002fd8:	291d      	cmp	r1, #29
 8002fda:	d82b      	bhi.n	8003034 <__sflush_r+0xb0>
 8002fdc:	4a28      	ldr	r2, [pc, #160]	@ (8003080 <__sflush_r+0xfc>)
 8002fde:	410a      	asrs	r2, r1
 8002fe0:	07d6      	lsls	r6, r2, #31
 8002fe2:	d427      	bmi.n	8003034 <__sflush_r+0xb0>
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	6062      	str	r2, [r4, #4]
 8002fe8:	04d9      	lsls	r1, r3, #19
 8002fea:	6922      	ldr	r2, [r4, #16]
 8002fec:	6022      	str	r2, [r4, #0]
 8002fee:	d504      	bpl.n	8002ffa <__sflush_r+0x76>
 8002ff0:	1c42      	adds	r2, r0, #1
 8002ff2:	d101      	bne.n	8002ff8 <__sflush_r+0x74>
 8002ff4:	682b      	ldr	r3, [r5, #0]
 8002ff6:	b903      	cbnz	r3, 8002ffa <__sflush_r+0x76>
 8002ff8:	6560      	str	r0, [r4, #84]	@ 0x54
 8002ffa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8002ffc:	602f      	str	r7, [r5, #0]
 8002ffe:	b1b9      	cbz	r1, 8003030 <__sflush_r+0xac>
 8003000:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003004:	4299      	cmp	r1, r3
 8003006:	d002      	beq.n	800300e <__sflush_r+0x8a>
 8003008:	4628      	mov	r0, r5
 800300a:	f000 fcc5 	bl	8003998 <_free_r>
 800300e:	2300      	movs	r3, #0
 8003010:	6363      	str	r3, [r4, #52]	@ 0x34
 8003012:	e00d      	b.n	8003030 <__sflush_r+0xac>
 8003014:	2301      	movs	r3, #1
 8003016:	4628      	mov	r0, r5
 8003018:	47b0      	blx	r6
 800301a:	4602      	mov	r2, r0
 800301c:	1c50      	adds	r0, r2, #1
 800301e:	d1c9      	bne.n	8002fb4 <__sflush_r+0x30>
 8003020:	682b      	ldr	r3, [r5, #0]
 8003022:	2b00      	cmp	r3, #0
 8003024:	d0c6      	beq.n	8002fb4 <__sflush_r+0x30>
 8003026:	2b1d      	cmp	r3, #29
 8003028:	d001      	beq.n	800302e <__sflush_r+0xaa>
 800302a:	2b16      	cmp	r3, #22
 800302c:	d11d      	bne.n	800306a <__sflush_r+0xe6>
 800302e:	602f      	str	r7, [r5, #0]
 8003030:	2000      	movs	r0, #0
 8003032:	e021      	b.n	8003078 <__sflush_r+0xf4>
 8003034:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003038:	b21b      	sxth	r3, r3
 800303a:	e01a      	b.n	8003072 <__sflush_r+0xee>
 800303c:	690f      	ldr	r7, [r1, #16]
 800303e:	2f00      	cmp	r7, #0
 8003040:	d0f6      	beq.n	8003030 <__sflush_r+0xac>
 8003042:	0793      	lsls	r3, r2, #30
 8003044:	680e      	ldr	r6, [r1, #0]
 8003046:	bf08      	it	eq
 8003048:	694b      	ldreq	r3, [r1, #20]
 800304a:	600f      	str	r7, [r1, #0]
 800304c:	bf18      	it	ne
 800304e:	2300      	movne	r3, #0
 8003050:	1bf6      	subs	r6, r6, r7
 8003052:	608b      	str	r3, [r1, #8]
 8003054:	2e00      	cmp	r6, #0
 8003056:	ddeb      	ble.n	8003030 <__sflush_r+0xac>
 8003058:	6a21      	ldr	r1, [r4, #32]
 800305a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800305e:	4633      	mov	r3, r6
 8003060:	463a      	mov	r2, r7
 8003062:	4628      	mov	r0, r5
 8003064:	47e0      	blx	ip
 8003066:	2800      	cmp	r0, #0
 8003068:	dc07      	bgt.n	800307a <__sflush_r+0xf6>
 800306a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800306e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003072:	81a3      	strh	r3, [r4, #12]
 8003074:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800307a:	4407      	add	r7, r0
 800307c:	1a36      	subs	r6, r6, r0
 800307e:	e7e9      	b.n	8003054 <__sflush_r+0xd0>
 8003080:	dfbffffe 	.word	0xdfbffffe

08003084 <_fflush_r>:
 8003084:	b538      	push	{r3, r4, r5, lr}
 8003086:	690b      	ldr	r3, [r1, #16]
 8003088:	4605      	mov	r5, r0
 800308a:	460c      	mov	r4, r1
 800308c:	b913      	cbnz	r3, 8003094 <_fflush_r+0x10>
 800308e:	2500      	movs	r5, #0
 8003090:	4628      	mov	r0, r5
 8003092:	bd38      	pop	{r3, r4, r5, pc}
 8003094:	b118      	cbz	r0, 800309e <_fflush_r+0x1a>
 8003096:	6a03      	ldr	r3, [r0, #32]
 8003098:	b90b      	cbnz	r3, 800309e <_fflush_r+0x1a>
 800309a:	f7fe ff01 	bl	8001ea0 <__sinit>
 800309e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80030a2:	2b00      	cmp	r3, #0
 80030a4:	d0f3      	beq.n	800308e <_fflush_r+0xa>
 80030a6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80030a8:	07d0      	lsls	r0, r2, #31
 80030aa:	d404      	bmi.n	80030b6 <_fflush_r+0x32>
 80030ac:	0599      	lsls	r1, r3, #22
 80030ae:	d402      	bmi.n	80030b6 <_fflush_r+0x32>
 80030b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80030b2:	f7ff f842 	bl	800213a <__retarget_lock_acquire_recursive>
 80030b6:	4628      	mov	r0, r5
 80030b8:	4621      	mov	r1, r4
 80030ba:	f7ff ff63 	bl	8002f84 <__sflush_r>
 80030be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80030c0:	07da      	lsls	r2, r3, #31
 80030c2:	4605      	mov	r5, r0
 80030c4:	d4e4      	bmi.n	8003090 <_fflush_r+0xc>
 80030c6:	89a3      	ldrh	r3, [r4, #12]
 80030c8:	059b      	lsls	r3, r3, #22
 80030ca:	d4e1      	bmi.n	8003090 <_fflush_r+0xc>
 80030cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80030ce:	f7ff f835 	bl	800213c <__retarget_lock_release_recursive>
 80030d2:	e7dd      	b.n	8003090 <_fflush_r+0xc>

080030d4 <__malloc_lock>:
 80030d4:	4801      	ldr	r0, [pc, #4]	@ (80030dc <__malloc_lock+0x8>)
 80030d6:	f7ff b830 	b.w	800213a <__retarget_lock_acquire_recursive>
 80030da:	bf00      	nop
 80030dc:	20000488 	.word	0x20000488

080030e0 <__malloc_unlock>:
 80030e0:	4801      	ldr	r0, [pc, #4]	@ (80030e8 <__malloc_unlock+0x8>)
 80030e2:	f7ff b82b 	b.w	800213c <__retarget_lock_release_recursive>
 80030e6:	bf00      	nop
 80030e8:	20000488 	.word	0x20000488

080030ec <_Balloc>:
 80030ec:	b570      	push	{r4, r5, r6, lr}
 80030ee:	69c6      	ldr	r6, [r0, #28]
 80030f0:	4604      	mov	r4, r0
 80030f2:	460d      	mov	r5, r1
 80030f4:	b976      	cbnz	r6, 8003114 <_Balloc+0x28>
 80030f6:	2010      	movs	r0, #16
 80030f8:	f7ff fe9a 	bl	8002e30 <malloc>
 80030fc:	4602      	mov	r2, r0
 80030fe:	61e0      	str	r0, [r4, #28]
 8003100:	b920      	cbnz	r0, 800310c <_Balloc+0x20>
 8003102:	4b18      	ldr	r3, [pc, #96]	@ (8003164 <_Balloc+0x78>)
 8003104:	4818      	ldr	r0, [pc, #96]	@ (8003168 <_Balloc+0x7c>)
 8003106:	216b      	movs	r1, #107	@ 0x6b
 8003108:	f7ff f822 	bl	8002150 <__assert_func>
 800310c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003110:	6006      	str	r6, [r0, #0]
 8003112:	60c6      	str	r6, [r0, #12]
 8003114:	69e6      	ldr	r6, [r4, #28]
 8003116:	68f3      	ldr	r3, [r6, #12]
 8003118:	b183      	cbz	r3, 800313c <_Balloc+0x50>
 800311a:	69e3      	ldr	r3, [r4, #28]
 800311c:	68db      	ldr	r3, [r3, #12]
 800311e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003122:	b9b8      	cbnz	r0, 8003154 <_Balloc+0x68>
 8003124:	2101      	movs	r1, #1
 8003126:	fa01 f605 	lsl.w	r6, r1, r5
 800312a:	1d72      	adds	r2, r6, #5
 800312c:	0092      	lsls	r2, r2, #2
 800312e:	4620      	mov	r0, r4
 8003130:	f000 fc1d 	bl	800396e <_calloc_r>
 8003134:	b160      	cbz	r0, 8003150 <_Balloc+0x64>
 8003136:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800313a:	e00e      	b.n	800315a <_Balloc+0x6e>
 800313c:	2221      	movs	r2, #33	@ 0x21
 800313e:	2104      	movs	r1, #4
 8003140:	4620      	mov	r0, r4
 8003142:	f000 fc14 	bl	800396e <_calloc_r>
 8003146:	69e3      	ldr	r3, [r4, #28]
 8003148:	60f0      	str	r0, [r6, #12]
 800314a:	68db      	ldr	r3, [r3, #12]
 800314c:	2b00      	cmp	r3, #0
 800314e:	d1e4      	bne.n	800311a <_Balloc+0x2e>
 8003150:	2000      	movs	r0, #0
 8003152:	bd70      	pop	{r4, r5, r6, pc}
 8003154:	6802      	ldr	r2, [r0, #0]
 8003156:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800315a:	2300      	movs	r3, #0
 800315c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003160:	e7f7      	b.n	8003152 <_Balloc+0x66>
 8003162:	bf00      	nop
 8003164:	08004034 	.word	0x08004034
 8003168:	08004258 	.word	0x08004258

0800316c <_Bfree>:
 800316c:	b570      	push	{r4, r5, r6, lr}
 800316e:	69c6      	ldr	r6, [r0, #28]
 8003170:	4605      	mov	r5, r0
 8003172:	460c      	mov	r4, r1
 8003174:	b976      	cbnz	r6, 8003194 <_Bfree+0x28>
 8003176:	2010      	movs	r0, #16
 8003178:	f7ff fe5a 	bl	8002e30 <malloc>
 800317c:	4602      	mov	r2, r0
 800317e:	61e8      	str	r0, [r5, #28]
 8003180:	b920      	cbnz	r0, 800318c <_Bfree+0x20>
 8003182:	4b09      	ldr	r3, [pc, #36]	@ (80031a8 <_Bfree+0x3c>)
 8003184:	4809      	ldr	r0, [pc, #36]	@ (80031ac <_Bfree+0x40>)
 8003186:	218f      	movs	r1, #143	@ 0x8f
 8003188:	f7fe ffe2 	bl	8002150 <__assert_func>
 800318c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003190:	6006      	str	r6, [r0, #0]
 8003192:	60c6      	str	r6, [r0, #12]
 8003194:	b13c      	cbz	r4, 80031a6 <_Bfree+0x3a>
 8003196:	69eb      	ldr	r3, [r5, #28]
 8003198:	6862      	ldr	r2, [r4, #4]
 800319a:	68db      	ldr	r3, [r3, #12]
 800319c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80031a0:	6021      	str	r1, [r4, #0]
 80031a2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80031a6:	bd70      	pop	{r4, r5, r6, pc}
 80031a8:	08004034 	.word	0x08004034
 80031ac:	08004258 	.word	0x08004258

080031b0 <__multadd>:
 80031b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031b4:	690d      	ldr	r5, [r1, #16]
 80031b6:	4607      	mov	r7, r0
 80031b8:	460c      	mov	r4, r1
 80031ba:	461e      	mov	r6, r3
 80031bc:	f101 0c14 	add.w	ip, r1, #20
 80031c0:	2000      	movs	r0, #0
 80031c2:	f8dc 3000 	ldr.w	r3, [ip]
 80031c6:	b299      	uxth	r1, r3
 80031c8:	fb02 6101 	mla	r1, r2, r1, r6
 80031cc:	0c1e      	lsrs	r6, r3, #16
 80031ce:	0c0b      	lsrs	r3, r1, #16
 80031d0:	fb02 3306 	mla	r3, r2, r6, r3
 80031d4:	b289      	uxth	r1, r1
 80031d6:	3001      	adds	r0, #1
 80031d8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80031dc:	4285      	cmp	r5, r0
 80031de:	f84c 1b04 	str.w	r1, [ip], #4
 80031e2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80031e6:	dcec      	bgt.n	80031c2 <__multadd+0x12>
 80031e8:	b30e      	cbz	r6, 800322e <__multadd+0x7e>
 80031ea:	68a3      	ldr	r3, [r4, #8]
 80031ec:	42ab      	cmp	r3, r5
 80031ee:	dc19      	bgt.n	8003224 <__multadd+0x74>
 80031f0:	6861      	ldr	r1, [r4, #4]
 80031f2:	4638      	mov	r0, r7
 80031f4:	3101      	adds	r1, #1
 80031f6:	f7ff ff79 	bl	80030ec <_Balloc>
 80031fa:	4680      	mov	r8, r0
 80031fc:	b928      	cbnz	r0, 800320a <__multadd+0x5a>
 80031fe:	4602      	mov	r2, r0
 8003200:	4b0c      	ldr	r3, [pc, #48]	@ (8003234 <__multadd+0x84>)
 8003202:	480d      	ldr	r0, [pc, #52]	@ (8003238 <__multadd+0x88>)
 8003204:	21ba      	movs	r1, #186	@ 0xba
 8003206:	f7fe ffa3 	bl	8002150 <__assert_func>
 800320a:	6922      	ldr	r2, [r4, #16]
 800320c:	3202      	adds	r2, #2
 800320e:	f104 010c 	add.w	r1, r4, #12
 8003212:	0092      	lsls	r2, r2, #2
 8003214:	300c      	adds	r0, #12
 8003216:	f000 fb95 	bl	8003944 <memcpy>
 800321a:	4621      	mov	r1, r4
 800321c:	4638      	mov	r0, r7
 800321e:	f7ff ffa5 	bl	800316c <_Bfree>
 8003222:	4644      	mov	r4, r8
 8003224:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003228:	3501      	adds	r5, #1
 800322a:	615e      	str	r6, [r3, #20]
 800322c:	6125      	str	r5, [r4, #16]
 800322e:	4620      	mov	r0, r4
 8003230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003234:	08004247 	.word	0x08004247
 8003238:	08004258 	.word	0x08004258

0800323c <__hi0bits>:
 800323c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003240:	4603      	mov	r3, r0
 8003242:	bf36      	itet	cc
 8003244:	0403      	lslcc	r3, r0, #16
 8003246:	2000      	movcs	r0, #0
 8003248:	2010      	movcc	r0, #16
 800324a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800324e:	bf3c      	itt	cc
 8003250:	021b      	lslcc	r3, r3, #8
 8003252:	3008      	addcc	r0, #8
 8003254:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003258:	bf3c      	itt	cc
 800325a:	011b      	lslcc	r3, r3, #4
 800325c:	3004      	addcc	r0, #4
 800325e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003262:	bf3c      	itt	cc
 8003264:	009b      	lslcc	r3, r3, #2
 8003266:	3002      	addcc	r0, #2
 8003268:	2b00      	cmp	r3, #0
 800326a:	db05      	blt.n	8003278 <__hi0bits+0x3c>
 800326c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003270:	f100 0001 	add.w	r0, r0, #1
 8003274:	bf08      	it	eq
 8003276:	2020      	moveq	r0, #32
 8003278:	4770      	bx	lr

0800327a <__lo0bits>:
 800327a:	6803      	ldr	r3, [r0, #0]
 800327c:	4602      	mov	r2, r0
 800327e:	f013 0007 	ands.w	r0, r3, #7
 8003282:	d00b      	beq.n	800329c <__lo0bits+0x22>
 8003284:	07d9      	lsls	r1, r3, #31
 8003286:	d421      	bmi.n	80032cc <__lo0bits+0x52>
 8003288:	0798      	lsls	r0, r3, #30
 800328a:	bf49      	itett	mi
 800328c:	085b      	lsrmi	r3, r3, #1
 800328e:	089b      	lsrpl	r3, r3, #2
 8003290:	2001      	movmi	r0, #1
 8003292:	6013      	strmi	r3, [r2, #0]
 8003294:	bf5c      	itt	pl
 8003296:	6013      	strpl	r3, [r2, #0]
 8003298:	2002      	movpl	r0, #2
 800329a:	4770      	bx	lr
 800329c:	b299      	uxth	r1, r3
 800329e:	b909      	cbnz	r1, 80032a4 <__lo0bits+0x2a>
 80032a0:	0c1b      	lsrs	r3, r3, #16
 80032a2:	2010      	movs	r0, #16
 80032a4:	b2d9      	uxtb	r1, r3
 80032a6:	b909      	cbnz	r1, 80032ac <__lo0bits+0x32>
 80032a8:	3008      	adds	r0, #8
 80032aa:	0a1b      	lsrs	r3, r3, #8
 80032ac:	0719      	lsls	r1, r3, #28
 80032ae:	bf04      	itt	eq
 80032b0:	091b      	lsreq	r3, r3, #4
 80032b2:	3004      	addeq	r0, #4
 80032b4:	0799      	lsls	r1, r3, #30
 80032b6:	bf04      	itt	eq
 80032b8:	089b      	lsreq	r3, r3, #2
 80032ba:	3002      	addeq	r0, #2
 80032bc:	07d9      	lsls	r1, r3, #31
 80032be:	d403      	bmi.n	80032c8 <__lo0bits+0x4e>
 80032c0:	085b      	lsrs	r3, r3, #1
 80032c2:	f100 0001 	add.w	r0, r0, #1
 80032c6:	d003      	beq.n	80032d0 <__lo0bits+0x56>
 80032c8:	6013      	str	r3, [r2, #0]
 80032ca:	4770      	bx	lr
 80032cc:	2000      	movs	r0, #0
 80032ce:	4770      	bx	lr
 80032d0:	2020      	movs	r0, #32
 80032d2:	4770      	bx	lr

080032d4 <__i2b>:
 80032d4:	b510      	push	{r4, lr}
 80032d6:	460c      	mov	r4, r1
 80032d8:	2101      	movs	r1, #1
 80032da:	f7ff ff07 	bl	80030ec <_Balloc>
 80032de:	4602      	mov	r2, r0
 80032e0:	b928      	cbnz	r0, 80032ee <__i2b+0x1a>
 80032e2:	4b05      	ldr	r3, [pc, #20]	@ (80032f8 <__i2b+0x24>)
 80032e4:	4805      	ldr	r0, [pc, #20]	@ (80032fc <__i2b+0x28>)
 80032e6:	f240 1145 	movw	r1, #325	@ 0x145
 80032ea:	f7fe ff31 	bl	8002150 <__assert_func>
 80032ee:	2301      	movs	r3, #1
 80032f0:	6144      	str	r4, [r0, #20]
 80032f2:	6103      	str	r3, [r0, #16]
 80032f4:	bd10      	pop	{r4, pc}
 80032f6:	bf00      	nop
 80032f8:	08004247 	.word	0x08004247
 80032fc:	08004258 	.word	0x08004258

08003300 <__multiply>:
 8003300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003304:	4614      	mov	r4, r2
 8003306:	690a      	ldr	r2, [r1, #16]
 8003308:	6923      	ldr	r3, [r4, #16]
 800330a:	429a      	cmp	r2, r3
 800330c:	bfa8      	it	ge
 800330e:	4623      	movge	r3, r4
 8003310:	460f      	mov	r7, r1
 8003312:	bfa4      	itt	ge
 8003314:	460c      	movge	r4, r1
 8003316:	461f      	movge	r7, r3
 8003318:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800331c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003320:	68a3      	ldr	r3, [r4, #8]
 8003322:	6861      	ldr	r1, [r4, #4]
 8003324:	eb0a 0609 	add.w	r6, sl, r9
 8003328:	42b3      	cmp	r3, r6
 800332a:	b085      	sub	sp, #20
 800332c:	bfb8      	it	lt
 800332e:	3101      	addlt	r1, #1
 8003330:	f7ff fedc 	bl	80030ec <_Balloc>
 8003334:	b930      	cbnz	r0, 8003344 <__multiply+0x44>
 8003336:	4602      	mov	r2, r0
 8003338:	4b44      	ldr	r3, [pc, #272]	@ (800344c <__multiply+0x14c>)
 800333a:	4845      	ldr	r0, [pc, #276]	@ (8003450 <__multiply+0x150>)
 800333c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003340:	f7fe ff06 	bl	8002150 <__assert_func>
 8003344:	f100 0514 	add.w	r5, r0, #20
 8003348:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800334c:	462b      	mov	r3, r5
 800334e:	2200      	movs	r2, #0
 8003350:	4543      	cmp	r3, r8
 8003352:	d321      	bcc.n	8003398 <__multiply+0x98>
 8003354:	f107 0114 	add.w	r1, r7, #20
 8003358:	f104 0214 	add.w	r2, r4, #20
 800335c:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003360:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003364:	9302      	str	r3, [sp, #8]
 8003366:	1b13      	subs	r3, r2, r4
 8003368:	3b15      	subs	r3, #21
 800336a:	f023 0303 	bic.w	r3, r3, #3
 800336e:	3304      	adds	r3, #4
 8003370:	f104 0715 	add.w	r7, r4, #21
 8003374:	42ba      	cmp	r2, r7
 8003376:	bf38      	it	cc
 8003378:	2304      	movcc	r3, #4
 800337a:	9301      	str	r3, [sp, #4]
 800337c:	9b02      	ldr	r3, [sp, #8]
 800337e:	9103      	str	r1, [sp, #12]
 8003380:	428b      	cmp	r3, r1
 8003382:	d80c      	bhi.n	800339e <__multiply+0x9e>
 8003384:	2e00      	cmp	r6, #0
 8003386:	dd03      	ble.n	8003390 <__multiply+0x90>
 8003388:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800338c:	2b00      	cmp	r3, #0
 800338e:	d05a      	beq.n	8003446 <__multiply+0x146>
 8003390:	6106      	str	r6, [r0, #16]
 8003392:	b005      	add	sp, #20
 8003394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003398:	f843 2b04 	str.w	r2, [r3], #4
 800339c:	e7d8      	b.n	8003350 <__multiply+0x50>
 800339e:	f8b1 a000 	ldrh.w	sl, [r1]
 80033a2:	f1ba 0f00 	cmp.w	sl, #0
 80033a6:	d023      	beq.n	80033f0 <__multiply+0xf0>
 80033a8:	f104 0e14 	add.w	lr, r4, #20
 80033ac:	46a9      	mov	r9, r5
 80033ae:	f04f 0c00 	mov.w	ip, #0
 80033b2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80033b6:	f8d9 3000 	ldr.w	r3, [r9]
 80033ba:	fa1f fb87 	uxth.w	fp, r7
 80033be:	b29b      	uxth	r3, r3
 80033c0:	fb0a 330b 	mla	r3, sl, fp, r3
 80033c4:	4463      	add	r3, ip
 80033c6:	f8d9 c000 	ldr.w	ip, [r9]
 80033ca:	0c3f      	lsrs	r7, r7, #16
 80033cc:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80033d0:	fb0a c707 	mla	r7, sl, r7, ip
 80033d4:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80033d8:	b29b      	uxth	r3, r3
 80033da:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80033de:	4572      	cmp	r2, lr
 80033e0:	f849 3b04 	str.w	r3, [r9], #4
 80033e4:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80033e8:	d8e3      	bhi.n	80033b2 <__multiply+0xb2>
 80033ea:	9b01      	ldr	r3, [sp, #4]
 80033ec:	f845 c003 	str.w	ip, [r5, r3]
 80033f0:	9b03      	ldr	r3, [sp, #12]
 80033f2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80033f6:	3104      	adds	r1, #4
 80033f8:	f1b9 0f00 	cmp.w	r9, #0
 80033fc:	d021      	beq.n	8003442 <__multiply+0x142>
 80033fe:	682b      	ldr	r3, [r5, #0]
 8003400:	f104 0c14 	add.w	ip, r4, #20
 8003404:	46ae      	mov	lr, r5
 8003406:	f04f 0a00 	mov.w	sl, #0
 800340a:	f8bc b000 	ldrh.w	fp, [ip]
 800340e:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003412:	fb09 770b 	mla	r7, r9, fp, r7
 8003416:	4457      	add	r7, sl
 8003418:	b29b      	uxth	r3, r3
 800341a:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800341e:	f84e 3b04 	str.w	r3, [lr], #4
 8003422:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003426:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800342a:	f8be 3000 	ldrh.w	r3, [lr]
 800342e:	fb09 330a 	mla	r3, r9, sl, r3
 8003432:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003436:	4562      	cmp	r2, ip
 8003438:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800343c:	d8e5      	bhi.n	800340a <__multiply+0x10a>
 800343e:	9f01      	ldr	r7, [sp, #4]
 8003440:	51eb      	str	r3, [r5, r7]
 8003442:	3504      	adds	r5, #4
 8003444:	e79a      	b.n	800337c <__multiply+0x7c>
 8003446:	3e01      	subs	r6, #1
 8003448:	e79c      	b.n	8003384 <__multiply+0x84>
 800344a:	bf00      	nop
 800344c:	08004247 	.word	0x08004247
 8003450:	08004258 	.word	0x08004258

08003454 <__pow5mult>:
 8003454:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003458:	4615      	mov	r5, r2
 800345a:	f012 0203 	ands.w	r2, r2, #3
 800345e:	4607      	mov	r7, r0
 8003460:	460e      	mov	r6, r1
 8003462:	d007      	beq.n	8003474 <__pow5mult+0x20>
 8003464:	4c25      	ldr	r4, [pc, #148]	@ (80034fc <__pow5mult+0xa8>)
 8003466:	3a01      	subs	r2, #1
 8003468:	2300      	movs	r3, #0
 800346a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800346e:	f7ff fe9f 	bl	80031b0 <__multadd>
 8003472:	4606      	mov	r6, r0
 8003474:	10ad      	asrs	r5, r5, #2
 8003476:	d03d      	beq.n	80034f4 <__pow5mult+0xa0>
 8003478:	69fc      	ldr	r4, [r7, #28]
 800347a:	b97c      	cbnz	r4, 800349c <__pow5mult+0x48>
 800347c:	2010      	movs	r0, #16
 800347e:	f7ff fcd7 	bl	8002e30 <malloc>
 8003482:	4602      	mov	r2, r0
 8003484:	61f8      	str	r0, [r7, #28]
 8003486:	b928      	cbnz	r0, 8003494 <__pow5mult+0x40>
 8003488:	4b1d      	ldr	r3, [pc, #116]	@ (8003500 <__pow5mult+0xac>)
 800348a:	481e      	ldr	r0, [pc, #120]	@ (8003504 <__pow5mult+0xb0>)
 800348c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003490:	f7fe fe5e 	bl	8002150 <__assert_func>
 8003494:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003498:	6004      	str	r4, [r0, #0]
 800349a:	60c4      	str	r4, [r0, #12]
 800349c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80034a0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80034a4:	b94c      	cbnz	r4, 80034ba <__pow5mult+0x66>
 80034a6:	f240 2171 	movw	r1, #625	@ 0x271
 80034aa:	4638      	mov	r0, r7
 80034ac:	f7ff ff12 	bl	80032d4 <__i2b>
 80034b0:	2300      	movs	r3, #0
 80034b2:	f8c8 0008 	str.w	r0, [r8, #8]
 80034b6:	4604      	mov	r4, r0
 80034b8:	6003      	str	r3, [r0, #0]
 80034ba:	f04f 0900 	mov.w	r9, #0
 80034be:	07eb      	lsls	r3, r5, #31
 80034c0:	d50a      	bpl.n	80034d8 <__pow5mult+0x84>
 80034c2:	4631      	mov	r1, r6
 80034c4:	4622      	mov	r2, r4
 80034c6:	4638      	mov	r0, r7
 80034c8:	f7ff ff1a 	bl	8003300 <__multiply>
 80034cc:	4631      	mov	r1, r6
 80034ce:	4680      	mov	r8, r0
 80034d0:	4638      	mov	r0, r7
 80034d2:	f7ff fe4b 	bl	800316c <_Bfree>
 80034d6:	4646      	mov	r6, r8
 80034d8:	106d      	asrs	r5, r5, #1
 80034da:	d00b      	beq.n	80034f4 <__pow5mult+0xa0>
 80034dc:	6820      	ldr	r0, [r4, #0]
 80034de:	b938      	cbnz	r0, 80034f0 <__pow5mult+0x9c>
 80034e0:	4622      	mov	r2, r4
 80034e2:	4621      	mov	r1, r4
 80034e4:	4638      	mov	r0, r7
 80034e6:	f7ff ff0b 	bl	8003300 <__multiply>
 80034ea:	6020      	str	r0, [r4, #0]
 80034ec:	f8c0 9000 	str.w	r9, [r0]
 80034f0:	4604      	mov	r4, r0
 80034f2:	e7e4      	b.n	80034be <__pow5mult+0x6a>
 80034f4:	4630      	mov	r0, r6
 80034f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80034fa:	bf00      	nop
 80034fc:	080042b4 	.word	0x080042b4
 8003500:	08004034 	.word	0x08004034
 8003504:	08004258 	.word	0x08004258

08003508 <__lshift>:
 8003508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800350c:	460c      	mov	r4, r1
 800350e:	6849      	ldr	r1, [r1, #4]
 8003510:	6923      	ldr	r3, [r4, #16]
 8003512:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003516:	68a3      	ldr	r3, [r4, #8]
 8003518:	4607      	mov	r7, r0
 800351a:	4691      	mov	r9, r2
 800351c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003520:	f108 0601 	add.w	r6, r8, #1
 8003524:	42b3      	cmp	r3, r6
 8003526:	db0b      	blt.n	8003540 <__lshift+0x38>
 8003528:	4638      	mov	r0, r7
 800352a:	f7ff fddf 	bl	80030ec <_Balloc>
 800352e:	4605      	mov	r5, r0
 8003530:	b948      	cbnz	r0, 8003546 <__lshift+0x3e>
 8003532:	4602      	mov	r2, r0
 8003534:	4b28      	ldr	r3, [pc, #160]	@ (80035d8 <__lshift+0xd0>)
 8003536:	4829      	ldr	r0, [pc, #164]	@ (80035dc <__lshift+0xd4>)
 8003538:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800353c:	f7fe fe08 	bl	8002150 <__assert_func>
 8003540:	3101      	adds	r1, #1
 8003542:	005b      	lsls	r3, r3, #1
 8003544:	e7ee      	b.n	8003524 <__lshift+0x1c>
 8003546:	2300      	movs	r3, #0
 8003548:	f100 0114 	add.w	r1, r0, #20
 800354c:	f100 0210 	add.w	r2, r0, #16
 8003550:	4618      	mov	r0, r3
 8003552:	4553      	cmp	r3, sl
 8003554:	db33      	blt.n	80035be <__lshift+0xb6>
 8003556:	6920      	ldr	r0, [r4, #16]
 8003558:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800355c:	f104 0314 	add.w	r3, r4, #20
 8003560:	f019 091f 	ands.w	r9, r9, #31
 8003564:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003568:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800356c:	d02b      	beq.n	80035c6 <__lshift+0xbe>
 800356e:	f1c9 0e20 	rsb	lr, r9, #32
 8003572:	468a      	mov	sl, r1
 8003574:	2200      	movs	r2, #0
 8003576:	6818      	ldr	r0, [r3, #0]
 8003578:	fa00 f009 	lsl.w	r0, r0, r9
 800357c:	4310      	orrs	r0, r2
 800357e:	f84a 0b04 	str.w	r0, [sl], #4
 8003582:	f853 2b04 	ldr.w	r2, [r3], #4
 8003586:	459c      	cmp	ip, r3
 8003588:	fa22 f20e 	lsr.w	r2, r2, lr
 800358c:	d8f3      	bhi.n	8003576 <__lshift+0x6e>
 800358e:	ebac 0304 	sub.w	r3, ip, r4
 8003592:	3b15      	subs	r3, #21
 8003594:	f023 0303 	bic.w	r3, r3, #3
 8003598:	3304      	adds	r3, #4
 800359a:	f104 0015 	add.w	r0, r4, #21
 800359e:	4584      	cmp	ip, r0
 80035a0:	bf38      	it	cc
 80035a2:	2304      	movcc	r3, #4
 80035a4:	50ca      	str	r2, [r1, r3]
 80035a6:	b10a      	cbz	r2, 80035ac <__lshift+0xa4>
 80035a8:	f108 0602 	add.w	r6, r8, #2
 80035ac:	3e01      	subs	r6, #1
 80035ae:	4638      	mov	r0, r7
 80035b0:	612e      	str	r6, [r5, #16]
 80035b2:	4621      	mov	r1, r4
 80035b4:	f7ff fdda 	bl	800316c <_Bfree>
 80035b8:	4628      	mov	r0, r5
 80035ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035be:	f842 0f04 	str.w	r0, [r2, #4]!
 80035c2:	3301      	adds	r3, #1
 80035c4:	e7c5      	b.n	8003552 <__lshift+0x4a>
 80035c6:	3904      	subs	r1, #4
 80035c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80035cc:	f841 2f04 	str.w	r2, [r1, #4]!
 80035d0:	459c      	cmp	ip, r3
 80035d2:	d8f9      	bhi.n	80035c8 <__lshift+0xc0>
 80035d4:	e7ea      	b.n	80035ac <__lshift+0xa4>
 80035d6:	bf00      	nop
 80035d8:	08004247 	.word	0x08004247
 80035dc:	08004258 	.word	0x08004258

080035e0 <__mcmp>:
 80035e0:	690a      	ldr	r2, [r1, #16]
 80035e2:	4603      	mov	r3, r0
 80035e4:	6900      	ldr	r0, [r0, #16]
 80035e6:	1a80      	subs	r0, r0, r2
 80035e8:	b530      	push	{r4, r5, lr}
 80035ea:	d10e      	bne.n	800360a <__mcmp+0x2a>
 80035ec:	3314      	adds	r3, #20
 80035ee:	3114      	adds	r1, #20
 80035f0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80035f4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80035f8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80035fc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003600:	4295      	cmp	r5, r2
 8003602:	d003      	beq.n	800360c <__mcmp+0x2c>
 8003604:	d205      	bcs.n	8003612 <__mcmp+0x32>
 8003606:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800360a:	bd30      	pop	{r4, r5, pc}
 800360c:	42a3      	cmp	r3, r4
 800360e:	d3f3      	bcc.n	80035f8 <__mcmp+0x18>
 8003610:	e7fb      	b.n	800360a <__mcmp+0x2a>
 8003612:	2001      	movs	r0, #1
 8003614:	e7f9      	b.n	800360a <__mcmp+0x2a>
	...

08003618 <__mdiff>:
 8003618:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800361c:	4689      	mov	r9, r1
 800361e:	4606      	mov	r6, r0
 8003620:	4611      	mov	r1, r2
 8003622:	4648      	mov	r0, r9
 8003624:	4614      	mov	r4, r2
 8003626:	f7ff ffdb 	bl	80035e0 <__mcmp>
 800362a:	1e05      	subs	r5, r0, #0
 800362c:	d112      	bne.n	8003654 <__mdiff+0x3c>
 800362e:	4629      	mov	r1, r5
 8003630:	4630      	mov	r0, r6
 8003632:	f7ff fd5b 	bl	80030ec <_Balloc>
 8003636:	4602      	mov	r2, r0
 8003638:	b928      	cbnz	r0, 8003646 <__mdiff+0x2e>
 800363a:	4b3e      	ldr	r3, [pc, #248]	@ (8003734 <__mdiff+0x11c>)
 800363c:	f240 2137 	movw	r1, #567	@ 0x237
 8003640:	483d      	ldr	r0, [pc, #244]	@ (8003738 <__mdiff+0x120>)
 8003642:	f7fe fd85 	bl	8002150 <__assert_func>
 8003646:	2301      	movs	r3, #1
 8003648:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800364c:	4610      	mov	r0, r2
 800364e:	b003      	add	sp, #12
 8003650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003654:	bfbc      	itt	lt
 8003656:	464b      	movlt	r3, r9
 8003658:	46a1      	movlt	r9, r4
 800365a:	4630      	mov	r0, r6
 800365c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003660:	bfba      	itte	lt
 8003662:	461c      	movlt	r4, r3
 8003664:	2501      	movlt	r5, #1
 8003666:	2500      	movge	r5, #0
 8003668:	f7ff fd40 	bl	80030ec <_Balloc>
 800366c:	4602      	mov	r2, r0
 800366e:	b918      	cbnz	r0, 8003678 <__mdiff+0x60>
 8003670:	4b30      	ldr	r3, [pc, #192]	@ (8003734 <__mdiff+0x11c>)
 8003672:	f240 2145 	movw	r1, #581	@ 0x245
 8003676:	e7e3      	b.n	8003640 <__mdiff+0x28>
 8003678:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800367c:	6926      	ldr	r6, [r4, #16]
 800367e:	60c5      	str	r5, [r0, #12]
 8003680:	f109 0310 	add.w	r3, r9, #16
 8003684:	f109 0514 	add.w	r5, r9, #20
 8003688:	f104 0e14 	add.w	lr, r4, #20
 800368c:	f100 0b14 	add.w	fp, r0, #20
 8003690:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003694:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003698:	9301      	str	r3, [sp, #4]
 800369a:	46d9      	mov	r9, fp
 800369c:	f04f 0c00 	mov.w	ip, #0
 80036a0:	9b01      	ldr	r3, [sp, #4]
 80036a2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80036a6:	f853 af04 	ldr.w	sl, [r3, #4]!
 80036aa:	9301      	str	r3, [sp, #4]
 80036ac:	b281      	uxth	r1, r0
 80036ae:	fa1f f38a 	uxth.w	r3, sl
 80036b2:	1a5b      	subs	r3, r3, r1
 80036b4:	0c00      	lsrs	r0, r0, #16
 80036b6:	4463      	add	r3, ip
 80036b8:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80036bc:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80036c0:	b29b      	uxth	r3, r3
 80036c2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80036c6:	4576      	cmp	r6, lr
 80036c8:	f849 3b04 	str.w	r3, [r9], #4
 80036cc:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80036d0:	d8e6      	bhi.n	80036a0 <__mdiff+0x88>
 80036d2:	1b33      	subs	r3, r6, r4
 80036d4:	3b15      	subs	r3, #21
 80036d6:	f023 0303 	bic.w	r3, r3, #3
 80036da:	3415      	adds	r4, #21
 80036dc:	3304      	adds	r3, #4
 80036de:	42a6      	cmp	r6, r4
 80036e0:	bf38      	it	cc
 80036e2:	2304      	movcc	r3, #4
 80036e4:	441d      	add	r5, r3
 80036e6:	445b      	add	r3, fp
 80036e8:	461e      	mov	r6, r3
 80036ea:	462c      	mov	r4, r5
 80036ec:	4544      	cmp	r4, r8
 80036ee:	d30e      	bcc.n	800370e <__mdiff+0xf6>
 80036f0:	f108 0103 	add.w	r1, r8, #3
 80036f4:	1b49      	subs	r1, r1, r5
 80036f6:	f021 0103 	bic.w	r1, r1, #3
 80036fa:	3d03      	subs	r5, #3
 80036fc:	45a8      	cmp	r8, r5
 80036fe:	bf38      	it	cc
 8003700:	2100      	movcc	r1, #0
 8003702:	440b      	add	r3, r1
 8003704:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003708:	b191      	cbz	r1, 8003730 <__mdiff+0x118>
 800370a:	6117      	str	r7, [r2, #16]
 800370c:	e79e      	b.n	800364c <__mdiff+0x34>
 800370e:	f854 1b04 	ldr.w	r1, [r4], #4
 8003712:	46e6      	mov	lr, ip
 8003714:	0c08      	lsrs	r0, r1, #16
 8003716:	fa1c fc81 	uxtah	ip, ip, r1
 800371a:	4471      	add	r1, lr
 800371c:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003720:	b289      	uxth	r1, r1
 8003722:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003726:	f846 1b04 	str.w	r1, [r6], #4
 800372a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800372e:	e7dd      	b.n	80036ec <__mdiff+0xd4>
 8003730:	3f01      	subs	r7, #1
 8003732:	e7e7      	b.n	8003704 <__mdiff+0xec>
 8003734:	08004247 	.word	0x08004247
 8003738:	08004258 	.word	0x08004258

0800373c <__d2b>:
 800373c:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003740:	2101      	movs	r1, #1
 8003742:	9e08      	ldr	r6, [sp, #32]
 8003744:	4690      	mov	r8, r2
 8003746:	4699      	mov	r9, r3
 8003748:	f7ff fcd0 	bl	80030ec <_Balloc>
 800374c:	4604      	mov	r4, r0
 800374e:	b930      	cbnz	r0, 800375e <__d2b+0x22>
 8003750:	4602      	mov	r2, r0
 8003752:	4b24      	ldr	r3, [pc, #144]	@ (80037e4 <__d2b+0xa8>)
 8003754:	4824      	ldr	r0, [pc, #144]	@ (80037e8 <__d2b+0xac>)
 8003756:	f240 310f 	movw	r1, #783	@ 0x30f
 800375a:	f7fe fcf9 	bl	8002150 <__assert_func>
 800375e:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003762:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003766:	b10d      	cbz	r5, 800376c <__d2b+0x30>
 8003768:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800376c:	9301      	str	r3, [sp, #4]
 800376e:	f1b8 0300 	subs.w	r3, r8, #0
 8003772:	d024      	beq.n	80037be <__d2b+0x82>
 8003774:	4668      	mov	r0, sp
 8003776:	9300      	str	r3, [sp, #0]
 8003778:	f7ff fd7f 	bl	800327a <__lo0bits>
 800377c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003780:	b1d8      	cbz	r0, 80037ba <__d2b+0x7e>
 8003782:	f1c0 0320 	rsb	r3, r0, #32
 8003786:	fa02 f303 	lsl.w	r3, r2, r3
 800378a:	430b      	orrs	r3, r1
 800378c:	40c2      	lsrs	r2, r0
 800378e:	6163      	str	r3, [r4, #20]
 8003790:	9201      	str	r2, [sp, #4]
 8003792:	9b01      	ldr	r3, [sp, #4]
 8003794:	61a3      	str	r3, [r4, #24]
 8003796:	2b00      	cmp	r3, #0
 8003798:	bf0c      	ite	eq
 800379a:	2201      	moveq	r2, #1
 800379c:	2202      	movne	r2, #2
 800379e:	6122      	str	r2, [r4, #16]
 80037a0:	b1ad      	cbz	r5, 80037ce <__d2b+0x92>
 80037a2:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80037a6:	4405      	add	r5, r0
 80037a8:	6035      	str	r5, [r6, #0]
 80037aa:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80037ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037b0:	6018      	str	r0, [r3, #0]
 80037b2:	4620      	mov	r0, r4
 80037b4:	b002      	add	sp, #8
 80037b6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80037ba:	6161      	str	r1, [r4, #20]
 80037bc:	e7e9      	b.n	8003792 <__d2b+0x56>
 80037be:	a801      	add	r0, sp, #4
 80037c0:	f7ff fd5b 	bl	800327a <__lo0bits>
 80037c4:	9b01      	ldr	r3, [sp, #4]
 80037c6:	6163      	str	r3, [r4, #20]
 80037c8:	3020      	adds	r0, #32
 80037ca:	2201      	movs	r2, #1
 80037cc:	e7e7      	b.n	800379e <__d2b+0x62>
 80037ce:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80037d2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80037d6:	6030      	str	r0, [r6, #0]
 80037d8:	6918      	ldr	r0, [r3, #16]
 80037da:	f7ff fd2f 	bl	800323c <__hi0bits>
 80037de:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80037e2:	e7e4      	b.n	80037ae <__d2b+0x72>
 80037e4:	08004247 	.word	0x08004247
 80037e8:	08004258 	.word	0x08004258

080037ec <__sread>:
 80037ec:	b510      	push	{r4, lr}
 80037ee:	460c      	mov	r4, r1
 80037f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80037f4:	f000 f872 	bl	80038dc <_read_r>
 80037f8:	2800      	cmp	r0, #0
 80037fa:	bfab      	itete	ge
 80037fc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80037fe:	89a3      	ldrhlt	r3, [r4, #12]
 8003800:	181b      	addge	r3, r3, r0
 8003802:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8003806:	bfac      	ite	ge
 8003808:	6563      	strge	r3, [r4, #84]	@ 0x54
 800380a:	81a3      	strhlt	r3, [r4, #12]
 800380c:	bd10      	pop	{r4, pc}

0800380e <__swrite>:
 800380e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003812:	461f      	mov	r7, r3
 8003814:	898b      	ldrh	r3, [r1, #12]
 8003816:	05db      	lsls	r3, r3, #23
 8003818:	4605      	mov	r5, r0
 800381a:	460c      	mov	r4, r1
 800381c:	4616      	mov	r6, r2
 800381e:	d505      	bpl.n	800382c <__swrite+0x1e>
 8003820:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003824:	2302      	movs	r3, #2
 8003826:	2200      	movs	r2, #0
 8003828:	f000 f846 	bl	80038b8 <_lseek_r>
 800382c:	89a3      	ldrh	r3, [r4, #12]
 800382e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003832:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003836:	81a3      	strh	r3, [r4, #12]
 8003838:	4632      	mov	r2, r6
 800383a:	463b      	mov	r3, r7
 800383c:	4628      	mov	r0, r5
 800383e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003842:	f000 b86d 	b.w	8003920 <_write_r>

08003846 <__sseek>:
 8003846:	b510      	push	{r4, lr}
 8003848:	460c      	mov	r4, r1
 800384a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800384e:	f000 f833 	bl	80038b8 <_lseek_r>
 8003852:	1c43      	adds	r3, r0, #1
 8003854:	89a3      	ldrh	r3, [r4, #12]
 8003856:	bf15      	itete	ne
 8003858:	6560      	strne	r0, [r4, #84]	@ 0x54
 800385a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800385e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003862:	81a3      	strheq	r3, [r4, #12]
 8003864:	bf18      	it	ne
 8003866:	81a3      	strhne	r3, [r4, #12]
 8003868:	bd10      	pop	{r4, pc}

0800386a <__sclose>:
 800386a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800386e:	f000 b813 	b.w	8003898 <_close_r>
	...

08003874 <fiprintf>:
 8003874:	b40e      	push	{r1, r2, r3}
 8003876:	b503      	push	{r0, r1, lr}
 8003878:	4601      	mov	r1, r0
 800387a:	ab03      	add	r3, sp, #12
 800387c:	4805      	ldr	r0, [pc, #20]	@ (8003894 <fiprintf+0x20>)
 800387e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003882:	6800      	ldr	r0, [r0, #0]
 8003884:	9301      	str	r3, [sp, #4]
 8003886:	f000 f8f9 	bl	8003a7c <_vfiprintf_r>
 800388a:	b002      	add	sp, #8
 800388c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003890:	b003      	add	sp, #12
 8003892:	4770      	bx	lr
 8003894:	20000038 	.word	0x20000038

08003898 <_close_r>:
 8003898:	b538      	push	{r3, r4, r5, lr}
 800389a:	4d06      	ldr	r5, [pc, #24]	@ (80038b4 <_close_r+0x1c>)
 800389c:	2300      	movs	r3, #0
 800389e:	4604      	mov	r4, r0
 80038a0:	4608      	mov	r0, r1
 80038a2:	602b      	str	r3, [r5, #0]
 80038a4:	f7fd fd87 	bl	80013b6 <_close>
 80038a8:	1c43      	adds	r3, r0, #1
 80038aa:	d102      	bne.n	80038b2 <_close_r+0x1a>
 80038ac:	682b      	ldr	r3, [r5, #0]
 80038ae:	b103      	cbz	r3, 80038b2 <_close_r+0x1a>
 80038b0:	6023      	str	r3, [r4, #0]
 80038b2:	bd38      	pop	{r3, r4, r5, pc}
 80038b4:	20000494 	.word	0x20000494

080038b8 <_lseek_r>:
 80038b8:	b538      	push	{r3, r4, r5, lr}
 80038ba:	4d07      	ldr	r5, [pc, #28]	@ (80038d8 <_lseek_r+0x20>)
 80038bc:	4604      	mov	r4, r0
 80038be:	4608      	mov	r0, r1
 80038c0:	4611      	mov	r1, r2
 80038c2:	2200      	movs	r2, #0
 80038c4:	602a      	str	r2, [r5, #0]
 80038c6:	461a      	mov	r2, r3
 80038c8:	f7fd fd99 	bl	80013fe <_lseek>
 80038cc:	1c43      	adds	r3, r0, #1
 80038ce:	d102      	bne.n	80038d6 <_lseek_r+0x1e>
 80038d0:	682b      	ldr	r3, [r5, #0]
 80038d2:	b103      	cbz	r3, 80038d6 <_lseek_r+0x1e>
 80038d4:	6023      	str	r3, [r4, #0]
 80038d6:	bd38      	pop	{r3, r4, r5, pc}
 80038d8:	20000494 	.word	0x20000494

080038dc <_read_r>:
 80038dc:	b538      	push	{r3, r4, r5, lr}
 80038de:	4d07      	ldr	r5, [pc, #28]	@ (80038fc <_read_r+0x20>)
 80038e0:	4604      	mov	r4, r0
 80038e2:	4608      	mov	r0, r1
 80038e4:	4611      	mov	r1, r2
 80038e6:	2200      	movs	r2, #0
 80038e8:	602a      	str	r2, [r5, #0]
 80038ea:	461a      	mov	r2, r3
 80038ec:	f7fd fd2a 	bl	8001344 <_read>
 80038f0:	1c43      	adds	r3, r0, #1
 80038f2:	d102      	bne.n	80038fa <_read_r+0x1e>
 80038f4:	682b      	ldr	r3, [r5, #0]
 80038f6:	b103      	cbz	r3, 80038fa <_read_r+0x1e>
 80038f8:	6023      	str	r3, [r4, #0]
 80038fa:	bd38      	pop	{r3, r4, r5, pc}
 80038fc:	20000494 	.word	0x20000494

08003900 <_sbrk_r>:
 8003900:	b538      	push	{r3, r4, r5, lr}
 8003902:	4d06      	ldr	r5, [pc, #24]	@ (800391c <_sbrk_r+0x1c>)
 8003904:	2300      	movs	r3, #0
 8003906:	4604      	mov	r4, r0
 8003908:	4608      	mov	r0, r1
 800390a:	602b      	str	r3, [r5, #0]
 800390c:	f7fd fd84 	bl	8001418 <_sbrk>
 8003910:	1c43      	adds	r3, r0, #1
 8003912:	d102      	bne.n	800391a <_sbrk_r+0x1a>
 8003914:	682b      	ldr	r3, [r5, #0]
 8003916:	b103      	cbz	r3, 800391a <_sbrk_r+0x1a>
 8003918:	6023      	str	r3, [r4, #0]
 800391a:	bd38      	pop	{r3, r4, r5, pc}
 800391c:	20000494 	.word	0x20000494

08003920 <_write_r>:
 8003920:	b538      	push	{r3, r4, r5, lr}
 8003922:	4d07      	ldr	r5, [pc, #28]	@ (8003940 <_write_r+0x20>)
 8003924:	4604      	mov	r4, r0
 8003926:	4608      	mov	r0, r1
 8003928:	4611      	mov	r1, r2
 800392a:	2200      	movs	r2, #0
 800392c:	602a      	str	r2, [r5, #0]
 800392e:	461a      	mov	r2, r3
 8003930:	f7fd fd25 	bl	800137e <_write>
 8003934:	1c43      	adds	r3, r0, #1
 8003936:	d102      	bne.n	800393e <_write_r+0x1e>
 8003938:	682b      	ldr	r3, [r5, #0]
 800393a:	b103      	cbz	r3, 800393e <_write_r+0x1e>
 800393c:	6023      	str	r3, [r4, #0]
 800393e:	bd38      	pop	{r3, r4, r5, pc}
 8003940:	20000494 	.word	0x20000494

08003944 <memcpy>:
 8003944:	440a      	add	r2, r1
 8003946:	4291      	cmp	r1, r2
 8003948:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800394c:	d100      	bne.n	8003950 <memcpy+0xc>
 800394e:	4770      	bx	lr
 8003950:	b510      	push	{r4, lr}
 8003952:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003956:	f803 4f01 	strb.w	r4, [r3, #1]!
 800395a:	4291      	cmp	r1, r2
 800395c:	d1f9      	bne.n	8003952 <memcpy+0xe>
 800395e:	bd10      	pop	{r4, pc}

08003960 <abort>:
 8003960:	b508      	push	{r3, lr}
 8003962:	2006      	movs	r0, #6
 8003964:	f000 fb02 	bl	8003f6c <raise>
 8003968:	2001      	movs	r0, #1
 800396a:	f7fd fce0 	bl	800132e <_exit>

0800396e <_calloc_r>:
 800396e:	b570      	push	{r4, r5, r6, lr}
 8003970:	fba1 5402 	umull	r5, r4, r1, r2
 8003974:	b93c      	cbnz	r4, 8003986 <_calloc_r+0x18>
 8003976:	4629      	mov	r1, r5
 8003978:	f7ff fa84 	bl	8002e84 <_malloc_r>
 800397c:	4606      	mov	r6, r0
 800397e:	b928      	cbnz	r0, 800398c <_calloc_r+0x1e>
 8003980:	2600      	movs	r6, #0
 8003982:	4630      	mov	r0, r6
 8003984:	bd70      	pop	{r4, r5, r6, pc}
 8003986:	220c      	movs	r2, #12
 8003988:	6002      	str	r2, [r0, #0]
 800398a:	e7f9      	b.n	8003980 <_calloc_r+0x12>
 800398c:	462a      	mov	r2, r5
 800398e:	4621      	mov	r1, r4
 8003990:	f7fe fb9c 	bl	80020cc <memset>
 8003994:	e7f5      	b.n	8003982 <_calloc_r+0x14>
	...

08003998 <_free_r>:
 8003998:	b538      	push	{r3, r4, r5, lr}
 800399a:	4605      	mov	r5, r0
 800399c:	2900      	cmp	r1, #0
 800399e:	d041      	beq.n	8003a24 <_free_r+0x8c>
 80039a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80039a4:	1f0c      	subs	r4, r1, #4
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	bfb8      	it	lt
 80039aa:	18e4      	addlt	r4, r4, r3
 80039ac:	f7ff fb92 	bl	80030d4 <__malloc_lock>
 80039b0:	4a1d      	ldr	r2, [pc, #116]	@ (8003a28 <_free_r+0x90>)
 80039b2:	6813      	ldr	r3, [r2, #0]
 80039b4:	b933      	cbnz	r3, 80039c4 <_free_r+0x2c>
 80039b6:	6063      	str	r3, [r4, #4]
 80039b8:	6014      	str	r4, [r2, #0]
 80039ba:	4628      	mov	r0, r5
 80039bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80039c0:	f7ff bb8e 	b.w	80030e0 <__malloc_unlock>
 80039c4:	42a3      	cmp	r3, r4
 80039c6:	d908      	bls.n	80039da <_free_r+0x42>
 80039c8:	6820      	ldr	r0, [r4, #0]
 80039ca:	1821      	adds	r1, r4, r0
 80039cc:	428b      	cmp	r3, r1
 80039ce:	bf01      	itttt	eq
 80039d0:	6819      	ldreq	r1, [r3, #0]
 80039d2:	685b      	ldreq	r3, [r3, #4]
 80039d4:	1809      	addeq	r1, r1, r0
 80039d6:	6021      	streq	r1, [r4, #0]
 80039d8:	e7ed      	b.n	80039b6 <_free_r+0x1e>
 80039da:	461a      	mov	r2, r3
 80039dc:	685b      	ldr	r3, [r3, #4]
 80039de:	b10b      	cbz	r3, 80039e4 <_free_r+0x4c>
 80039e0:	42a3      	cmp	r3, r4
 80039e2:	d9fa      	bls.n	80039da <_free_r+0x42>
 80039e4:	6811      	ldr	r1, [r2, #0]
 80039e6:	1850      	adds	r0, r2, r1
 80039e8:	42a0      	cmp	r0, r4
 80039ea:	d10b      	bne.n	8003a04 <_free_r+0x6c>
 80039ec:	6820      	ldr	r0, [r4, #0]
 80039ee:	4401      	add	r1, r0
 80039f0:	1850      	adds	r0, r2, r1
 80039f2:	4283      	cmp	r3, r0
 80039f4:	6011      	str	r1, [r2, #0]
 80039f6:	d1e0      	bne.n	80039ba <_free_r+0x22>
 80039f8:	6818      	ldr	r0, [r3, #0]
 80039fa:	685b      	ldr	r3, [r3, #4]
 80039fc:	6053      	str	r3, [r2, #4]
 80039fe:	4408      	add	r0, r1
 8003a00:	6010      	str	r0, [r2, #0]
 8003a02:	e7da      	b.n	80039ba <_free_r+0x22>
 8003a04:	d902      	bls.n	8003a0c <_free_r+0x74>
 8003a06:	230c      	movs	r3, #12
 8003a08:	602b      	str	r3, [r5, #0]
 8003a0a:	e7d6      	b.n	80039ba <_free_r+0x22>
 8003a0c:	6820      	ldr	r0, [r4, #0]
 8003a0e:	1821      	adds	r1, r4, r0
 8003a10:	428b      	cmp	r3, r1
 8003a12:	bf04      	itt	eq
 8003a14:	6819      	ldreq	r1, [r3, #0]
 8003a16:	685b      	ldreq	r3, [r3, #4]
 8003a18:	6063      	str	r3, [r4, #4]
 8003a1a:	bf04      	itt	eq
 8003a1c:	1809      	addeq	r1, r1, r0
 8003a1e:	6021      	streq	r1, [r4, #0]
 8003a20:	6054      	str	r4, [r2, #4]
 8003a22:	e7ca      	b.n	80039ba <_free_r+0x22>
 8003a24:	bd38      	pop	{r3, r4, r5, pc}
 8003a26:	bf00      	nop
 8003a28:	20000490 	.word	0x20000490

08003a2c <__sfputc_r>:
 8003a2c:	6893      	ldr	r3, [r2, #8]
 8003a2e:	3b01      	subs	r3, #1
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	b410      	push	{r4}
 8003a34:	6093      	str	r3, [r2, #8]
 8003a36:	da07      	bge.n	8003a48 <__sfputc_r+0x1c>
 8003a38:	6994      	ldr	r4, [r2, #24]
 8003a3a:	42a3      	cmp	r3, r4
 8003a3c:	db01      	blt.n	8003a42 <__sfputc_r+0x16>
 8003a3e:	290a      	cmp	r1, #10
 8003a40:	d102      	bne.n	8003a48 <__sfputc_r+0x1c>
 8003a42:	bc10      	pop	{r4}
 8003a44:	f000 b944 	b.w	8003cd0 <__swbuf_r>
 8003a48:	6813      	ldr	r3, [r2, #0]
 8003a4a:	1c58      	adds	r0, r3, #1
 8003a4c:	6010      	str	r0, [r2, #0]
 8003a4e:	7019      	strb	r1, [r3, #0]
 8003a50:	4608      	mov	r0, r1
 8003a52:	bc10      	pop	{r4}
 8003a54:	4770      	bx	lr

08003a56 <__sfputs_r>:
 8003a56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a58:	4606      	mov	r6, r0
 8003a5a:	460f      	mov	r7, r1
 8003a5c:	4614      	mov	r4, r2
 8003a5e:	18d5      	adds	r5, r2, r3
 8003a60:	42ac      	cmp	r4, r5
 8003a62:	d101      	bne.n	8003a68 <__sfputs_r+0x12>
 8003a64:	2000      	movs	r0, #0
 8003a66:	e007      	b.n	8003a78 <__sfputs_r+0x22>
 8003a68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a6c:	463a      	mov	r2, r7
 8003a6e:	4630      	mov	r0, r6
 8003a70:	f7ff ffdc 	bl	8003a2c <__sfputc_r>
 8003a74:	1c43      	adds	r3, r0, #1
 8003a76:	d1f3      	bne.n	8003a60 <__sfputs_r+0xa>
 8003a78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003a7c <_vfiprintf_r>:
 8003a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a80:	460d      	mov	r5, r1
 8003a82:	b09d      	sub	sp, #116	@ 0x74
 8003a84:	4614      	mov	r4, r2
 8003a86:	4698      	mov	r8, r3
 8003a88:	4606      	mov	r6, r0
 8003a8a:	b118      	cbz	r0, 8003a94 <_vfiprintf_r+0x18>
 8003a8c:	6a03      	ldr	r3, [r0, #32]
 8003a8e:	b90b      	cbnz	r3, 8003a94 <_vfiprintf_r+0x18>
 8003a90:	f7fe fa06 	bl	8001ea0 <__sinit>
 8003a94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003a96:	07d9      	lsls	r1, r3, #31
 8003a98:	d405      	bmi.n	8003aa6 <_vfiprintf_r+0x2a>
 8003a9a:	89ab      	ldrh	r3, [r5, #12]
 8003a9c:	059a      	lsls	r2, r3, #22
 8003a9e:	d402      	bmi.n	8003aa6 <_vfiprintf_r+0x2a>
 8003aa0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003aa2:	f7fe fb4a 	bl	800213a <__retarget_lock_acquire_recursive>
 8003aa6:	89ab      	ldrh	r3, [r5, #12]
 8003aa8:	071b      	lsls	r3, r3, #28
 8003aaa:	d501      	bpl.n	8003ab0 <_vfiprintf_r+0x34>
 8003aac:	692b      	ldr	r3, [r5, #16]
 8003aae:	b99b      	cbnz	r3, 8003ad8 <_vfiprintf_r+0x5c>
 8003ab0:	4629      	mov	r1, r5
 8003ab2:	4630      	mov	r0, r6
 8003ab4:	f000 f94a 	bl	8003d4c <__swsetup_r>
 8003ab8:	b170      	cbz	r0, 8003ad8 <_vfiprintf_r+0x5c>
 8003aba:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003abc:	07dc      	lsls	r4, r3, #31
 8003abe:	d504      	bpl.n	8003aca <_vfiprintf_r+0x4e>
 8003ac0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003ac4:	b01d      	add	sp, #116	@ 0x74
 8003ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003aca:	89ab      	ldrh	r3, [r5, #12]
 8003acc:	0598      	lsls	r0, r3, #22
 8003ace:	d4f7      	bmi.n	8003ac0 <_vfiprintf_r+0x44>
 8003ad0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003ad2:	f7fe fb33 	bl	800213c <__retarget_lock_release_recursive>
 8003ad6:	e7f3      	b.n	8003ac0 <_vfiprintf_r+0x44>
 8003ad8:	2300      	movs	r3, #0
 8003ada:	9309      	str	r3, [sp, #36]	@ 0x24
 8003adc:	2320      	movs	r3, #32
 8003ade:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003ae2:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ae6:	2330      	movs	r3, #48	@ 0x30
 8003ae8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003c98 <_vfiprintf_r+0x21c>
 8003aec:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003af0:	f04f 0901 	mov.w	r9, #1
 8003af4:	4623      	mov	r3, r4
 8003af6:	469a      	mov	sl, r3
 8003af8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003afc:	b10a      	cbz	r2, 8003b02 <_vfiprintf_r+0x86>
 8003afe:	2a25      	cmp	r2, #37	@ 0x25
 8003b00:	d1f9      	bne.n	8003af6 <_vfiprintf_r+0x7a>
 8003b02:	ebba 0b04 	subs.w	fp, sl, r4
 8003b06:	d00b      	beq.n	8003b20 <_vfiprintf_r+0xa4>
 8003b08:	465b      	mov	r3, fp
 8003b0a:	4622      	mov	r2, r4
 8003b0c:	4629      	mov	r1, r5
 8003b0e:	4630      	mov	r0, r6
 8003b10:	f7ff ffa1 	bl	8003a56 <__sfputs_r>
 8003b14:	3001      	adds	r0, #1
 8003b16:	f000 80a7 	beq.w	8003c68 <_vfiprintf_r+0x1ec>
 8003b1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b1c:	445a      	add	r2, fp
 8003b1e:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b20:	f89a 3000 	ldrb.w	r3, [sl]
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	f000 809f 	beq.w	8003c68 <_vfiprintf_r+0x1ec>
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003b30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003b34:	f10a 0a01 	add.w	sl, sl, #1
 8003b38:	9304      	str	r3, [sp, #16]
 8003b3a:	9307      	str	r3, [sp, #28]
 8003b3c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003b40:	931a      	str	r3, [sp, #104]	@ 0x68
 8003b42:	4654      	mov	r4, sl
 8003b44:	2205      	movs	r2, #5
 8003b46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b4a:	4853      	ldr	r0, [pc, #332]	@ (8003c98 <_vfiprintf_r+0x21c>)
 8003b4c:	f7fc fb48 	bl	80001e0 <memchr>
 8003b50:	9a04      	ldr	r2, [sp, #16]
 8003b52:	b9d8      	cbnz	r0, 8003b8c <_vfiprintf_r+0x110>
 8003b54:	06d1      	lsls	r1, r2, #27
 8003b56:	bf44      	itt	mi
 8003b58:	2320      	movmi	r3, #32
 8003b5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b5e:	0713      	lsls	r3, r2, #28
 8003b60:	bf44      	itt	mi
 8003b62:	232b      	movmi	r3, #43	@ 0x2b
 8003b64:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b68:	f89a 3000 	ldrb.w	r3, [sl]
 8003b6c:	2b2a      	cmp	r3, #42	@ 0x2a
 8003b6e:	d015      	beq.n	8003b9c <_vfiprintf_r+0x120>
 8003b70:	9a07      	ldr	r2, [sp, #28]
 8003b72:	4654      	mov	r4, sl
 8003b74:	2000      	movs	r0, #0
 8003b76:	f04f 0c0a 	mov.w	ip, #10
 8003b7a:	4621      	mov	r1, r4
 8003b7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003b80:	3b30      	subs	r3, #48	@ 0x30
 8003b82:	2b09      	cmp	r3, #9
 8003b84:	d94b      	bls.n	8003c1e <_vfiprintf_r+0x1a2>
 8003b86:	b1b0      	cbz	r0, 8003bb6 <_vfiprintf_r+0x13a>
 8003b88:	9207      	str	r2, [sp, #28]
 8003b8a:	e014      	b.n	8003bb6 <_vfiprintf_r+0x13a>
 8003b8c:	eba0 0308 	sub.w	r3, r0, r8
 8003b90:	fa09 f303 	lsl.w	r3, r9, r3
 8003b94:	4313      	orrs	r3, r2
 8003b96:	9304      	str	r3, [sp, #16]
 8003b98:	46a2      	mov	sl, r4
 8003b9a:	e7d2      	b.n	8003b42 <_vfiprintf_r+0xc6>
 8003b9c:	9b03      	ldr	r3, [sp, #12]
 8003b9e:	1d19      	adds	r1, r3, #4
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	9103      	str	r1, [sp, #12]
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	bfbb      	ittet	lt
 8003ba8:	425b      	neglt	r3, r3
 8003baa:	f042 0202 	orrlt.w	r2, r2, #2
 8003bae:	9307      	strge	r3, [sp, #28]
 8003bb0:	9307      	strlt	r3, [sp, #28]
 8003bb2:	bfb8      	it	lt
 8003bb4:	9204      	strlt	r2, [sp, #16]
 8003bb6:	7823      	ldrb	r3, [r4, #0]
 8003bb8:	2b2e      	cmp	r3, #46	@ 0x2e
 8003bba:	d10a      	bne.n	8003bd2 <_vfiprintf_r+0x156>
 8003bbc:	7863      	ldrb	r3, [r4, #1]
 8003bbe:	2b2a      	cmp	r3, #42	@ 0x2a
 8003bc0:	d132      	bne.n	8003c28 <_vfiprintf_r+0x1ac>
 8003bc2:	9b03      	ldr	r3, [sp, #12]
 8003bc4:	1d1a      	adds	r2, r3, #4
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	9203      	str	r2, [sp, #12]
 8003bca:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003bce:	3402      	adds	r4, #2
 8003bd0:	9305      	str	r3, [sp, #20]
 8003bd2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8003c9c <_vfiprintf_r+0x220>
 8003bd6:	7821      	ldrb	r1, [r4, #0]
 8003bd8:	2203      	movs	r2, #3
 8003bda:	4650      	mov	r0, sl
 8003bdc:	f7fc fb00 	bl	80001e0 <memchr>
 8003be0:	b138      	cbz	r0, 8003bf2 <_vfiprintf_r+0x176>
 8003be2:	9b04      	ldr	r3, [sp, #16]
 8003be4:	eba0 000a 	sub.w	r0, r0, sl
 8003be8:	2240      	movs	r2, #64	@ 0x40
 8003bea:	4082      	lsls	r2, r0
 8003bec:	4313      	orrs	r3, r2
 8003bee:	3401      	adds	r4, #1
 8003bf0:	9304      	str	r3, [sp, #16]
 8003bf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bf6:	482a      	ldr	r0, [pc, #168]	@ (8003ca0 <_vfiprintf_r+0x224>)
 8003bf8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003bfc:	2206      	movs	r2, #6
 8003bfe:	f7fc faef 	bl	80001e0 <memchr>
 8003c02:	2800      	cmp	r0, #0
 8003c04:	d03f      	beq.n	8003c86 <_vfiprintf_r+0x20a>
 8003c06:	4b27      	ldr	r3, [pc, #156]	@ (8003ca4 <_vfiprintf_r+0x228>)
 8003c08:	bb1b      	cbnz	r3, 8003c52 <_vfiprintf_r+0x1d6>
 8003c0a:	9b03      	ldr	r3, [sp, #12]
 8003c0c:	3307      	adds	r3, #7
 8003c0e:	f023 0307 	bic.w	r3, r3, #7
 8003c12:	3308      	adds	r3, #8
 8003c14:	9303      	str	r3, [sp, #12]
 8003c16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c18:	443b      	add	r3, r7
 8003c1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c1c:	e76a      	b.n	8003af4 <_vfiprintf_r+0x78>
 8003c1e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c22:	460c      	mov	r4, r1
 8003c24:	2001      	movs	r0, #1
 8003c26:	e7a8      	b.n	8003b7a <_vfiprintf_r+0xfe>
 8003c28:	2300      	movs	r3, #0
 8003c2a:	3401      	adds	r4, #1
 8003c2c:	9305      	str	r3, [sp, #20]
 8003c2e:	4619      	mov	r1, r3
 8003c30:	f04f 0c0a 	mov.w	ip, #10
 8003c34:	4620      	mov	r0, r4
 8003c36:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003c3a:	3a30      	subs	r2, #48	@ 0x30
 8003c3c:	2a09      	cmp	r2, #9
 8003c3e:	d903      	bls.n	8003c48 <_vfiprintf_r+0x1cc>
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d0c6      	beq.n	8003bd2 <_vfiprintf_r+0x156>
 8003c44:	9105      	str	r1, [sp, #20]
 8003c46:	e7c4      	b.n	8003bd2 <_vfiprintf_r+0x156>
 8003c48:	fb0c 2101 	mla	r1, ip, r1, r2
 8003c4c:	4604      	mov	r4, r0
 8003c4e:	2301      	movs	r3, #1
 8003c50:	e7f0      	b.n	8003c34 <_vfiprintf_r+0x1b8>
 8003c52:	ab03      	add	r3, sp, #12
 8003c54:	9300      	str	r3, [sp, #0]
 8003c56:	462a      	mov	r2, r5
 8003c58:	4b13      	ldr	r3, [pc, #76]	@ (8003ca8 <_vfiprintf_r+0x22c>)
 8003c5a:	a904      	add	r1, sp, #16
 8003c5c:	4630      	mov	r0, r6
 8003c5e:	f7fd fcd9 	bl	8001614 <_printf_float>
 8003c62:	4607      	mov	r7, r0
 8003c64:	1c78      	adds	r0, r7, #1
 8003c66:	d1d6      	bne.n	8003c16 <_vfiprintf_r+0x19a>
 8003c68:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003c6a:	07d9      	lsls	r1, r3, #31
 8003c6c:	d405      	bmi.n	8003c7a <_vfiprintf_r+0x1fe>
 8003c6e:	89ab      	ldrh	r3, [r5, #12]
 8003c70:	059a      	lsls	r2, r3, #22
 8003c72:	d402      	bmi.n	8003c7a <_vfiprintf_r+0x1fe>
 8003c74:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003c76:	f7fe fa61 	bl	800213c <__retarget_lock_release_recursive>
 8003c7a:	89ab      	ldrh	r3, [r5, #12]
 8003c7c:	065b      	lsls	r3, r3, #25
 8003c7e:	f53f af1f 	bmi.w	8003ac0 <_vfiprintf_r+0x44>
 8003c82:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003c84:	e71e      	b.n	8003ac4 <_vfiprintf_r+0x48>
 8003c86:	ab03      	add	r3, sp, #12
 8003c88:	9300      	str	r3, [sp, #0]
 8003c8a:	462a      	mov	r2, r5
 8003c8c:	4b06      	ldr	r3, [pc, #24]	@ (8003ca8 <_vfiprintf_r+0x22c>)
 8003c8e:	a904      	add	r1, sp, #16
 8003c90:	4630      	mov	r0, r6
 8003c92:	f7fd ff59 	bl	8001b48 <_printf_i>
 8003c96:	e7e4      	b.n	8003c62 <_vfiprintf_r+0x1e6>
 8003c98:	080043ba 	.word	0x080043ba
 8003c9c:	080043c0 	.word	0x080043c0
 8003ca0:	080043c4 	.word	0x080043c4
 8003ca4:	08001615 	.word	0x08001615
 8003ca8:	08003a57 	.word	0x08003a57

08003cac <__ascii_mbtowc>:
 8003cac:	b082      	sub	sp, #8
 8003cae:	b901      	cbnz	r1, 8003cb2 <__ascii_mbtowc+0x6>
 8003cb0:	a901      	add	r1, sp, #4
 8003cb2:	b142      	cbz	r2, 8003cc6 <__ascii_mbtowc+0x1a>
 8003cb4:	b14b      	cbz	r3, 8003cca <__ascii_mbtowc+0x1e>
 8003cb6:	7813      	ldrb	r3, [r2, #0]
 8003cb8:	600b      	str	r3, [r1, #0]
 8003cba:	7812      	ldrb	r2, [r2, #0]
 8003cbc:	1e10      	subs	r0, r2, #0
 8003cbe:	bf18      	it	ne
 8003cc0:	2001      	movne	r0, #1
 8003cc2:	b002      	add	sp, #8
 8003cc4:	4770      	bx	lr
 8003cc6:	4610      	mov	r0, r2
 8003cc8:	e7fb      	b.n	8003cc2 <__ascii_mbtowc+0x16>
 8003cca:	f06f 0001 	mvn.w	r0, #1
 8003cce:	e7f8      	b.n	8003cc2 <__ascii_mbtowc+0x16>

08003cd0 <__swbuf_r>:
 8003cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cd2:	460e      	mov	r6, r1
 8003cd4:	4614      	mov	r4, r2
 8003cd6:	4605      	mov	r5, r0
 8003cd8:	b118      	cbz	r0, 8003ce2 <__swbuf_r+0x12>
 8003cda:	6a03      	ldr	r3, [r0, #32]
 8003cdc:	b90b      	cbnz	r3, 8003ce2 <__swbuf_r+0x12>
 8003cde:	f7fe f8df 	bl	8001ea0 <__sinit>
 8003ce2:	69a3      	ldr	r3, [r4, #24]
 8003ce4:	60a3      	str	r3, [r4, #8]
 8003ce6:	89a3      	ldrh	r3, [r4, #12]
 8003ce8:	071a      	lsls	r2, r3, #28
 8003cea:	d501      	bpl.n	8003cf0 <__swbuf_r+0x20>
 8003cec:	6923      	ldr	r3, [r4, #16]
 8003cee:	b943      	cbnz	r3, 8003d02 <__swbuf_r+0x32>
 8003cf0:	4621      	mov	r1, r4
 8003cf2:	4628      	mov	r0, r5
 8003cf4:	f000 f82a 	bl	8003d4c <__swsetup_r>
 8003cf8:	b118      	cbz	r0, 8003d02 <__swbuf_r+0x32>
 8003cfa:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8003cfe:	4638      	mov	r0, r7
 8003d00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d02:	6823      	ldr	r3, [r4, #0]
 8003d04:	6922      	ldr	r2, [r4, #16]
 8003d06:	1a98      	subs	r0, r3, r2
 8003d08:	6963      	ldr	r3, [r4, #20]
 8003d0a:	b2f6      	uxtb	r6, r6
 8003d0c:	4283      	cmp	r3, r0
 8003d0e:	4637      	mov	r7, r6
 8003d10:	dc05      	bgt.n	8003d1e <__swbuf_r+0x4e>
 8003d12:	4621      	mov	r1, r4
 8003d14:	4628      	mov	r0, r5
 8003d16:	f7ff f9b5 	bl	8003084 <_fflush_r>
 8003d1a:	2800      	cmp	r0, #0
 8003d1c:	d1ed      	bne.n	8003cfa <__swbuf_r+0x2a>
 8003d1e:	68a3      	ldr	r3, [r4, #8]
 8003d20:	3b01      	subs	r3, #1
 8003d22:	60a3      	str	r3, [r4, #8]
 8003d24:	6823      	ldr	r3, [r4, #0]
 8003d26:	1c5a      	adds	r2, r3, #1
 8003d28:	6022      	str	r2, [r4, #0]
 8003d2a:	701e      	strb	r6, [r3, #0]
 8003d2c:	6962      	ldr	r2, [r4, #20]
 8003d2e:	1c43      	adds	r3, r0, #1
 8003d30:	429a      	cmp	r2, r3
 8003d32:	d004      	beq.n	8003d3e <__swbuf_r+0x6e>
 8003d34:	89a3      	ldrh	r3, [r4, #12]
 8003d36:	07db      	lsls	r3, r3, #31
 8003d38:	d5e1      	bpl.n	8003cfe <__swbuf_r+0x2e>
 8003d3a:	2e0a      	cmp	r6, #10
 8003d3c:	d1df      	bne.n	8003cfe <__swbuf_r+0x2e>
 8003d3e:	4621      	mov	r1, r4
 8003d40:	4628      	mov	r0, r5
 8003d42:	f7ff f99f 	bl	8003084 <_fflush_r>
 8003d46:	2800      	cmp	r0, #0
 8003d48:	d0d9      	beq.n	8003cfe <__swbuf_r+0x2e>
 8003d4a:	e7d6      	b.n	8003cfa <__swbuf_r+0x2a>

08003d4c <__swsetup_r>:
 8003d4c:	b538      	push	{r3, r4, r5, lr}
 8003d4e:	4b29      	ldr	r3, [pc, #164]	@ (8003df4 <__swsetup_r+0xa8>)
 8003d50:	4605      	mov	r5, r0
 8003d52:	6818      	ldr	r0, [r3, #0]
 8003d54:	460c      	mov	r4, r1
 8003d56:	b118      	cbz	r0, 8003d60 <__swsetup_r+0x14>
 8003d58:	6a03      	ldr	r3, [r0, #32]
 8003d5a:	b90b      	cbnz	r3, 8003d60 <__swsetup_r+0x14>
 8003d5c:	f7fe f8a0 	bl	8001ea0 <__sinit>
 8003d60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d64:	0719      	lsls	r1, r3, #28
 8003d66:	d422      	bmi.n	8003dae <__swsetup_r+0x62>
 8003d68:	06da      	lsls	r2, r3, #27
 8003d6a:	d407      	bmi.n	8003d7c <__swsetup_r+0x30>
 8003d6c:	2209      	movs	r2, #9
 8003d6e:	602a      	str	r2, [r5, #0]
 8003d70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d74:	81a3      	strh	r3, [r4, #12]
 8003d76:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003d7a:	e033      	b.n	8003de4 <__swsetup_r+0x98>
 8003d7c:	0758      	lsls	r0, r3, #29
 8003d7e:	d512      	bpl.n	8003da6 <__swsetup_r+0x5a>
 8003d80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003d82:	b141      	cbz	r1, 8003d96 <__swsetup_r+0x4a>
 8003d84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003d88:	4299      	cmp	r1, r3
 8003d8a:	d002      	beq.n	8003d92 <__swsetup_r+0x46>
 8003d8c:	4628      	mov	r0, r5
 8003d8e:	f7ff fe03 	bl	8003998 <_free_r>
 8003d92:	2300      	movs	r3, #0
 8003d94:	6363      	str	r3, [r4, #52]	@ 0x34
 8003d96:	89a3      	ldrh	r3, [r4, #12]
 8003d98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003d9c:	81a3      	strh	r3, [r4, #12]
 8003d9e:	2300      	movs	r3, #0
 8003da0:	6063      	str	r3, [r4, #4]
 8003da2:	6923      	ldr	r3, [r4, #16]
 8003da4:	6023      	str	r3, [r4, #0]
 8003da6:	89a3      	ldrh	r3, [r4, #12]
 8003da8:	f043 0308 	orr.w	r3, r3, #8
 8003dac:	81a3      	strh	r3, [r4, #12]
 8003dae:	6923      	ldr	r3, [r4, #16]
 8003db0:	b94b      	cbnz	r3, 8003dc6 <__swsetup_r+0x7a>
 8003db2:	89a3      	ldrh	r3, [r4, #12]
 8003db4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003db8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003dbc:	d003      	beq.n	8003dc6 <__swsetup_r+0x7a>
 8003dbe:	4621      	mov	r1, r4
 8003dc0:	4628      	mov	r0, r5
 8003dc2:	f000 f84c 	bl	8003e5e <__smakebuf_r>
 8003dc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003dca:	f013 0201 	ands.w	r2, r3, #1
 8003dce:	d00a      	beq.n	8003de6 <__swsetup_r+0x9a>
 8003dd0:	2200      	movs	r2, #0
 8003dd2:	60a2      	str	r2, [r4, #8]
 8003dd4:	6962      	ldr	r2, [r4, #20]
 8003dd6:	4252      	negs	r2, r2
 8003dd8:	61a2      	str	r2, [r4, #24]
 8003dda:	6922      	ldr	r2, [r4, #16]
 8003ddc:	b942      	cbnz	r2, 8003df0 <__swsetup_r+0xa4>
 8003dde:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003de2:	d1c5      	bne.n	8003d70 <__swsetup_r+0x24>
 8003de4:	bd38      	pop	{r3, r4, r5, pc}
 8003de6:	0799      	lsls	r1, r3, #30
 8003de8:	bf58      	it	pl
 8003dea:	6962      	ldrpl	r2, [r4, #20]
 8003dec:	60a2      	str	r2, [r4, #8]
 8003dee:	e7f4      	b.n	8003dda <__swsetup_r+0x8e>
 8003df0:	2000      	movs	r0, #0
 8003df2:	e7f7      	b.n	8003de4 <__swsetup_r+0x98>
 8003df4:	20000038 	.word	0x20000038

08003df8 <__ascii_wctomb>:
 8003df8:	4603      	mov	r3, r0
 8003dfa:	4608      	mov	r0, r1
 8003dfc:	b141      	cbz	r1, 8003e10 <__ascii_wctomb+0x18>
 8003dfe:	2aff      	cmp	r2, #255	@ 0xff
 8003e00:	d904      	bls.n	8003e0c <__ascii_wctomb+0x14>
 8003e02:	228a      	movs	r2, #138	@ 0x8a
 8003e04:	601a      	str	r2, [r3, #0]
 8003e06:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003e0a:	4770      	bx	lr
 8003e0c:	700a      	strb	r2, [r1, #0]
 8003e0e:	2001      	movs	r0, #1
 8003e10:	4770      	bx	lr

08003e12 <__swhatbuf_r>:
 8003e12:	b570      	push	{r4, r5, r6, lr}
 8003e14:	460c      	mov	r4, r1
 8003e16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003e1a:	2900      	cmp	r1, #0
 8003e1c:	b096      	sub	sp, #88	@ 0x58
 8003e1e:	4615      	mov	r5, r2
 8003e20:	461e      	mov	r6, r3
 8003e22:	da0d      	bge.n	8003e40 <__swhatbuf_r+0x2e>
 8003e24:	89a3      	ldrh	r3, [r4, #12]
 8003e26:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003e2a:	f04f 0100 	mov.w	r1, #0
 8003e2e:	bf14      	ite	ne
 8003e30:	2340      	movne	r3, #64	@ 0x40
 8003e32:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003e36:	2000      	movs	r0, #0
 8003e38:	6031      	str	r1, [r6, #0]
 8003e3a:	602b      	str	r3, [r5, #0]
 8003e3c:	b016      	add	sp, #88	@ 0x58
 8003e3e:	bd70      	pop	{r4, r5, r6, pc}
 8003e40:	466a      	mov	r2, sp
 8003e42:	f000 f849 	bl	8003ed8 <_fstat_r>
 8003e46:	2800      	cmp	r0, #0
 8003e48:	dbec      	blt.n	8003e24 <__swhatbuf_r+0x12>
 8003e4a:	9901      	ldr	r1, [sp, #4]
 8003e4c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003e50:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003e54:	4259      	negs	r1, r3
 8003e56:	4159      	adcs	r1, r3
 8003e58:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003e5c:	e7eb      	b.n	8003e36 <__swhatbuf_r+0x24>

08003e5e <__smakebuf_r>:
 8003e5e:	898b      	ldrh	r3, [r1, #12]
 8003e60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e62:	079d      	lsls	r5, r3, #30
 8003e64:	4606      	mov	r6, r0
 8003e66:	460c      	mov	r4, r1
 8003e68:	d507      	bpl.n	8003e7a <__smakebuf_r+0x1c>
 8003e6a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003e6e:	6023      	str	r3, [r4, #0]
 8003e70:	6123      	str	r3, [r4, #16]
 8003e72:	2301      	movs	r3, #1
 8003e74:	6163      	str	r3, [r4, #20]
 8003e76:	b003      	add	sp, #12
 8003e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e7a:	ab01      	add	r3, sp, #4
 8003e7c:	466a      	mov	r2, sp
 8003e7e:	f7ff ffc8 	bl	8003e12 <__swhatbuf_r>
 8003e82:	9f00      	ldr	r7, [sp, #0]
 8003e84:	4605      	mov	r5, r0
 8003e86:	4639      	mov	r1, r7
 8003e88:	4630      	mov	r0, r6
 8003e8a:	f7fe fffb 	bl	8002e84 <_malloc_r>
 8003e8e:	b948      	cbnz	r0, 8003ea4 <__smakebuf_r+0x46>
 8003e90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e94:	059a      	lsls	r2, r3, #22
 8003e96:	d4ee      	bmi.n	8003e76 <__smakebuf_r+0x18>
 8003e98:	f023 0303 	bic.w	r3, r3, #3
 8003e9c:	f043 0302 	orr.w	r3, r3, #2
 8003ea0:	81a3      	strh	r3, [r4, #12]
 8003ea2:	e7e2      	b.n	8003e6a <__smakebuf_r+0xc>
 8003ea4:	89a3      	ldrh	r3, [r4, #12]
 8003ea6:	6020      	str	r0, [r4, #0]
 8003ea8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003eac:	81a3      	strh	r3, [r4, #12]
 8003eae:	9b01      	ldr	r3, [sp, #4]
 8003eb0:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003eb4:	b15b      	cbz	r3, 8003ece <__smakebuf_r+0x70>
 8003eb6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003eba:	4630      	mov	r0, r6
 8003ebc:	f000 f81e 	bl	8003efc <_isatty_r>
 8003ec0:	b128      	cbz	r0, 8003ece <__smakebuf_r+0x70>
 8003ec2:	89a3      	ldrh	r3, [r4, #12]
 8003ec4:	f023 0303 	bic.w	r3, r3, #3
 8003ec8:	f043 0301 	orr.w	r3, r3, #1
 8003ecc:	81a3      	strh	r3, [r4, #12]
 8003ece:	89a3      	ldrh	r3, [r4, #12]
 8003ed0:	431d      	orrs	r5, r3
 8003ed2:	81a5      	strh	r5, [r4, #12]
 8003ed4:	e7cf      	b.n	8003e76 <__smakebuf_r+0x18>
	...

08003ed8 <_fstat_r>:
 8003ed8:	b538      	push	{r3, r4, r5, lr}
 8003eda:	4d07      	ldr	r5, [pc, #28]	@ (8003ef8 <_fstat_r+0x20>)
 8003edc:	2300      	movs	r3, #0
 8003ede:	4604      	mov	r4, r0
 8003ee0:	4608      	mov	r0, r1
 8003ee2:	4611      	mov	r1, r2
 8003ee4:	602b      	str	r3, [r5, #0]
 8003ee6:	f7fd fa71 	bl	80013cc <_fstat>
 8003eea:	1c43      	adds	r3, r0, #1
 8003eec:	d102      	bne.n	8003ef4 <_fstat_r+0x1c>
 8003eee:	682b      	ldr	r3, [r5, #0]
 8003ef0:	b103      	cbz	r3, 8003ef4 <_fstat_r+0x1c>
 8003ef2:	6023      	str	r3, [r4, #0]
 8003ef4:	bd38      	pop	{r3, r4, r5, pc}
 8003ef6:	bf00      	nop
 8003ef8:	20000494 	.word	0x20000494

08003efc <_isatty_r>:
 8003efc:	b538      	push	{r3, r4, r5, lr}
 8003efe:	4d06      	ldr	r5, [pc, #24]	@ (8003f18 <_isatty_r+0x1c>)
 8003f00:	2300      	movs	r3, #0
 8003f02:	4604      	mov	r4, r0
 8003f04:	4608      	mov	r0, r1
 8003f06:	602b      	str	r3, [r5, #0]
 8003f08:	f7fd fa6f 	bl	80013ea <_isatty>
 8003f0c:	1c43      	adds	r3, r0, #1
 8003f0e:	d102      	bne.n	8003f16 <_isatty_r+0x1a>
 8003f10:	682b      	ldr	r3, [r5, #0]
 8003f12:	b103      	cbz	r3, 8003f16 <_isatty_r+0x1a>
 8003f14:	6023      	str	r3, [r4, #0]
 8003f16:	bd38      	pop	{r3, r4, r5, pc}
 8003f18:	20000494 	.word	0x20000494

08003f1c <_raise_r>:
 8003f1c:	291f      	cmp	r1, #31
 8003f1e:	b538      	push	{r3, r4, r5, lr}
 8003f20:	4605      	mov	r5, r0
 8003f22:	460c      	mov	r4, r1
 8003f24:	d904      	bls.n	8003f30 <_raise_r+0x14>
 8003f26:	2316      	movs	r3, #22
 8003f28:	6003      	str	r3, [r0, #0]
 8003f2a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003f2e:	bd38      	pop	{r3, r4, r5, pc}
 8003f30:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003f32:	b112      	cbz	r2, 8003f3a <_raise_r+0x1e>
 8003f34:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003f38:	b94b      	cbnz	r3, 8003f4e <_raise_r+0x32>
 8003f3a:	4628      	mov	r0, r5
 8003f3c:	f000 f830 	bl	8003fa0 <_getpid_r>
 8003f40:	4622      	mov	r2, r4
 8003f42:	4601      	mov	r1, r0
 8003f44:	4628      	mov	r0, r5
 8003f46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f4a:	f000 b817 	b.w	8003f7c <_kill_r>
 8003f4e:	2b01      	cmp	r3, #1
 8003f50:	d00a      	beq.n	8003f68 <_raise_r+0x4c>
 8003f52:	1c59      	adds	r1, r3, #1
 8003f54:	d103      	bne.n	8003f5e <_raise_r+0x42>
 8003f56:	2316      	movs	r3, #22
 8003f58:	6003      	str	r3, [r0, #0]
 8003f5a:	2001      	movs	r0, #1
 8003f5c:	e7e7      	b.n	8003f2e <_raise_r+0x12>
 8003f5e:	2100      	movs	r1, #0
 8003f60:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8003f64:	4620      	mov	r0, r4
 8003f66:	4798      	blx	r3
 8003f68:	2000      	movs	r0, #0
 8003f6a:	e7e0      	b.n	8003f2e <_raise_r+0x12>

08003f6c <raise>:
 8003f6c:	4b02      	ldr	r3, [pc, #8]	@ (8003f78 <raise+0xc>)
 8003f6e:	4601      	mov	r1, r0
 8003f70:	6818      	ldr	r0, [r3, #0]
 8003f72:	f7ff bfd3 	b.w	8003f1c <_raise_r>
 8003f76:	bf00      	nop
 8003f78:	20000038 	.word	0x20000038

08003f7c <_kill_r>:
 8003f7c:	b538      	push	{r3, r4, r5, lr}
 8003f7e:	4d07      	ldr	r5, [pc, #28]	@ (8003f9c <_kill_r+0x20>)
 8003f80:	2300      	movs	r3, #0
 8003f82:	4604      	mov	r4, r0
 8003f84:	4608      	mov	r0, r1
 8003f86:	4611      	mov	r1, r2
 8003f88:	602b      	str	r3, [r5, #0]
 8003f8a:	f7fd f9c0 	bl	800130e <_kill>
 8003f8e:	1c43      	adds	r3, r0, #1
 8003f90:	d102      	bne.n	8003f98 <_kill_r+0x1c>
 8003f92:	682b      	ldr	r3, [r5, #0]
 8003f94:	b103      	cbz	r3, 8003f98 <_kill_r+0x1c>
 8003f96:	6023      	str	r3, [r4, #0]
 8003f98:	bd38      	pop	{r3, r4, r5, pc}
 8003f9a:	bf00      	nop
 8003f9c:	20000494 	.word	0x20000494

08003fa0 <_getpid_r>:
 8003fa0:	f7fd b9ae 	b.w	8001300 <_getpid>

08003fa4 <_init>:
 8003fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fa6:	bf00      	nop
 8003fa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003faa:	bc08      	pop	{r3}
 8003fac:	469e      	mov	lr, r3
 8003fae:	4770      	bx	lr

08003fb0 <_fini>:
 8003fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fb2:	bf00      	nop
 8003fb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003fb6:	bc08      	pop	{r3}
 8003fb8:	469e      	mov	lr, r3
 8003fba:	4770      	bx	lr
